{"meta":{"title":"Disinuo的博客","subtitle":"Better Me ^ ^","description":"做更好的自己~","author":"Disinuo","url":"http://yoursite.com"},"pages":[{"title":"关于","date":"2017-01-25T14:52:53.000Z","updated":"2022-09-28T23:42:02.459Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"更新于2018-11-26 个人简介 姓名：邸思诺性别：女生日：1996年生身份：清华大学18级软件学院研究生爱好：爱好广泛~喜欢唱歌、听歌、画画、弹弹吉他、跑跑步、看看电影什么的~ 网易云电台原链接戳这里~ dsn的英语经典台词练习不定期更 联系我 dsn960401@gmail.com在下面留言我们交换友链呀~~^ ^ 建站初衷2016-12-11在室友的提议下搭了这个博客。刚开始觉得很是神奇啊~而且有一个自己畅所欲言并且整个网站都随便改的地方，就一个字，爽！另外学习过程中遇到的各种坑，各种难懂的东西，都可以写篇博客记录下来~以后再遇到，找也容易。而且我发现，当一个知识点自己以为自己搞懂了的时候，并没有真正搞懂，直到开始写博客。因为很多次，以为自己会了准备开始写博客的时候，还是要不断查好多资料，就怕自己哪里写的不对，哪里理解的还是有点问题。所以写博客可以用来帮助自己加深理解吧~觉得不会的东西实在太多。。。努力吧！~"},{"title":"书单","date":"2022-09-28T23:42:02.487Z","updated":"2022-09-28T23:42:02.487Z","comments":false,"path":"books/index.html","permalink":"http://yoursite.com/books/index.html","excerpt":"","text":""},{"title":"我的朋友们~","date":"2022-09-28T23:42:02.644Z","updated":"2022-09-28T23:42:02.644Z","comments":true,"path":"links/index.html","permalink":"http://yoursite.com/links/index.html","excerpt":"","text":""},{"title":"音乐","date":"2022-09-28T23:42:02.644Z","updated":"2022-09-28T23:42:02.644Z","comments":true,"path":"music/index.html","permalink":"http://yoursite.com/music/index.html","excerpt":"","text":"我唱的歌 ^ ^ ~ 歌名 原唱 失落沙洲 徐佳莹 原创~还没起名字 disinuo I dreamed a dream 安妮海瑟薇 Almost Lover A Fine Frenzy 我从崖边跌落 谢春花 走马 陈粒 别怕我伤心 张信哲 凉城 任然 飘向北方 黄明志&amp;王力宏 咖喱咖喱 牛奶咖啡"},{"title":"画画","date":"2022-09-28T23:42:02.667Z","updated":"2022-09-28T23:42:02.667Z","comments":true,"path":"painting/index.html","permalink":"http://yoursite.com/painting/index.html","excerpt":"","text":"我画的画 ^ ^ ~【不要盗图哦！~】 超爱老友记~"},{"title":"","date":"2022-09-28T23:42:02.693Z","updated":"2022-09-28T23:42:02.693Z","comments":false,"path":"posts/index.html","permalink":"http://yoursite.com/posts/index.html","excerpt":"","text":""},{"title":"Repositories","date":"2022-09-28T23:42:02.694Z","updated":"2022-09-28T23:42:02.694Z","comments":false,"path":"repository/index.html","permalink":"http://yoursite.com/repository/index.html","excerpt":"","text":""},{"title":"标签","date":"2022-09-28T23:42:02.694Z","updated":"2022-09-28T23:42:02.694Z","comments":false,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2022-09-28T23:42:02.694Z","updated":"2022-09-28T23:42:02.694Z","comments":true,"path":"tool/Font-Awesome-3.2.1/css/font-awesome-ie7.css","permalink":"http://yoursite.com/tool/Font-Awesome-3.2.1/css/font-awesome-ie7.css","excerpt":"","text":"/*! * Font Awesome 3.2.1 * the iconic font designed for Bootstrap * ------------------------------------------------------------------------------ * The full suite of pictographic icons, examples, and documentation can be * found at http://fontawesome.io. Stay up to date on Twitter at * http://twitter.com/fontawesome. * * License * ------------------------------------------------------------------------------ * - The Font Awesome font is licensed under SIL OFL 1.1 - * http://scripts.sil.org/OFL * - Font Awesome CSS, LESS, and SASS files are licensed under MIT License - * http://opensource.org/licenses/mit-license.html * - Font Awesome documentation licensed under CC BY 3.0 - * http://creativecommons.org/licenses/by/3.0/ * - Attribution is no longer required in Font Awesome 3.0, but much appreciated: * \"Font Awesome by Dave Gandy - http://fontawesome.io\" * * Author - Dave Gandy * ------------------------------------------------------------------------------ * Email: dave@fontawesome.io * Twitter: http://twitter.com/byscuits * Work: Lead Product Designer @ Kyruus - http://kyruus.com */ .icon-large { font-size: 1.3333333333333333em; margin-top: -4px; padding-top: 3px; margin-bottom: -4px; padding-bottom: 3px; vertical-align: middle; } .nav [class^=\"icon-\"], .nav [class*=\" icon-\"] { vertical-align: inherit; margin-top: -4px; padding-top: 3px; margin-bottom: -4px; padding-bottom: 3px; } .nav [class^=\"icon-\"].icon-large, .nav [class*=\" icon-\"].icon-large { vertical-align: -25%; } .nav-pills [class^=\"icon-\"].icon-large, .nav-tabs [class^=\"icon-\"].icon-large, .nav-pills [class*=\" icon-\"].icon-large, .nav-tabs [class*=\" icon-\"].icon-large { line-height: .75em; margin-top: -7px; padding-top: 5px; margin-bottom: -5px; padding-bottom: 4px; } .btn [class^=\"icon-\"].pull-left, .btn [class*=\" icon-\"].pull-left, .btn [class^=\"icon-\"].pull-right, .btn [class*=\" icon-\"].pull-right { vertical-align: inherit; } .btn [class^=\"icon-\"].icon-large, .btn [class*=\" icon-\"].icon-large { margin-top: -0.5em; } a [class^=\"icon-\"], a [class*=\" icon-\"] { cursor: pointer; } .icon-glass { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf000;'); } .icon-music { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf001;'); } .icon-search { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf002;'); } .icon-envelope-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf003;'); } .icon-heart { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf004;'); } .icon-star { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf005;'); } .icon-star-empty { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf006;'); } .icon-user { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf007;'); } .icon-film { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf008;'); } .icon-th-large { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf009;'); } .icon-th { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf00a;'); } .icon-th-list { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf00b;'); } .icon-ok { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf00c;'); } .icon-remove { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf00d;'); } .icon-zoom-in { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf00e;'); } .icon-zoom-out { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf010;'); } .icon-off { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf011;'); } .icon-power-off { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf011;'); } .icon-signal { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf012;'); } .icon-cog { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf013;'); } .icon-gear { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf013;'); } .icon-trash { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf014;'); } .icon-home { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf015;'); } .icon-file-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf016;'); } .icon-time { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf017;'); } .icon-road { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf018;'); } .icon-download-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf019;'); } .icon-download { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01a;'); } .icon-upload { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01b;'); } .icon-inbox { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01c;'); } .icon-play-circle { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01d;'); } .icon-repeat { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01e;'); } .icon-rotate-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01e;'); } .icon-refresh { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf021;'); } .icon-list-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf022;'); } .icon-lock { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf023;'); } .icon-flag { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf024;'); } .icon-headphones { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf025;'); } .icon-volume-off { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf026;'); } .icon-volume-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf027;'); } .icon-volume-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf028;'); } .icon-qrcode { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf029;'); } .icon-barcode { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02a;'); } .icon-tag { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02b;'); } .icon-tags { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02c;'); } .icon-book { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02d;'); } .icon-bookmark { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02e;'); } .icon-print { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02f;'); } .icon-camera { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf030;'); } .icon-font { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf031;'); } .icon-bold { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf032;'); } .icon-italic { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf033;'); } .icon-text-height { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf034;'); } .icon-text-width { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf035;'); } .icon-align-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf036;'); } .icon-align-center { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf037;'); } .icon-align-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf038;'); } .icon-align-justify { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf039;'); } .icon-list { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03a;'); } .icon-indent-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03b;'); } .icon-indent-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03c;'); } .icon-facetime-video { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03d;'); } .icon-picture { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03e;'); } .icon-pencil { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf040;'); } .icon-map-marker { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf041;'); } .icon-adjust { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf042;'); } .icon-tint { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf043;'); } .icon-edit { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf044;'); } .icon-share { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf045;'); } .icon-check { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf046;'); } .icon-move { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf047;'); } .icon-step-backward { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf048;'); } .icon-fast-backward { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf049;'); } .icon-backward { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf04a;'); } .icon-play { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf04b;'); } .icon-pause { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf04c;'); } .icon-stop { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf04d;'); } .icon-forward { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf04e;'); } .icon-fast-forward { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf050;'); } .icon-step-forward { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf051;'); } .icon-eject { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf052;'); } .icon-chevron-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf053;'); } .icon-chevron-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf054;'); } .icon-plus-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf055;'); } .icon-minus-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf056;'); } .icon-remove-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf057;'); } .icon-ok-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf058;'); } .icon-question-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf059;'); } .icon-info-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf05a;'); } .icon-screenshot { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf05b;'); } .icon-remove-circle { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf05c;'); } .icon-ok-circle { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf05d;'); } .icon-ban-circle { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf05e;'); } .icon-arrow-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf060;'); } .icon-arrow-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf061;'); } .icon-arrow-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf062;'); } .icon-arrow-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf063;'); } .icon-share-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf064;'); } .icon-mail-forward { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf064;'); } .icon-resize-full { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf065;'); } .icon-resize-small { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf066;'); } .icon-plus { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf067;'); } .icon-minus { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf068;'); } .icon-asterisk { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf069;'); } .icon-exclamation-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf06a;'); } .icon-gift { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf06b;'); } .icon-leaf { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf06c;'); } .icon-fire { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf06d;'); } .icon-eye-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf06e;'); } .icon-eye-close { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf070;'); } .icon-warning-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf071;'); } .icon-plane { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf072;'); } .icon-calendar { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf073;'); } .icon-random { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf074;'); } .icon-comment { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf075;'); } .icon-magnet { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf076;'); } .icon-chevron-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf077;'); } .icon-chevron-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf078;'); } .icon-retweet { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf079;'); } .icon-shopping-cart { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf07a;'); } .icon-folder-close { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf07b;'); } .icon-folder-open { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf07c;'); } .icon-resize-vertical { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf07d;'); } .icon-resize-horizontal { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf07e;'); } .icon-bar-chart { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf080;'); } .icon-twitter-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf081;'); } .icon-facebook-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf082;'); } .icon-camera-retro { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf083;'); } .icon-key { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf084;'); } .icon-cogs { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf085;'); } .icon-gears { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf085;'); } .icon-comments { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf086;'); } .icon-thumbs-up-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf087;'); } .icon-thumbs-down-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf088;'); } .icon-star-half { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf089;'); } .icon-heart-empty { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf08a;'); } .icon-signout { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf08b;'); } .icon-linkedin-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf08c;'); } .icon-pushpin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf08d;'); } .icon-external-link { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf08e;'); } .icon-signin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf090;'); } .icon-trophy { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf091;'); } .icon-github-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf092;'); } .icon-upload-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf093;'); } .icon-lemon { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf094;'); } .icon-phone { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf095;'); } .icon-check-empty { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf096;'); } .icon-unchecked { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf096;'); } .icon-bookmark-empty { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf097;'); } .icon-phone-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf098;'); } .icon-twitter { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf099;'); } .icon-facebook { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09a;'); } .icon-github { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09b;'); } .icon-unlock { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09c;'); } .icon-credit-card { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09d;'); } .icon-rss { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09e;'); } .icon-hdd { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a0;'); } .icon-bullhorn { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a1;'); } .icon-bell { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a2;'); } .icon-certificate { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a3;'); } .icon-hand-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a4;'); } .icon-hand-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a5;'); } .icon-hand-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a6;'); } .icon-hand-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a7;'); } .icon-circle-arrow-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a8;'); } .icon-circle-arrow-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a9;'); } .icon-circle-arrow-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0aa;'); } .icon-circle-arrow-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ab;'); } .icon-globe { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ac;'); } .icon-wrench { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ad;'); } .icon-tasks { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ae;'); } .icon-filter { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0b0;'); } .icon-briefcase { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0b1;'); } .icon-fullscreen { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0b2;'); } .icon-group { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c0;'); } .icon-link { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c1;'); } .icon-cloud { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c2;'); } .icon-beaker { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c3;'); } .icon-cut { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c4;'); } .icon-copy { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c5;'); } .icon-paper-clip { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c6;'); } .icon-paperclip { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c6;'); } .icon-save { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c7;'); } .icon-sign-blank { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c8;'); } .icon-reorder { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c9;'); } .icon-list-ul { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ca;'); } .icon-list-ol { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0cb;'); } .icon-strikethrough { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0cc;'); } .icon-underline { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0cd;'); } .icon-table { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ce;'); } .icon-magic { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d0;'); } .icon-truck { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d1;'); } .icon-pinterest { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d2;'); } .icon-pinterest-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d3;'); } .icon-google-plus-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d4;'); } .icon-google-plus { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d5;'); } .icon-money { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d6;'); } .icon-caret-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d7;'); } .icon-caret-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d8;'); } .icon-caret-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d9;'); } .icon-caret-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0da;'); } .icon-columns { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0db;'); } .icon-sort { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0dc;'); } .icon-sort-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0dd;'); } .icon-sort-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0de;'); } .icon-envelope { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e0;'); } .icon-linkedin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e1;'); } .icon-undo { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e2;'); } .icon-rotate-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e2;'); } .icon-legal { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e3;'); } .icon-dashboard { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e4;'); } .icon-comment-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e5;'); } .icon-comments-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e6;'); } .icon-bolt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e7;'); } .icon-sitemap { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e8;'); } .icon-umbrella { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e9;'); } .icon-paste { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ea;'); } .icon-lightbulb { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0eb;'); } .icon-exchange { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ec;'); } .icon-cloud-download { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ed;'); } .icon-cloud-upload { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ee;'); } .icon-user-md { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f0;'); } .icon-stethoscope { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f1;'); } .icon-suitcase { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f2;'); } .icon-bell-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f3;'); } .icon-coffee { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f4;'); } .icon-food { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f5;'); } .icon-file-text-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f6;'); } .icon-building { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f7;'); } .icon-hospital { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f8;'); } .icon-ambulance { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f9;'); } .icon-medkit { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0fa;'); } .icon-fighter-jet { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0fb;'); } .icon-beer { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0fc;'); } .icon-h-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0fd;'); } .icon-plus-sign-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0fe;'); } .icon-double-angle-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf100;'); } .icon-double-angle-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf101;'); } .icon-double-angle-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf102;'); } .icon-double-angle-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf103;'); } .icon-angle-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf104;'); } .icon-angle-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf105;'); } .icon-angle-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf106;'); } .icon-angle-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf107;'); } .icon-desktop { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf108;'); } .icon-laptop { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf109;'); } .icon-tablet { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf10a;'); } .icon-mobile-phone { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf10b;'); } .icon-circle-blank { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf10c;'); } .icon-quote-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf10d;'); } .icon-quote-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf10e;'); } .icon-spinner { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf110;'); } .icon-circle { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf111;'); } .icon-reply { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf112;'); } .icon-mail-reply { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf112;'); } .icon-github-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf113;'); } .icon-folder-close-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf114;'); } .icon-folder-open-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf115;'); } .icon-expand-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf116;'); } .icon-collapse-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf117;'); } .icon-smile { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf118;'); } .icon-frown { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf119;'); } .icon-meh { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf11a;'); } .icon-gamepad { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf11b;'); } .icon-keyboard { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf11c;'); } .icon-flag-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf11d;'); } .icon-flag-checkered { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf11e;'); } .icon-terminal { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf120;'); } .icon-code { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf121;'); } .icon-reply-all { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf122;'); } .icon-mail-reply-all { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf122;'); } .icon-star-half-empty { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf123;'); } .icon-star-half-full { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf123;'); } .icon-location-arrow { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf124;'); } .icon-crop { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf125;'); } .icon-code-fork { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf126;'); } .icon-unlink { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf127;'); } .icon-question { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf128;'); } .icon-info { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf129;'); } .icon-exclamation { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf12a;'); } .icon-superscript { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf12b;'); } .icon-subscript { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf12c;'); } .icon-eraser { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf12d;'); } .icon-puzzle-piece { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf12e;'); } .icon-microphone { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf130;'); } .icon-microphone-off { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf131;'); } .icon-shield { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf132;'); } .icon-calendar-empty { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf133;'); } .icon-fire-extinguisher { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf134;'); } .icon-rocket { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf135;'); } .icon-maxcdn { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf136;'); } .icon-chevron-sign-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf137;'); } .icon-chevron-sign-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf138;'); } .icon-chevron-sign-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf139;'); } .icon-chevron-sign-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf13a;'); } .icon-html5 { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf13b;'); } .icon-css3 { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf13c;'); } .icon-anchor { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf13d;'); } .icon-unlock-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf13e;'); } .icon-bullseye { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf140;'); } .icon-ellipsis-horizontal { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf141;'); } .icon-ellipsis-vertical { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf142;'); } .icon-rss-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf143;'); } .icon-play-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf144;'); } .icon-ticket { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf145;'); } .icon-minus-sign-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf146;'); } .icon-check-minus { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf147;'); } .icon-level-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf148;'); } .icon-level-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf149;'); } .icon-check-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf14a;'); } .icon-edit-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf14b;'); } .icon-external-link-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf14c;'); } .icon-share-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf14d;'); } .icon-compass { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf14e;'); } .icon-collapse { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf150;'); } .icon-collapse-top { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf151;'); } .icon-expand { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf152;'); } .icon-eur { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf153;'); } .icon-euro { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf153;'); } .icon-gbp { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf154;'); } .icon-usd { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf155;'); } .icon-dollar { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf155;'); } .icon-inr { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf156;'); } .icon-rupee { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf156;'); } .icon-jpy { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf157;'); } .icon-yen { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf157;'); } .icon-cny { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf158;'); } .icon-renminbi { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf158;'); } .icon-krw { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf159;'); } .icon-won { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf159;'); } .icon-btc { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15a;'); } .icon-bitcoin { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15a;'); } .icon-file { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15b;'); } .icon-file-text { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15c;'); } .icon-sort-by-alphabet { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15d;'); } .icon-sort-by-alphabet-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15e;'); } .icon-sort-by-attributes { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf160;'); } .icon-sort-by-attributes-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf161;'); } .icon-sort-by-order { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf162;'); } .icon-sort-by-order-alt { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf163;'); } .icon-thumbs-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf164;'); } .icon-thumbs-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf165;'); } .icon-youtube-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf166;'); } .icon-youtube { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf167;'); } .icon-xing { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf168;'); } .icon-xing-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf169;'); } .icon-youtube-play { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16a;'); } .icon-dropbox { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16b;'); } .icon-stackexchange { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16c;'); } .icon-instagram { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16d;'); } .icon-flickr { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16e;'); } .icon-adn { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf170;'); } .icon-bitbucket { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf171;'); } .icon-bitbucket-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf172;'); } .icon-tumblr { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf173;'); } .icon-tumblr-sign { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf174;'); } .icon-long-arrow-down { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf175;'); } .icon-long-arrow-up { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf176;'); } .icon-long-arrow-left { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf177;'); } .icon-long-arrow-right { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf178;'); } .icon-apple { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf179;'); } .icon-windows { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf17a;'); } .icon-android { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf17b;'); } .icon-linux { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf17c;'); } .icon-dribbble { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf17d;'); } .icon-skype { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf17e;'); } .icon-foursquare { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf180;'); } .icon-trello { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf181;'); } .icon-female { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf182;'); } .icon-male { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf183;'); } .icon-gittip { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf184;'); } .icon-sun { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf185;'); } .icon-moon { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf186;'); } .icon-archive { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf187;'); } .icon-bug { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf188;'); } .icon-vk { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf189;'); } .icon-weibo { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf18a;'); } .icon-renren { *zoom: expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf18b;'); }"},{"title":"","date":"2022-09-28T23:42:02.695Z","updated":"2022-09-28T23:42:02.695Z","comments":true,"path":"tool/Font-Awesome-3.2.1/css/font-awesome.css","permalink":"http://yoursite.com/tool/Font-Awesome-3.2.1/css/font-awesome.css","excerpt":"","text":"/*! * Font Awesome 3.2.1 * the iconic font designed for Bootstrap * ------------------------------------------------------------------------------ * The full suite of pictographic icons, examples, and documentation can be * found at http://fontawesome.io. Stay up to date on Twitter at * http://twitter.com/fontawesome. * * License * ------------------------------------------------------------------------------ * - The Font Awesome font is licensed under SIL OFL 1.1 - * http://scripts.sil.org/OFL * - Font Awesome CSS, LESS, and SASS files are licensed under MIT License - * http://opensource.org/licenses/mit-license.html * - Font Awesome documentation licensed under CC BY 3.0 - * http://creativecommons.org/licenses/by/3.0/ * - Attribution is no longer required in Font Awesome 3.0, but much appreciated: * \"Font Awesome by Dave Gandy - http://fontawesome.io\" * * Author - Dave Gandy * ------------------------------------------------------------------------------ * Email: dave@fontawesome.io * Twitter: http://twitter.com/byscuits * Work: Lead Product Designer @ Kyruus - http://kyruus.com */ /* FONT PATH * -------------------------- */ @font-face { font-family: 'FontAwesome'; src: url('../font/fontawesome-webfont.eot?v=3.2.1'); src: url('../font/fontawesome-webfont.eot?#iefix&v=3.2.1') format('embedded-opentype'), url('../font/fontawesome-webfont.woff?v=3.2.1') format('woff'), url('../font/fontawesome-webfont.ttf?v=3.2.1') format('truetype'), url('../font/fontawesome-webfont.svg#fontawesomeregular?v=3.2.1') format('svg'); font-weight: normal; font-style: normal; } /* FONT AWESOME CORE * -------------------------- */ [class^=\"icon-\"], [class*=\" icon-\"] { font-family: FontAwesome; font-weight: normal; font-style: normal; text-decoration: inherit; -webkit-font-smoothing: antialiased; *margin-right: .3em; } [class^=\"icon-\"]:before, [class*=\" icon-\"]:before { text-decoration: inherit; display: inline-block; speak: none; } /* makes the font 33% larger relative to the icon container */ .icon-large:before { vertical-align: -10%; font-size: 1.3333333333333333em; } /* makes sure icons active on rollover in links */ a [class^=\"icon-\"], a [class*=\" icon-\"] { display: inline; } /* increased font size for icon-large */ [class^=\"icon-\"].icon-fixed-width, [class*=\" icon-\"].icon-fixed-width { display: inline-block; width: 1.1428571428571428em; text-align: right; padding-right: 0.2857142857142857em; } [class^=\"icon-\"].icon-fixed-width.icon-large, [class*=\" icon-\"].icon-fixed-width.icon-large { width: 1.4285714285714286em; } .icons-ul { margin-left: 2.142857142857143em; list-style-type: none; } .icons-ul > li { position: relative; } .icons-ul .icon-li { position: absolute; left: -2.142857142857143em; width: 2.142857142857143em; text-align: center; line-height: inherit; } [class^=\"icon-\"].hide, [class*=\" icon-\"].hide { display: none; } .icon-muted { color: #eeeeee; } .icon-light { color: #ffffff; } .icon-dark { color: #333333; } .icon-border { border: solid 1px #eeeeee; padding: .2em .25em .15em; -webkit-border-radius: 3px; -moz-border-radius: 3px; border-radius: 3px; } .icon-2x { font-size: 2em; } .icon-2x.icon-border { border-width: 2px; -webkit-border-radius: 4px; -moz-border-radius: 4px; border-radius: 4px; } .icon-3x { font-size: 3em; } .icon-3x.icon-border { border-width: 3px; -webkit-border-radius: 5px; -moz-border-radius: 5px; border-radius: 5px; } .icon-4x { font-size: 4em; } .icon-4x.icon-border { border-width: 4px; -webkit-border-radius: 6px; -moz-border-radius: 6px; border-radius: 6px; } .icon-5x { font-size: 5em; } .icon-5x.icon-border { border-width: 5px; -webkit-border-radius: 7px; -moz-border-radius: 7px; border-radius: 7px; } .pull-right { float: right; } .pull-left { float: left; } [class^=\"icon-\"].pull-left, [class*=\" icon-\"].pull-left { margin-right: .3em; } [class^=\"icon-\"].pull-right, [class*=\" icon-\"].pull-right { margin-left: .3em; } /* BOOTSTRAP SPECIFIC CLASSES * -------------------------- */ /* Bootstrap 2.0 sprites.less reset */ [class^=\"icon-\"], [class*=\" icon-\"] { display: inline; width: auto; height: auto; line-height: normal; vertical-align: baseline; background-image: none; background-position: 0% 0%; background-repeat: repeat; margin-top: 0; } /* more sprites.less reset */ .icon-white, .nav-pills > .active > a > [class^=\"icon-\"], .nav-pills > .active > a > [class*=\" icon-\"], .nav-list > .active > a > [class^=\"icon-\"], .nav-list > .active > a > [class*=\" icon-\"], .navbar-inverse .nav > .active > a > [class^=\"icon-\"], .navbar-inverse .nav > .active > a > [class*=\" icon-\"], .dropdown-menu > li > a:hover > [class^=\"icon-\"], .dropdown-menu > li > a:hover > [class*=\" icon-\"], .dropdown-menu > .active > a > [class^=\"icon-\"], .dropdown-menu > .active > a > [class*=\" icon-\"], .dropdown-submenu:hover > a > [class^=\"icon-\"], .dropdown-submenu:hover > a > [class*=\" icon-\"] { background-image: none; } /* keeps Bootstrap styles with and without icons the same */ .btn [class^=\"icon-\"].icon-large, .nav [class^=\"icon-\"].icon-large, .btn [class*=\" icon-\"].icon-large, .nav [class*=\" icon-\"].icon-large { line-height: .9em; } .btn [class^=\"icon-\"].icon-spin, .nav [class^=\"icon-\"].icon-spin, .btn [class*=\" icon-\"].icon-spin, .nav [class*=\" icon-\"].icon-spin { display: inline-block; } .nav-tabs [class^=\"icon-\"], .nav-pills [class^=\"icon-\"], .nav-tabs [class*=\" icon-\"], .nav-pills [class*=\" icon-\"], .nav-tabs [class^=\"icon-\"].icon-large, .nav-pills [class^=\"icon-\"].icon-large, .nav-tabs [class*=\" icon-\"].icon-large, .nav-pills [class*=\" icon-\"].icon-large { line-height: .9em; } .btn [class^=\"icon-\"].pull-left.icon-2x, .btn [class*=\" icon-\"].pull-left.icon-2x, .btn [class^=\"icon-\"].pull-right.icon-2x, .btn [class*=\" icon-\"].pull-right.icon-2x { margin-top: .18em; } .btn [class^=\"icon-\"].icon-spin.icon-large, .btn [class*=\" icon-\"].icon-spin.icon-large { line-height: .8em; } .btn.btn-small [class^=\"icon-\"].pull-left.icon-2x, .btn.btn-small [class*=\" icon-\"].pull-left.icon-2x, .btn.btn-small [class^=\"icon-\"].pull-right.icon-2x, .btn.btn-small [class*=\" icon-\"].pull-right.icon-2x { margin-top: .25em; } .btn.btn-large [class^=\"icon-\"], .btn.btn-large [class*=\" icon-\"] { margin-top: 0; } .btn.btn-large [class^=\"icon-\"].pull-left.icon-2x, .btn.btn-large [class*=\" icon-\"].pull-left.icon-2x, .btn.btn-large [class^=\"icon-\"].pull-right.icon-2x, .btn.btn-large [class*=\" icon-\"].pull-right.icon-2x { margin-top: .05em; } .btn.btn-large [class^=\"icon-\"].pull-left.icon-2x, .btn.btn-large [class*=\" icon-\"].pull-left.icon-2x { margin-right: .2em; } .btn.btn-large [class^=\"icon-\"].pull-right.icon-2x, .btn.btn-large [class*=\" icon-\"].pull-right.icon-2x { margin-left: .2em; } /* Fixes alignment in nav lists */ .nav-list [class^=\"icon-\"], .nav-list [class*=\" icon-\"] { line-height: inherit; } /* EXTRAS * -------------------------- */ /* Stacked and layered icon */ .icon-stack { position: relative; display: inline-block; width: 2em; height: 2em; line-height: 2em; vertical-align: -35%; } .icon-stack [class^=\"icon-\"], .icon-stack [class*=\" icon-\"] { display: block; text-align: center; position: absolute; width: 100%; height: 100%; font-size: 1em; line-height: inherit; *line-height: 2em; } .icon-stack .icon-stack-base { font-size: 2em; *line-height: 1em; } /* Animated rotating icon */ .icon-spin { display: inline-block; -moz-animation: spin 2s infinite linear; -o-animation: spin 2s infinite linear; -webkit-animation: spin 2s infinite linear; animation: spin 2s infinite linear; } /* Prevent stack and spinners from being taken inline when inside a link */ a .icon-stack, a .icon-spin { display: inline-block; text-decoration: none; } @-moz-keyframes spin { 0% { -moz-transform: rotate(0deg); } 100% { -moz-transform: rotate(359deg); } } @-webkit-keyframes spin { 0% { -webkit-transform: rotate(0deg); } 100% { -webkit-transform: rotate(359deg); } } @-o-keyframes spin { 0% { -o-transform: rotate(0deg); } 100% { -o-transform: rotate(359deg); } } @-ms-keyframes spin { 0% { -ms-transform: rotate(0deg); } 100% { -ms-transform: rotate(359deg); } } @keyframes spin { 0% { transform: rotate(0deg); } 100% { transform: rotate(359deg); } } /* Icon rotations and mirroring */ .icon-rotate-90:before { -webkit-transform: rotate(90deg); -moz-transform: rotate(90deg); -ms-transform: rotate(90deg); -o-transform: rotate(90deg); transform: rotate(90deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=1); } .icon-rotate-180:before { -webkit-transform: rotate(180deg); -moz-transform: rotate(180deg); -ms-transform: rotate(180deg); -o-transform: rotate(180deg); transform: rotate(180deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=2); } .icon-rotate-270:before { -webkit-transform: rotate(270deg); -moz-transform: rotate(270deg); -ms-transform: rotate(270deg); -o-transform: rotate(270deg); transform: rotate(270deg); filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3); } .icon-flip-horizontal:before { -webkit-transform: scale(-1, 1); -moz-transform: scale(-1, 1); -ms-transform: scale(-1, 1); -o-transform: scale(-1, 1); transform: scale(-1, 1); } .icon-flip-vertical:before { -webkit-transform: scale(1, -1); -moz-transform: scale(1, -1); -ms-transform: scale(1, -1); -o-transform: scale(1, -1); transform: scale(1, -1); } /* ensure rotation occurs inside anchor tags */ a .icon-rotate-90:before, a .icon-rotate-180:before, a .icon-rotate-270:before, a .icon-flip-horizontal:before, a .icon-flip-vertical:before { display: inline-block; } /* Font Awesome uses the Unicode Private Use Area (PUA) to ensure screen readers do not read off random characters that represent icons */ .icon-glass:before { content: \"\\f000\"; } .icon-music:before { content: \"\\f001\"; } .icon-search:before { content: \"\\f002\"; } .icon-envelope-alt:before { content: \"\\f003\"; } .icon-heart:before { content: \"\\f004\"; } .icon-star:before { content: \"\\f005\"; } .icon-star-empty:before { content: \"\\f006\"; } .icon-user:before { content: \"\\f007\"; } .icon-film:before { content: \"\\f008\"; } .icon-th-large:before { content: \"\\f009\"; } .icon-th:before { content: \"\\f00a\"; } .icon-th-list:before { content: \"\\f00b\"; } .icon-ok:before { content: \"\\f00c\"; } .icon-remove:before { content: \"\\f00d\"; } .icon-zoom-in:before { content: \"\\f00e\"; } .icon-zoom-out:before { content: \"\\f010\"; } .icon-power-off:before, .icon-off:before { content: \"\\f011\"; } .icon-signal:before { content: \"\\f012\"; } .icon-gear:before, .icon-cog:before { content: \"\\f013\"; } .icon-trash:before { content: \"\\f014\"; } .icon-home:before { content: \"\\f015\"; } .icon-file-alt:before { content: \"\\f016\"; } .icon-time:before { content: \"\\f017\"; } .icon-road:before { content: \"\\f018\"; } .icon-download-alt:before { content: \"\\f019\"; } .icon-download:before { content: \"\\f01a\"; } .icon-upload:before { content: \"\\f01b\"; } .icon-inbox:before { content: \"\\f01c\"; } .icon-play-circle:before { content: \"\\f01d\"; } .icon-rotate-right:before, .icon-repeat:before { content: \"\\f01e\"; } .icon-refresh:before { content: \"\\f021\"; } .icon-list-alt:before { content: \"\\f022\"; } .icon-lock:before { content: \"\\f023\"; } .icon-flag:before { content: \"\\f024\"; } .icon-headphones:before { content: \"\\f025\"; } .icon-volume-off:before { content: \"\\f026\"; } .icon-volume-down:before { content: \"\\f027\"; } .icon-volume-up:before { content: \"\\f028\"; } .icon-qrcode:before { content: \"\\f029\"; } .icon-barcode:before { content: \"\\f02a\"; } .icon-tag:before { content: \"\\f02b\"; } .icon-tags:before { content: \"\\f02c\"; } .icon-book:before { content: \"\\f02d\"; } .icon-bookmark:before { content: \"\\f02e\"; } .icon-print:before { content: \"\\f02f\"; } .icon-camera:before { content: \"\\f030\"; } .icon-font:before { content: \"\\f031\"; } .icon-bold:before { content: \"\\f032\"; } .icon-italic:before { content: \"\\f033\"; } .icon-text-height:before { content: \"\\f034\"; } .icon-text-width:before { content: \"\\f035\"; } .icon-align-left:before { content: \"\\f036\"; } .icon-align-center:before { content: \"\\f037\"; } .icon-align-right:before { content: \"\\f038\"; } .icon-align-justify:before { content: \"\\f039\"; } .icon-list:before { content: \"\\f03a\"; } .icon-indent-left:before { content: \"\\f03b\"; } .icon-indent-right:before { content: \"\\f03c\"; } .icon-facetime-video:before { content: \"\\f03d\"; } .icon-picture:before { content: \"\\f03e\"; } .icon-pencil:before { content: \"\\f040\"; } .icon-map-marker:before { content: \"\\f041\"; } .icon-adjust:before { content: \"\\f042\"; } .icon-tint:before { content: \"\\f043\"; } .icon-edit:before { content: \"\\f044\"; } .icon-share:before { content: \"\\f045\"; } .icon-check:before { content: \"\\f046\"; } .icon-move:before { content: \"\\f047\"; } .icon-step-backward:before { content: \"\\f048\"; } .icon-fast-backward:before { content: \"\\f049\"; } .icon-backward:before { content: \"\\f04a\"; } .icon-play:before { content: \"\\f04b\"; } .icon-pause:before { content: \"\\f04c\"; } .icon-stop:before { content: \"\\f04d\"; } .icon-forward:before { content: \"\\f04e\"; } .icon-fast-forward:before { content: \"\\f050\"; } .icon-step-forward:before { content: \"\\f051\"; } .icon-eject:before { content: \"\\f052\"; } .icon-chevron-left:before { content: \"\\f053\"; } .icon-chevron-right:before { content: \"\\f054\"; } .icon-plus-sign:before { content: \"\\f055\"; } .icon-minus-sign:before { content: \"\\f056\"; } .icon-remove-sign:before { content: \"\\f057\"; } .icon-ok-sign:before { content: \"\\f058\"; } .icon-question-sign:before { content: \"\\f059\"; } .icon-info-sign:before { content: \"\\f05a\"; } .icon-screenshot:before { content: \"\\f05b\"; } .icon-remove-circle:before { content: \"\\f05c\"; } .icon-ok-circle:before { content: \"\\f05d\"; } .icon-ban-circle:before { content: \"\\f05e\"; } .icon-arrow-left:before { content: \"\\f060\"; } .icon-arrow-right:before { content: \"\\f061\"; } .icon-arrow-up:before { content: \"\\f062\"; } .icon-arrow-down:before { content: \"\\f063\"; } .icon-mail-forward:before, .icon-share-alt:before { content: \"\\f064\"; } .icon-resize-full:before { content: \"\\f065\"; } .icon-resize-small:before { content: \"\\f066\"; } .icon-plus:before { content: \"\\f067\"; } .icon-minus:before { content: \"\\f068\"; } .icon-asterisk:before { content: \"\\f069\"; } .icon-exclamation-sign:before { content: \"\\f06a\"; } .icon-gift:before { content: \"\\f06b\"; } .icon-leaf:before { content: \"\\f06c\"; } .icon-fire:before { content: \"\\f06d\"; } .icon-eye-open:before { content: \"\\f06e\"; } .icon-eye-close:before { content: \"\\f070\"; } .icon-warning-sign:before { content: \"\\f071\"; } .icon-plane:before { content: \"\\f072\"; } .icon-calendar:before { content: \"\\f073\"; } .icon-random:before { content: \"\\f074\"; } .icon-comment:before { content: \"\\f075\"; } .icon-magnet:before { content: \"\\f076\"; } .icon-chevron-up:before { content: \"\\f077\"; } .icon-chevron-down:before { content: \"\\f078\"; } .icon-retweet:before { content: \"\\f079\"; } .icon-shopping-cart:before { content: \"\\f07a\"; } .icon-folder-close:before { content: \"\\f07b\"; } .icon-folder-open:before { content: \"\\f07c\"; } .icon-resize-vertical:before { content: \"\\f07d\"; } .icon-resize-horizontal:before { content: \"\\f07e\"; } .icon-bar-chart:before { content: \"\\f080\"; } .icon-twitter-sign:before { content: \"\\f081\"; } .icon-facebook-sign:before { content: \"\\f082\"; } .icon-camera-retro:before { content: \"\\f083\"; } .icon-key:before { content: \"\\f084\"; } .icon-gears:before, .icon-cogs:before { content: \"\\f085\"; } .icon-comments:before { content: \"\\f086\"; } .icon-thumbs-up-alt:before { content: \"\\f087\"; } .icon-thumbs-down-alt:before { content: \"\\f088\"; } .icon-star-half:before { content: \"\\f089\"; } .icon-heart-empty:before { content: \"\\f08a\"; } .icon-signout:before { content: \"\\f08b\"; } .icon-linkedin-sign:before { content: \"\\f08c\"; } .icon-pushpin:before { content: \"\\f08d\"; } .icon-external-link:before { content: \"\\f08e\"; } .icon-signin:before { content: \"\\f090\"; } .icon-trophy:before { content: \"\\f091\"; } .icon-github-sign:before { content: \"\\f092\"; } .icon-upload-alt:before { content: \"\\f093\"; } .icon-lemon:before { content: \"\\f094\"; } .icon-phone:before { content: \"\\f095\"; } .icon-unchecked:before, .icon-check-empty:before { content: \"\\f096\"; } .icon-bookmark-empty:before { content: \"\\f097\"; } .icon-phone-sign:before { content: \"\\f098\"; } .icon-twitter:before { content: \"\\f099\"; } .icon-facebook:before { content: \"\\f09a\"; } .icon-github:before { content: \"\\f09b\"; } .icon-unlock:before { content: \"\\f09c\"; } .icon-credit-card:before { content: \"\\f09d\"; } .icon-rss:before { content: \"\\f09e\"; } .icon-hdd:before { content: \"\\f0a0\"; } .icon-bullhorn:before { content: \"\\f0a1\"; } .icon-bell:before { content: \"\\f0a2\"; } .icon-certificate:before { content: \"\\f0a3\"; } .icon-hand-right:before { content: \"\\f0a4\"; } .icon-hand-left:before { content: \"\\f0a5\"; } .icon-hand-up:before { content: \"\\f0a6\"; } .icon-hand-down:before { content: \"\\f0a7\"; } .icon-circle-arrow-left:before { content: \"\\f0a8\"; } .icon-circle-arrow-right:before { content: \"\\f0a9\"; } .icon-circle-arrow-up:before { content: \"\\f0aa\"; } .icon-circle-arrow-down:before { content: \"\\f0ab\"; } .icon-globe:before { content: \"\\f0ac\"; } .icon-wrench:before { content: \"\\f0ad\"; } .icon-tasks:before { content: \"\\f0ae\"; } .icon-filter:before { content: \"\\f0b0\"; } .icon-briefcase:before { content: \"\\f0b1\"; } .icon-fullscreen:before { content: \"\\f0b2\"; } .icon-group:before { content: \"\\f0c0\"; } .icon-link:before { content: \"\\f0c1\"; } .icon-cloud:before { content: \"\\f0c2\"; } .icon-beaker:before { content: \"\\f0c3\"; } .icon-cut:before { content: \"\\f0c4\"; } .icon-copy:before { content: \"\\f0c5\"; } .icon-paperclip:before, .icon-paper-clip:before { content: \"\\f0c6\"; } .icon-save:before { content: \"\\f0c7\"; } .icon-sign-blank:before { content: \"\\f0c8\"; } .icon-reorder:before { content: \"\\f0c9\"; } .icon-list-ul:before { content: \"\\f0ca\"; } .icon-list-ol:before { content: \"\\f0cb\"; } .icon-strikethrough:before { content: \"\\f0cc\"; } .icon-underline:before { content: \"\\f0cd\"; } .icon-table:before { content: \"\\f0ce\"; } .icon-magic:before { content: \"\\f0d0\"; } .icon-truck:before { content: \"\\f0d1\"; } .icon-pinterest:before { content: \"\\f0d2\"; } .icon-pinterest-sign:before { content: \"\\f0d3\"; } .icon-google-plus-sign:before { content: \"\\f0d4\"; } .icon-google-plus:before { content: \"\\f0d5\"; } .icon-money:before { content: \"\\f0d6\"; } .icon-caret-down:before { content: \"\\f0d7\"; } .icon-caret-up:before { content: \"\\f0d8\"; } .icon-caret-left:before { content: \"\\f0d9\"; } .icon-caret-right:before { content: \"\\f0da\"; } .icon-columns:before { content: \"\\f0db\"; } .icon-sort:before { content: \"\\f0dc\"; } .icon-sort-down:before { content: \"\\f0dd\"; } .icon-sort-up:before { content: \"\\f0de\"; } .icon-envelope:before { content: \"\\f0e0\"; } .icon-linkedin:before { content: \"\\f0e1\"; } .icon-rotate-left:before, .icon-undo:before { content: \"\\f0e2\"; } .icon-legal:before { content: \"\\f0e3\"; } .icon-dashboard:before { content: \"\\f0e4\"; } .icon-comment-alt:before { content: \"\\f0e5\"; } .icon-comments-alt:before { content: \"\\f0e6\"; } .icon-bolt:before { content: \"\\f0e7\"; } .icon-sitemap:before { content: \"\\f0e8\"; } .icon-umbrella:before { content: \"\\f0e9\"; } .icon-paste:before { content: \"\\f0ea\"; } .icon-lightbulb:before { content: \"\\f0eb\"; } .icon-exchange:before { content: \"\\f0ec\"; } .icon-cloud-download:before { content: \"\\f0ed\"; } .icon-cloud-upload:before { content: \"\\f0ee\"; } .icon-user-md:before { content: \"\\f0f0\"; } .icon-stethoscope:before { content: \"\\f0f1\"; } .icon-suitcase:before { content: \"\\f0f2\"; } .icon-bell-alt:before { content: \"\\f0f3\"; } .icon-coffee:before { content: \"\\f0f4\"; } .icon-food:before { content: \"\\f0f5\"; } .icon-file-text-alt:before { content: \"\\f0f6\"; } .icon-building:before { content: \"\\f0f7\"; } .icon-hospital:before { content: \"\\f0f8\"; } .icon-ambulance:before { content: \"\\f0f9\"; } .icon-medkit:before { content: \"\\f0fa\"; } .icon-fighter-jet:before { content: \"\\f0fb\"; } .icon-beer:before { content: \"\\f0fc\"; } .icon-h-sign:before { content: \"\\f0fd\"; } .icon-plus-sign-alt:before { content: \"\\f0fe\"; } .icon-double-angle-left:before { content: \"\\f100\"; } .icon-double-angle-right:before { content: \"\\f101\"; } .icon-double-angle-up:before { content: \"\\f102\"; } .icon-double-angle-down:before { content: \"\\f103\"; } .icon-angle-left:before { content: \"\\f104\"; } .icon-angle-right:before { content: \"\\f105\"; } .icon-angle-up:before { content: \"\\f106\"; } .icon-angle-down:before { content: \"\\f107\"; } .icon-desktop:before { content: \"\\f108\"; } .icon-laptop:before { content: \"\\f109\"; } .icon-tablet:before { content: \"\\f10a\"; } .icon-mobile-phone:before { content: \"\\f10b\"; } .icon-circle-blank:before { content: \"\\f10c\"; } .icon-quote-left:before { content: \"\\f10d\"; } .icon-quote-right:before { content: \"\\f10e\"; } .icon-spinner:before { content: \"\\f110\"; } .icon-circle:before { content: \"\\f111\"; } .icon-mail-reply:before, .icon-reply:before { content: \"\\f112\"; } .icon-github-alt:before { content: \"\\f113\"; } .icon-folder-close-alt:before { content: \"\\f114\"; } .icon-folder-open-alt:before { content: \"\\f115\"; } .icon-expand-alt:before { content: \"\\f116\"; } .icon-collapse-alt:before { content: \"\\f117\"; } .icon-smile:before { content: \"\\f118\"; } .icon-frown:before { content: \"\\f119\"; } .icon-meh:before { content: \"\\f11a\"; } .icon-gamepad:before { content: \"\\f11b\"; } .icon-keyboard:before { content: \"\\f11c\"; } .icon-flag-alt:before { content: \"\\f11d\"; } .icon-flag-checkered:before { content: \"\\f11e\"; } .icon-terminal:before { content: \"\\f120\"; } .icon-code:before { content: \"\\f121\"; } .icon-reply-all:before { content: \"\\f122\"; } .icon-mail-reply-all:before { content: \"\\f122\"; } .icon-star-half-full:before, .icon-star-half-empty:before { content: \"\\f123\"; } .icon-location-arrow:before { content: \"\\f124\"; } .icon-crop:before { content: \"\\f125\"; } .icon-code-fork:before { content: \"\\f126\"; } .icon-unlink:before { content: \"\\f127\"; } .icon-question:before { content: \"\\f128\"; } .icon-info:before { content: \"\\f129\"; } .icon-exclamation:before { content: \"\\f12a\"; } .icon-superscript:before { content: \"\\f12b\"; } .icon-subscript:before { content: \"\\f12c\"; } .icon-eraser:before { content: \"\\f12d\"; } .icon-puzzle-piece:before { content: \"\\f12e\"; } .icon-microphone:before { content: \"\\f130\"; } .icon-microphone-off:before { content: \"\\f131\"; } .icon-shield:before { content: \"\\f132\"; } .icon-calendar-empty:before { content: \"\\f133\"; } .icon-fire-extinguisher:before { content: \"\\f134\"; } .icon-rocket:before { content: \"\\f135\"; } .icon-maxcdn:before { content: \"\\f136\"; } .icon-chevron-sign-left:before { content: \"\\f137\"; } .icon-chevron-sign-right:before { content: \"\\f138\"; } .icon-chevron-sign-up:before { content: \"\\f139\"; } .icon-chevron-sign-down:before { content: \"\\f13a\"; } .icon-html5:before { content: \"\\f13b\"; } .icon-css3:before { content: \"\\f13c\"; } .icon-anchor:before { content: \"\\f13d\"; } .icon-unlock-alt:before { content: \"\\f13e\"; } .icon-bullseye:before { content: \"\\f140\"; } .icon-ellipsis-horizontal:before { content: \"\\f141\"; } .icon-ellipsis-vertical:before { content: \"\\f142\"; } .icon-rss-sign:before { content: \"\\f143\"; } .icon-play-sign:before { content: \"\\f144\"; } .icon-ticket:before { content: \"\\f145\"; } .icon-minus-sign-alt:before { content: \"\\f146\"; } .icon-check-minus:before { content: \"\\f147\"; } .icon-level-up:before { content: \"\\f148\"; } .icon-level-down:before { content: \"\\f149\"; } .icon-check-sign:before { content: \"\\f14a\"; } .icon-edit-sign:before { content: \"\\f14b\"; } .icon-external-link-sign:before { content: \"\\f14c\"; } .icon-share-sign:before { content: \"\\f14d\"; } .icon-compass:before { content: \"\\f14e\"; } .icon-collapse:before { content: \"\\f150\"; } .icon-collapse-top:before { content: \"\\f151\"; } .icon-expand:before { content: \"\\f152\"; } .icon-euro:before, .icon-eur:before { content: \"\\f153\"; } .icon-gbp:before { content: \"\\f154\"; } .icon-dollar:before, .icon-usd:before { content: \"\\f155\"; } .icon-rupee:before, .icon-inr:before { content: \"\\f156\"; } .icon-yen:before, .icon-jpy:before { content: \"\\f157\"; } .icon-renminbi:before, .icon-cny:before { content: \"\\f158\"; } .icon-won:before, .icon-krw:before { content: \"\\f159\"; } .icon-bitcoin:before, .icon-btc:before { content: \"\\f15a\"; } .icon-file:before { content: \"\\f15b\"; } .icon-file-text:before { content: \"\\f15c\"; } .icon-sort-by-alphabet:before { content: \"\\f15d\"; } .icon-sort-by-alphabet-alt:before { content: \"\\f15e\"; } .icon-sort-by-attributes:before { content: \"\\f160\"; } .icon-sort-by-attributes-alt:before { content: \"\\f161\"; } .icon-sort-by-order:before { content: \"\\f162\"; } .icon-sort-by-order-alt:before { content: \"\\f163\"; } .icon-thumbs-up:before { content: \"\\f164\"; } .icon-thumbs-down:before { content: \"\\f165\"; } .icon-youtube-sign:before { content: \"\\f166\"; } .icon-youtube:before { content: \"\\f167\"; } .icon-xing:before { content: \"\\f168\"; } .icon-xing-sign:before { content: \"\\f169\"; } .icon-youtube-play:before { content: \"\\f16a\"; } .icon-dropbox:before { content: \"\\f16b\"; } .icon-stackexchange:before { content: \"\\f16c\"; } .icon-instagram:before { content: \"\\f16d\"; } .icon-flickr:before { content: \"\\f16e\"; } .icon-adn:before { content: \"\\f170\"; } .icon-bitbucket:before { content: \"\\f171\"; } .icon-bitbucket-sign:before { content: \"\\f172\"; } .icon-tumblr:before { content: \"\\f173\"; } .icon-tumblr-sign:before { content: \"\\f174\"; } .icon-long-arrow-down:before { content: \"\\f175\"; } .icon-long-arrow-up:before { content: \"\\f176\"; } .icon-long-arrow-left:before { content: \"\\f177\"; } .icon-long-arrow-right:before { content: \"\\f178\"; } .icon-apple:before { content: \"\\f179\"; } .icon-windows:before { content: \"\\f17a\"; } .icon-android:before { content: \"\\f17b\"; } .icon-linux:before { content: \"\\f17c\"; } .icon-dribbble:before { content: \"\\f17d\"; } .icon-skype:before { content: \"\\f17e\"; } .icon-foursquare:before { content: \"\\f180\"; } .icon-trello:before { content: \"\\f181\"; } .icon-female:before { content: \"\\f182\"; } .icon-male:before { content: \"\\f183\"; } .icon-gittip:before { content: \"\\f184\"; } .icon-sun:before { content: \"\\f185\"; } .icon-moon:before { content: \"\\f186\"; } .icon-archive:before { content: \"\\f187\"; } .icon-bug:before { content: \"\\f188\"; } .icon-vk:before { content: \"\\f189\"; } .icon-weibo:before { content: \"\\f18a\"; } .icon-renren:before { content: \"\\f18b\"; }"},{"title":"","date":"2022-09-28T23:42:02.695Z","updated":"2022-09-28T23:42:02.695Z","comments":true,"path":"tool/Font-Awesome-3.2.1/css/font-awesome.min.css","permalink":"http://yoursite.com/tool/Font-Awesome-3.2.1/css/font-awesome.min.css","excerpt":"","text":"@font-face{font-family:'FontAwesome';src:url('../font/fontawesome-webfont.eot?v=3.2.1');src:url('../font/fontawesome-webfont.eot?#iefix&v=3.2.1') format('embedded-opentype'),url('../font/fontawesome-webfont.woff?v=3.2.1') format('woff'),url('../font/fontawesome-webfont.ttf?v=3.2.1') format('truetype'),url('../font/fontawesome-webfont.svg#fontawesomeregular?v=3.2.1') format('svg');font-weight:normal;font-style:normal;}[class^=\"icon-\"],[class*=\" icon-\"]{font-family:FontAwesome;font-weight:normal;font-style:normal;text-decoration:inherit;-webkit-font-smoothing:antialiased;*margin-right:.3em;} [class^=\"icon-\"]:before,[class*=\" icon-\"]:before{text-decoration:inherit;display:inline-block;speak:none;} .icon-large:before{vertical-align:-10%;font-size:1.3333333333333333em;} a [class^=\"icon-\"],a [class*=\" icon-\"]{display:inline;} [class^=\"icon-\"].icon-fixed-width,[class*=\" icon-\"].icon-fixed-width{display:inline-block;width:1.1428571428571428em;text-align:right;padding-right:0.2857142857142857em;}[class^=\"icon-\"].icon-fixed-width.icon-large,[class*=\" icon-\"].icon-fixed-width.icon-large{width:1.4285714285714286em;} .icons-ul{margin-left:2.142857142857143em;list-style-type:none;}.icons-ul>li{position:relative;} .icons-ul .icon-li{position:absolute;left:-2.142857142857143em;width:2.142857142857143em;text-align:center;line-height:inherit;} [class^=\"icon-\"].hide,[class*=\" icon-\"].hide{display:none;} .icon-muted{color:#eeeeee;} .icon-light{color:#ffffff;} .icon-dark{color:#333333;} .icon-border{border:solid 1px #eeeeee;padding:.2em .25em .15em;-webkit-border-radius:3px;-moz-border-radius:3px;border-radius:3px;} .icon-2x{font-size:2em;}.icon-2x.icon-border{border-width:2px;-webkit-border-radius:4px;-moz-border-radius:4px;border-radius:4px;} .icon-3x{font-size:3em;}.icon-3x.icon-border{border-width:3px;-webkit-border-radius:5px;-moz-border-radius:5px;border-radius:5px;} .icon-4x{font-size:4em;}.icon-4x.icon-border{border-width:4px;-webkit-border-radius:6px;-moz-border-radius:6px;border-radius:6px;} .icon-5x{font-size:5em;}.icon-5x.icon-border{border-width:5px;-webkit-border-radius:7px;-moz-border-radius:7px;border-radius:7px;} .pull-right{float:right;} .pull-left{float:left;} [class^=\"icon-\"].pull-left,[class*=\" icon-\"].pull-left{margin-right:.3em;} [class^=\"icon-\"].pull-right,[class*=\" icon-\"].pull-right{margin-left:.3em;} [class^=\"icon-\"],[class*=\" icon-\"]{display:inline;width:auto;height:auto;line-height:normal;vertical-align:baseline;background-image:none;background-position:0% 0%;background-repeat:repeat;margin-top:0;} .icon-white,.nav-pills>.active>a>[class^=\"icon-\"],.nav-pills>.active>a>[class*=\" icon-\"],.nav-list>.active>a>[class^=\"icon-\"],.nav-list>.active>a>[class*=\" icon-\"],.navbar-inverse .nav>.active>a>[class^=\"icon-\"],.navbar-inverse .nav>.active>a>[class*=\" icon-\"],.dropdown-menu>li>a:hover>[class^=\"icon-\"],.dropdown-menu>li>a:hover>[class*=\" icon-\"],.dropdown-menu>.active>a>[class^=\"icon-\"],.dropdown-menu>.active>a>[class*=\" icon-\"],.dropdown-submenu:hover>a>[class^=\"icon-\"],.dropdown-submenu:hover>a>[class*=\" icon-\"]{background-image:none;} .btn [class^=\"icon-\"].icon-large,.nav [class^=\"icon-\"].icon-large,.btn [class*=\" icon-\"].icon-large,.nav [class*=\" icon-\"].icon-large{line-height:.9em;} .btn [class^=\"icon-\"].icon-spin,.nav [class^=\"icon-\"].icon-spin,.btn [class*=\" icon-\"].icon-spin,.nav [class*=\" icon-\"].icon-spin{display:inline-block;} .nav-tabs [class^=\"icon-\"],.nav-pills [class^=\"icon-\"],.nav-tabs [class*=\" icon-\"],.nav-pills [class*=\" icon-\"],.nav-tabs [class^=\"icon-\"].icon-large,.nav-pills [class^=\"icon-\"].icon-large,.nav-tabs [class*=\" icon-\"].icon-large,.nav-pills [class*=\" icon-\"].icon-large{line-height:.9em;} .btn [class^=\"icon-\"].pull-left.icon-2x,.btn [class*=\" icon-\"].pull-left.icon-2x,.btn [class^=\"icon-\"].pull-right.icon-2x,.btn [class*=\" icon-\"].pull-right.icon-2x{margin-top:.18em;} .btn [class^=\"icon-\"].icon-spin.icon-large,.btn [class*=\" icon-\"].icon-spin.icon-large{line-height:.8em;} .btn.btn-small [class^=\"icon-\"].pull-left.icon-2x,.btn.btn-small [class*=\" icon-\"].pull-left.icon-2x,.btn.btn-small [class^=\"icon-\"].pull-right.icon-2x,.btn.btn-small [class*=\" icon-\"].pull-right.icon-2x{margin-top:.25em;} .btn.btn-large [class^=\"icon-\"],.btn.btn-large [class*=\" icon-\"]{margin-top:0;}.btn.btn-large [class^=\"icon-\"].pull-left.icon-2x,.btn.btn-large [class*=\" icon-\"].pull-left.icon-2x,.btn.btn-large [class^=\"icon-\"].pull-right.icon-2x,.btn.btn-large [class*=\" icon-\"].pull-right.icon-2x{margin-top:.05em;} .btn.btn-large [class^=\"icon-\"].pull-left.icon-2x,.btn.btn-large [class*=\" icon-\"].pull-left.icon-2x{margin-right:.2em;} .btn.btn-large [class^=\"icon-\"].pull-right.icon-2x,.btn.btn-large [class*=\" icon-\"].pull-right.icon-2x{margin-left:.2em;} .nav-list [class^=\"icon-\"],.nav-list [class*=\" icon-\"]{line-height:inherit;} .icon-stack{position:relative;display:inline-block;width:2em;height:2em;line-height:2em;vertical-align:-35%;}.icon-stack [class^=\"icon-\"],.icon-stack [class*=\" icon-\"]{display:block;text-align:center;position:absolute;width:100%;height:100%;font-size:1em;line-height:inherit;*line-height:2em;} .icon-stack .icon-stack-base{font-size:2em;*line-height:1em;} .icon-spin{display:inline-block;-moz-animation:spin 2s infinite linear;-o-animation:spin 2s infinite linear;-webkit-animation:spin 2s infinite linear;animation:spin 2s infinite linear;} a .icon-stack,a .icon-spin{display:inline-block;text-decoration:none;} @-moz-keyframes spin{0%{-moz-transform:rotate(0deg);} 100%{-moz-transform:rotate(359deg);}}@-webkit-keyframes spin{0%{-webkit-transform:rotate(0deg);} 100%{-webkit-transform:rotate(359deg);}}@-o-keyframes spin{0%{-o-transform:rotate(0deg);} 100%{-o-transform:rotate(359deg);}}@-ms-keyframes spin{0%{-ms-transform:rotate(0deg);} 100%{-ms-transform:rotate(359deg);}}@keyframes spin{0%{transform:rotate(0deg);} 100%{transform:rotate(359deg);}}.icon-rotate-90:before{-webkit-transform:rotate(90deg);-moz-transform:rotate(90deg);-ms-transform:rotate(90deg);-o-transform:rotate(90deg);transform:rotate(90deg);filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=1);} .icon-rotate-180:before{-webkit-transform:rotate(180deg);-moz-transform:rotate(180deg);-ms-transform:rotate(180deg);-o-transform:rotate(180deg);transform:rotate(180deg);filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=2);} .icon-rotate-270:before{-webkit-transform:rotate(270deg);-moz-transform:rotate(270deg);-ms-transform:rotate(270deg);-o-transform:rotate(270deg);transform:rotate(270deg);filter:progid:DXImageTransform.Microsoft.BasicImage(rotation=3);} .icon-flip-horizontal:before{-webkit-transform:scale(-1, 1);-moz-transform:scale(-1, 1);-ms-transform:scale(-1, 1);-o-transform:scale(-1, 1);transform:scale(-1, 1);} .icon-flip-vertical:before{-webkit-transform:scale(1, -1);-moz-transform:scale(1, -1);-ms-transform:scale(1, -1);-o-transform:scale(1, -1);transform:scale(1, -1);} a .icon-rotate-90:before,a .icon-rotate-180:before,a .icon-rotate-270:before,a .icon-flip-horizontal:before,a .icon-flip-vertical:before{display:inline-block;} .icon-glass:before{content:\"\\f000\";} .icon-music:before{content:\"\\f001\";} .icon-search:before{content:\"\\f002\";} .icon-envelope-alt:before{content:\"\\f003\";} .icon-heart:before{content:\"\\f004\";} .icon-star:before{content:\"\\f005\";} .icon-star-empty:before{content:\"\\f006\";} .icon-user:before{content:\"\\f007\";} .icon-film:before{content:\"\\f008\";} .icon-th-large:before{content:\"\\f009\";} .icon-th:before{content:\"\\f00a\";} .icon-th-list:before{content:\"\\f00b\";} .icon-ok:before{content:\"\\f00c\";} .icon-remove:before{content:\"\\f00d\";} .icon-zoom-in:before{content:\"\\f00e\";} .icon-zoom-out:before{content:\"\\f010\";} .icon-power-off:before,.icon-off:before{content:\"\\f011\";} .icon-signal:before{content:\"\\f012\";} .icon-gear:before,.icon-cog:before{content:\"\\f013\";} .icon-trash:before{content:\"\\f014\";} .icon-home:before{content:\"\\f015\";} .icon-file-alt:before{content:\"\\f016\";} .icon-time:before{content:\"\\f017\";} .icon-road:before{content:\"\\f018\";} .icon-download-alt:before{content:\"\\f019\";} .icon-download:before{content:\"\\f01a\";} .icon-upload:before{content:\"\\f01b\";} .icon-inbox:before{content:\"\\f01c\";} .icon-play-circle:before{content:\"\\f01d\";} .icon-rotate-right:before,.icon-repeat:before{content:\"\\f01e\";} .icon-refresh:before{content:\"\\f021\";} .icon-list-alt:before{content:\"\\f022\";} .icon-lock:before{content:\"\\f023\";} .icon-flag:before{content:\"\\f024\";} .icon-headphones:before{content:\"\\f025\";} .icon-volume-off:before{content:\"\\f026\";} .icon-volume-down:before{content:\"\\f027\";} .icon-volume-up:before{content:\"\\f028\";} .icon-qrcode:before{content:\"\\f029\";} .icon-barcode:before{content:\"\\f02a\";} .icon-tag:before{content:\"\\f02b\";} .icon-tags:before{content:\"\\f02c\";} .icon-book:before{content:\"\\f02d\";} .icon-bookmark:before{content:\"\\f02e\";} .icon-print:before{content:\"\\f02f\";} .icon-camera:before{content:\"\\f030\";} .icon-font:before{content:\"\\f031\";} .icon-bold:before{content:\"\\f032\";} .icon-italic:before{content:\"\\f033\";} .icon-text-height:before{content:\"\\f034\";} .icon-text-width:before{content:\"\\f035\";} .icon-align-left:before{content:\"\\f036\";} .icon-align-center:before{content:\"\\f037\";} .icon-align-right:before{content:\"\\f038\";} .icon-align-justify:before{content:\"\\f039\";} .icon-list:before{content:\"\\f03a\";} .icon-indent-left:before{content:\"\\f03b\";} .icon-indent-right:before{content:\"\\f03c\";} .icon-facetime-video:before{content:\"\\f03d\";} .icon-picture:before{content:\"\\f03e\";} .icon-pencil:before{content:\"\\f040\";} .icon-map-marker:before{content:\"\\f041\";} .icon-adjust:before{content:\"\\f042\";} .icon-tint:before{content:\"\\f043\";} .icon-edit:before{content:\"\\f044\";} .icon-share:before{content:\"\\f045\";} .icon-check:before{content:\"\\f046\";} .icon-move:before{content:\"\\f047\";} .icon-step-backward:before{content:\"\\f048\";} .icon-fast-backward:before{content:\"\\f049\";} .icon-backward:before{content:\"\\f04a\";} .icon-play:before{content:\"\\f04b\";} .icon-pause:before{content:\"\\f04c\";} .icon-stop:before{content:\"\\f04d\";} .icon-forward:before{content:\"\\f04e\";} .icon-fast-forward:before{content:\"\\f050\";} .icon-step-forward:before{content:\"\\f051\";} .icon-eject:before{content:\"\\f052\";} .icon-chevron-left:before{content:\"\\f053\";} .icon-chevron-right:before{content:\"\\f054\";} .icon-plus-sign:before{content:\"\\f055\";} .icon-minus-sign:before{content:\"\\f056\";} .icon-remove-sign:before{content:\"\\f057\";} .icon-ok-sign:before{content:\"\\f058\";} .icon-question-sign:before{content:\"\\f059\";} .icon-info-sign:before{content:\"\\f05a\";} .icon-screenshot:before{content:\"\\f05b\";} .icon-remove-circle:before{content:\"\\f05c\";} .icon-ok-circle:before{content:\"\\f05d\";} .icon-ban-circle:before{content:\"\\f05e\";} .icon-arrow-left:before{content:\"\\f060\";} .icon-arrow-right:before{content:\"\\f061\";} .icon-arrow-up:before{content:\"\\f062\";} .icon-arrow-down:before{content:\"\\f063\";} .icon-mail-forward:before,.icon-share-alt:before{content:\"\\f064\";} .icon-resize-full:before{content:\"\\f065\";} .icon-resize-small:before{content:\"\\f066\";} .icon-plus:before{content:\"\\f067\";} .icon-minus:before{content:\"\\f068\";} .icon-asterisk:before{content:\"\\f069\";} .icon-exclamation-sign:before{content:\"\\f06a\";} .icon-gift:before{content:\"\\f06b\";} .icon-leaf:before{content:\"\\f06c\";} .icon-fire:before{content:\"\\f06d\";} .icon-eye-open:before{content:\"\\f06e\";} .icon-eye-close:before{content:\"\\f070\";} .icon-warning-sign:before{content:\"\\f071\";} .icon-plane:before{content:\"\\f072\";} .icon-calendar:before{content:\"\\f073\";} .icon-random:before{content:\"\\f074\";} .icon-comment:before{content:\"\\f075\";} .icon-magnet:before{content:\"\\f076\";} .icon-chevron-up:before{content:\"\\f077\";} .icon-chevron-down:before{content:\"\\f078\";} .icon-retweet:before{content:\"\\f079\";} .icon-shopping-cart:before{content:\"\\f07a\";} .icon-folder-close:before{content:\"\\f07b\";} .icon-folder-open:before{content:\"\\f07c\";} .icon-resize-vertical:before{content:\"\\f07d\";} .icon-resize-horizontal:before{content:\"\\f07e\";} .icon-bar-chart:before{content:\"\\f080\";} .icon-twitter-sign:before{content:\"\\f081\";} .icon-facebook-sign:before{content:\"\\f082\";} .icon-camera-retro:before{content:\"\\f083\";} .icon-key:before{content:\"\\f084\";} .icon-gears:before,.icon-cogs:before{content:\"\\f085\";} .icon-comments:before{content:\"\\f086\";} .icon-thumbs-up-alt:before{content:\"\\f087\";} .icon-thumbs-down-alt:before{content:\"\\f088\";} .icon-star-half:before{content:\"\\f089\";} .icon-heart-empty:before{content:\"\\f08a\";} .icon-signout:before{content:\"\\f08b\";} .icon-linkedin-sign:before{content:\"\\f08c\";} .icon-pushpin:before{content:\"\\f08d\";} .icon-external-link:before{content:\"\\f08e\";} .icon-signin:before{content:\"\\f090\";} .icon-trophy:before{content:\"\\f091\";} .icon-github-sign:before{content:\"\\f092\";} .icon-upload-alt:before{content:\"\\f093\";} .icon-lemon:before{content:\"\\f094\";} .icon-phone:before{content:\"\\f095\";} .icon-unchecked:before,.icon-check-empty:before{content:\"\\f096\";} .icon-bookmark-empty:before{content:\"\\f097\";} .icon-phone-sign:before{content:\"\\f098\";} .icon-twitter:before{content:\"\\f099\";} .icon-facebook:before{content:\"\\f09a\";} .icon-github:before{content:\"\\f09b\";} .icon-unlock:before{content:\"\\f09c\";} .icon-credit-card:before{content:\"\\f09d\";} .icon-rss:before{content:\"\\f09e\";} .icon-hdd:before{content:\"\\f0a0\";} .icon-bullhorn:before{content:\"\\f0a1\";} .icon-bell:before{content:\"\\f0a2\";} .icon-certificate:before{content:\"\\f0a3\";} .icon-hand-right:before{content:\"\\f0a4\";} .icon-hand-left:before{content:\"\\f0a5\";} .icon-hand-up:before{content:\"\\f0a6\";} .icon-hand-down:before{content:\"\\f0a7\";} .icon-circle-arrow-left:before{content:\"\\f0a8\";} .icon-circle-arrow-right:before{content:\"\\f0a9\";} .icon-circle-arrow-up:before{content:\"\\f0aa\";} .icon-circle-arrow-down:before{content:\"\\f0ab\";} .icon-globe:before{content:\"\\f0ac\";} .icon-wrench:before{content:\"\\f0ad\";} .icon-tasks:before{content:\"\\f0ae\";} .icon-filter:before{content:\"\\f0b0\";} .icon-briefcase:before{content:\"\\f0b1\";} .icon-fullscreen:before{content:\"\\f0b2\";} .icon-group:before{content:\"\\f0c0\";} .icon-link:before{content:\"\\f0c1\";} .icon-cloud:before{content:\"\\f0c2\";} .icon-beaker:before{content:\"\\f0c3\";} .icon-cut:before{content:\"\\f0c4\";} .icon-copy:before{content:\"\\f0c5\";} .icon-paperclip:before,.icon-paper-clip:before{content:\"\\f0c6\";} .icon-save:before{content:\"\\f0c7\";} .icon-sign-blank:before{content:\"\\f0c8\";} .icon-reorder:before{content:\"\\f0c9\";} .icon-list-ul:before{content:\"\\f0ca\";} .icon-list-ol:before{content:\"\\f0cb\";} .icon-strikethrough:before{content:\"\\f0cc\";} .icon-underline:before{content:\"\\f0cd\";} .icon-table:before{content:\"\\f0ce\";} .icon-magic:before{content:\"\\f0d0\";} .icon-truck:before{content:\"\\f0d1\";} .icon-pinterest:before{content:\"\\f0d2\";} .icon-pinterest-sign:before{content:\"\\f0d3\";} .icon-google-plus-sign:before{content:\"\\f0d4\";} .icon-google-plus:before{content:\"\\f0d5\";} .icon-money:before{content:\"\\f0d6\";} .icon-caret-down:before{content:\"\\f0d7\";} .icon-caret-up:before{content:\"\\f0d8\";} .icon-caret-left:before{content:\"\\f0d9\";} .icon-caret-right:before{content:\"\\f0da\";} .icon-columns:before{content:\"\\f0db\";} .icon-sort:before{content:\"\\f0dc\";} .icon-sort-down:before{content:\"\\f0dd\";} .icon-sort-up:before{content:\"\\f0de\";} .icon-envelope:before{content:\"\\f0e0\";} .icon-linkedin:before{content:\"\\f0e1\";} .icon-rotate-left:before,.icon-undo:before{content:\"\\f0e2\";} .icon-legal:before{content:\"\\f0e3\";} .icon-dashboard:before{content:\"\\f0e4\";} .icon-comment-alt:before{content:\"\\f0e5\";} .icon-comments-alt:before{content:\"\\f0e6\";} .icon-bolt:before{content:\"\\f0e7\";} .icon-sitemap:before{content:\"\\f0e8\";} .icon-umbrella:before{content:\"\\f0e9\";} .icon-paste:before{content:\"\\f0ea\";} .icon-lightbulb:before{content:\"\\f0eb\";} .icon-exchange:before{content:\"\\f0ec\";} .icon-cloud-download:before{content:\"\\f0ed\";} .icon-cloud-upload:before{content:\"\\f0ee\";} .icon-user-md:before{content:\"\\f0f0\";} .icon-stethoscope:before{content:\"\\f0f1\";} .icon-suitcase:before{content:\"\\f0f2\";} .icon-bell-alt:before{content:\"\\f0f3\";} .icon-coffee:before{content:\"\\f0f4\";} .icon-food:before{content:\"\\f0f5\";} .icon-file-text-alt:before{content:\"\\f0f6\";} .icon-building:before{content:\"\\f0f7\";} .icon-hospital:before{content:\"\\f0f8\";} .icon-ambulance:before{content:\"\\f0f9\";} .icon-medkit:before{content:\"\\f0fa\";} .icon-fighter-jet:before{content:\"\\f0fb\";} .icon-beer:before{content:\"\\f0fc\";} .icon-h-sign:before{content:\"\\f0fd\";} .icon-plus-sign-alt:before{content:\"\\f0fe\";} .icon-double-angle-left:before{content:\"\\f100\";} .icon-double-angle-right:before{content:\"\\f101\";} .icon-double-angle-up:before{content:\"\\f102\";} .icon-double-angle-down:before{content:\"\\f103\";} .icon-angle-left:before{content:\"\\f104\";} .icon-angle-right:before{content:\"\\f105\";} .icon-angle-up:before{content:\"\\f106\";} .icon-angle-down:before{content:\"\\f107\";} .icon-desktop:before{content:\"\\f108\";} .icon-laptop:before{content:\"\\f109\";} .icon-tablet:before{content:\"\\f10a\";} .icon-mobile-phone:before{content:\"\\f10b\";} .icon-circle-blank:before{content:\"\\f10c\";} .icon-quote-left:before{content:\"\\f10d\";} .icon-quote-right:before{content:\"\\f10e\";} .icon-spinner:before{content:\"\\f110\";} .icon-circle:before{content:\"\\f111\";} .icon-mail-reply:before,.icon-reply:before{content:\"\\f112\";} .icon-github-alt:before{content:\"\\f113\";} .icon-folder-close-alt:before{content:\"\\f114\";} .icon-folder-open-alt:before{content:\"\\f115\";} .icon-expand-alt:before{content:\"\\f116\";} .icon-collapse-alt:before{content:\"\\f117\";} .icon-smile:before{content:\"\\f118\";} .icon-frown:before{content:\"\\f119\";} .icon-meh:before{content:\"\\f11a\";} .icon-gamepad:before{content:\"\\f11b\";} .icon-keyboard:before{content:\"\\f11c\";} .icon-flag-alt:before{content:\"\\f11d\";} .icon-flag-checkered:before{content:\"\\f11e\";} .icon-terminal:before{content:\"\\f120\";} .icon-code:before{content:\"\\f121\";} .icon-reply-all:before{content:\"\\f122\";} .icon-mail-reply-all:before{content:\"\\f122\";} .icon-star-half-full:before,.icon-star-half-empty:before{content:\"\\f123\";} .icon-location-arrow:before{content:\"\\f124\";} .icon-crop:before{content:\"\\f125\";} .icon-code-fork:before{content:\"\\f126\";} .icon-unlink:before{content:\"\\f127\";} .icon-question:before{content:\"\\f128\";} .icon-info:before{content:\"\\f129\";} .icon-exclamation:before{content:\"\\f12a\";} .icon-superscript:before{content:\"\\f12b\";} .icon-subscript:before{content:\"\\f12c\";} .icon-eraser:before{content:\"\\f12d\";} .icon-puzzle-piece:before{content:\"\\f12e\";} .icon-microphone:before{content:\"\\f130\";} .icon-microphone-off:before{content:\"\\f131\";} .icon-shield:before{content:\"\\f132\";} .icon-calendar-empty:before{content:\"\\f133\";} .icon-fire-extinguisher:before{content:\"\\f134\";} .icon-rocket:before{content:\"\\f135\";} .icon-maxcdn:before{content:\"\\f136\";} .icon-chevron-sign-left:before{content:\"\\f137\";} .icon-chevron-sign-right:before{content:\"\\f138\";} .icon-chevron-sign-up:before{content:\"\\f139\";} .icon-chevron-sign-down:before{content:\"\\f13a\";} .icon-html5:before{content:\"\\f13b\";} .icon-css3:before{content:\"\\f13c\";} .icon-anchor:before{content:\"\\f13d\";} .icon-unlock-alt:before{content:\"\\f13e\";} .icon-bullseye:before{content:\"\\f140\";} .icon-ellipsis-horizontal:before{content:\"\\f141\";} .icon-ellipsis-vertical:before{content:\"\\f142\";} .icon-rss-sign:before{content:\"\\f143\";} .icon-play-sign:before{content:\"\\f144\";} .icon-ticket:before{content:\"\\f145\";} .icon-minus-sign-alt:before{content:\"\\f146\";} .icon-check-minus:before{content:\"\\f147\";} .icon-level-up:before{content:\"\\f148\";} .icon-level-down:before{content:\"\\f149\";} .icon-check-sign:before{content:\"\\f14a\";} .icon-edit-sign:before{content:\"\\f14b\";} .icon-external-link-sign:before{content:\"\\f14c\";} .icon-share-sign:before{content:\"\\f14d\";} .icon-compass:before{content:\"\\f14e\";} .icon-collapse:before{content:\"\\f150\";} .icon-collapse-top:before{content:\"\\f151\";} .icon-expand:before{content:\"\\f152\";} .icon-euro:before,.icon-eur:before{content:\"\\f153\";} .icon-gbp:before{content:\"\\f154\";} .icon-dollar:before,.icon-usd:before{content:\"\\f155\";} .icon-rupee:before,.icon-inr:before{content:\"\\f156\";} .icon-yen:before,.icon-jpy:before{content:\"\\f157\";} .icon-renminbi:before,.icon-cny:before{content:\"\\f158\";} .icon-won:before,.icon-krw:before{content:\"\\f159\";} .icon-bitcoin:before,.icon-btc:before{content:\"\\f15a\";} .icon-file:before{content:\"\\f15b\";} .icon-file-text:before{content:\"\\f15c\";} .icon-sort-by-alphabet:before{content:\"\\f15d\";} .icon-sort-by-alphabet-alt:before{content:\"\\f15e\";} .icon-sort-by-attributes:before{content:\"\\f160\";} .icon-sort-by-attributes-alt:before{content:\"\\f161\";} .icon-sort-by-order:before{content:\"\\f162\";} .icon-sort-by-order-alt:before{content:\"\\f163\";} .icon-thumbs-up:before{content:\"\\f164\";} .icon-thumbs-down:before{content:\"\\f165\";} .icon-youtube-sign:before{content:\"\\f166\";} .icon-youtube:before{content:\"\\f167\";} .icon-xing:before{content:\"\\f168\";} .icon-xing-sign:before{content:\"\\f169\";} .icon-youtube-play:before{content:\"\\f16a\";} .icon-dropbox:before{content:\"\\f16b\";} .icon-stackexchange:before{content:\"\\f16c\";} .icon-instagram:before{content:\"\\f16d\";} .icon-flickr:before{content:\"\\f16e\";} .icon-adn:before{content:\"\\f170\";} .icon-bitbucket:before{content:\"\\f171\";} .icon-bitbucket-sign:before{content:\"\\f172\";} .icon-tumblr:before{content:\"\\f173\";} .icon-tumblr-sign:before{content:\"\\f174\";} .icon-long-arrow-down:before{content:\"\\f175\";} .icon-long-arrow-up:before{content:\"\\f176\";} .icon-long-arrow-left:before{content:\"\\f177\";} .icon-long-arrow-right:before{content:\"\\f178\";} .icon-apple:before{content:\"\\f179\";} .icon-windows:before{content:\"\\f17a\";} .icon-android:before{content:\"\\f17b\";} .icon-linux:before{content:\"\\f17c\";} .icon-dribbble:before{content:\"\\f17d\";} .icon-skype:before{content:\"\\f17e\";} .icon-foursquare:before{content:\"\\f180\";} .icon-trello:before{content:\"\\f181\";} .icon-female:before{content:\"\\f182\";} .icon-male:before{content:\"\\f183\";} .icon-gittip:before{content:\"\\f184\";} .icon-sun:before{content:\"\\f185\";} .icon-moon:before{content:\"\\f186\";} .icon-archive:before{content:\"\\f187\";} .icon-bug:before{content:\"\\f188\";} .icon-vk:before{content:\"\\f189\";} .icon-weibo:before{content:\"\\f18a\";} .icon-renren:before{content:\"\\f18b\";}"},{"title":"","date":"2022-09-28T23:42:02.695Z","updated":"2022-09-28T23:42:02.695Z","comments":true,"path":"tool/Font-Awesome-3.2.1/css/font-awesome-ie7.min.css","permalink":"http://yoursite.com/tool/Font-Awesome-3.2.1/css/font-awesome-ie7.min.css","excerpt":"","text":".icon-large{font-size:1.3333333333333333em;margin-top:-4px;padding-top:3px;margin-bottom:-4px;padding-bottom:3px;vertical-align:middle;} .nav [class^=\"icon-\"],.nav [class*=\" icon-\"]{vertical-align:inherit;margin-top:-4px;padding-top:3px;margin-bottom:-4px;padding-bottom:3px;}.nav [class^=\"icon-\"].icon-large,.nav [class*=\" icon-\"].icon-large{vertical-align:-25%;} .nav-pills [class^=\"icon-\"].icon-large,.nav-tabs [class^=\"icon-\"].icon-large,.nav-pills [class*=\" icon-\"].icon-large,.nav-tabs [class*=\" icon-\"].icon-large{line-height:.75em;margin-top:-7px;padding-top:5px;margin-bottom:-5px;padding-bottom:4px;} .btn [class^=\"icon-\"].pull-left,.btn [class*=\" icon-\"].pull-left,.btn [class^=\"icon-\"].pull-right,.btn [class*=\" icon-\"].pull-right{vertical-align:inherit;} .btn [class^=\"icon-\"].icon-large,.btn [class*=\" icon-\"].icon-large{margin-top:-0.5em;} a [class^=\"icon-\"],a [class*=\" icon-\"]{cursor:pointer;} .icon-glass{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf000;');} .icon-music{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf001;');} .icon-search{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf002;');} .icon-envelope-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf003;');} .icon-heart{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf004;');} .icon-star{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf005;');} .icon-star-empty{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf006;');} .icon-user{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf007;');} .icon-film{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf008;');} .icon-th-large{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf009;');} .icon-th{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf00a;');} .icon-th-list{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf00b;');} .icon-ok{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf00c;');} .icon-remove{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf00d;');} .icon-zoom-in{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf00e;');} .icon-zoom-out{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf010;');} .icon-off{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf011;');} .icon-power-off{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf011;');} .icon-signal{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf012;');} .icon-cog{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf013;');} .icon-gear{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf013;');} .icon-trash{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf014;');} .icon-home{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf015;');} .icon-file-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf016;');} .icon-time{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf017;');} .icon-road{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf018;');} .icon-download-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf019;');} .icon-download{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01a;');} .icon-upload{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01b;');} .icon-inbox{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01c;');} .icon-play-circle{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01d;');} .icon-repeat{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01e;');} .icon-rotate-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf01e;');} .icon-refresh{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf021;');} .icon-list-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf022;');} .icon-lock{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf023;');} .icon-flag{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf024;');} .icon-headphones{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf025;');} .icon-volume-off{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf026;');} .icon-volume-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf027;');} .icon-volume-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf028;');} .icon-qrcode{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf029;');} .icon-barcode{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02a;');} .icon-tag{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02b;');} .icon-tags{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02c;');} .icon-book{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02d;');} .icon-bookmark{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02e;');} .icon-print{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf02f;');} .icon-camera{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf030;');} .icon-font{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf031;');} .icon-bold{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf032;');} .icon-italic{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf033;');} .icon-text-height{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf034;');} .icon-text-width{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf035;');} .icon-align-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf036;');} .icon-align-center{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf037;');} .icon-align-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf038;');} .icon-align-justify{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf039;');} .icon-list{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03a;');} .icon-indent-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03b;');} .icon-indent-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03c;');} .icon-facetime-video{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03d;');} .icon-picture{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf03e;');} .icon-pencil{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf040;');} .icon-map-marker{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf041;');} .icon-adjust{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf042;');} .icon-tint{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf043;');} .icon-edit{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf044;');} .icon-share{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf045;');} .icon-check{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf046;');} .icon-move{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf047;');} .icon-step-backward{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf048;');} .icon-fast-backward{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf049;');} .icon-backward{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf04a;');} .icon-play{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf04b;');} .icon-pause{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf04c;');} .icon-stop{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf04d;');} .icon-forward{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf04e;');} .icon-fast-forward{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf050;');} .icon-step-forward{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf051;');} .icon-eject{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf052;');} .icon-chevron-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf053;');} .icon-chevron-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf054;');} .icon-plus-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf055;');} .icon-minus-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf056;');} .icon-remove-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf057;');} .icon-ok-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf058;');} .icon-question-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf059;');} .icon-info-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf05a;');} .icon-screenshot{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf05b;');} .icon-remove-circle{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf05c;');} .icon-ok-circle{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf05d;');} .icon-ban-circle{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf05e;');} .icon-arrow-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf060;');} .icon-arrow-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf061;');} .icon-arrow-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf062;');} .icon-arrow-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf063;');} .icon-share-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf064;');} .icon-mail-forward{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf064;');} .icon-resize-full{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf065;');} .icon-resize-small{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf066;');} .icon-plus{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf067;');} .icon-minus{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf068;');} .icon-asterisk{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf069;');} .icon-exclamation-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf06a;');} .icon-gift{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf06b;');} .icon-leaf{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf06c;');} .icon-fire{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf06d;');} .icon-eye-open{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf06e;');} .icon-eye-close{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf070;');} .icon-warning-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf071;');} .icon-plane{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf072;');} .icon-calendar{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf073;');} .icon-random{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf074;');} .icon-comment{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf075;');} .icon-magnet{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf076;');} .icon-chevron-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf077;');} .icon-chevron-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf078;');} .icon-retweet{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf079;');} .icon-shopping-cart{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf07a;');} .icon-folder-close{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf07b;');} .icon-folder-open{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf07c;');} .icon-resize-vertical{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf07d;');} .icon-resize-horizontal{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf07e;');} .icon-bar-chart{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf080;');} .icon-twitter-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf081;');} .icon-facebook-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf082;');} .icon-camera-retro{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf083;');} .icon-key{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf084;');} .icon-cogs{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf085;');} .icon-gears{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf085;');} .icon-comments{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf086;');} .icon-thumbs-up-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf087;');} .icon-thumbs-down-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf088;');} .icon-star-half{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf089;');} .icon-heart-empty{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf08a;');} .icon-signout{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf08b;');} .icon-linkedin-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf08c;');} .icon-pushpin{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf08d;');} .icon-external-link{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf08e;');} .icon-signin{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf090;');} .icon-trophy{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf091;');} .icon-github-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf092;');} .icon-upload-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf093;');} .icon-lemon{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf094;');} .icon-phone{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf095;');} .icon-check-empty{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf096;');} .icon-unchecked{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf096;');} .icon-bookmark-empty{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf097;');} .icon-phone-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf098;');} .icon-twitter{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf099;');} .icon-facebook{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09a;');} .icon-github{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09b;');} .icon-unlock{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09c;');} .icon-credit-card{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09d;');} .icon-rss{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf09e;');} .icon-hdd{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a0;');} .icon-bullhorn{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a1;');} .icon-bell{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a2;');} .icon-certificate{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a3;');} .icon-hand-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a4;');} .icon-hand-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a5;');} .icon-hand-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a6;');} .icon-hand-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a7;');} .icon-circle-arrow-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a8;');} .icon-circle-arrow-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0a9;');} .icon-circle-arrow-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0aa;');} .icon-circle-arrow-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ab;');} .icon-globe{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ac;');} .icon-wrench{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ad;');} .icon-tasks{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ae;');} .icon-filter{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0b0;');} .icon-briefcase{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0b1;');} .icon-fullscreen{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0b2;');} .icon-group{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c0;');} .icon-link{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c1;');} .icon-cloud{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c2;');} .icon-beaker{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c3;');} .icon-cut{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c4;');} .icon-copy{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c5;');} .icon-paper-clip{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c6;');} .icon-paperclip{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c6;');} .icon-save{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c7;');} .icon-sign-blank{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c8;');} .icon-reorder{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0c9;');} .icon-list-ul{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ca;');} .icon-list-ol{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0cb;');} .icon-strikethrough{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0cc;');} .icon-underline{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0cd;');} .icon-table{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ce;');} .icon-magic{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d0;');} .icon-truck{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d1;');} .icon-pinterest{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d2;');} .icon-pinterest-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d3;');} .icon-google-plus-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d4;');} .icon-google-plus{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d5;');} .icon-money{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d6;');} .icon-caret-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d7;');} .icon-caret-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d8;');} .icon-caret-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0d9;');} .icon-caret-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0da;');} .icon-columns{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0db;');} .icon-sort{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0dc;');} .icon-sort-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0dd;');} .icon-sort-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0de;');} .icon-envelope{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e0;');} .icon-linkedin{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e1;');} .icon-undo{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e2;');} .icon-rotate-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e2;');} .icon-legal{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e3;');} .icon-dashboard{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e4;');} .icon-comment-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e5;');} .icon-comments-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e6;');} .icon-bolt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e7;');} .icon-sitemap{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e8;');} .icon-umbrella{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0e9;');} .icon-paste{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ea;');} .icon-lightbulb{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0eb;');} .icon-exchange{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ec;');} .icon-cloud-download{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ed;');} .icon-cloud-upload{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0ee;');} .icon-user-md{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f0;');} .icon-stethoscope{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f1;');} .icon-suitcase{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f2;');} .icon-bell-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f3;');} .icon-coffee{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f4;');} .icon-food{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f5;');} .icon-file-text-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f6;');} .icon-building{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f7;');} .icon-hospital{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f8;');} .icon-ambulance{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0f9;');} .icon-medkit{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0fa;');} .icon-fighter-jet{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0fb;');} .icon-beer{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0fc;');} .icon-h-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0fd;');} .icon-plus-sign-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf0fe;');} .icon-double-angle-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf100;');} .icon-double-angle-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf101;');} .icon-double-angle-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf102;');} .icon-double-angle-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf103;');} .icon-angle-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf104;');} .icon-angle-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf105;');} .icon-angle-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf106;');} .icon-angle-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf107;');} .icon-desktop{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf108;');} .icon-laptop{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf109;');} .icon-tablet{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf10a;');} .icon-mobile-phone{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf10b;');} .icon-circle-blank{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf10c;');} .icon-quote-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf10d;');} .icon-quote-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf10e;');} .icon-spinner{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf110;');} .icon-circle{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf111;');} .icon-reply{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf112;');} .icon-mail-reply{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf112;');} .icon-github-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf113;');} .icon-folder-close-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf114;');} .icon-folder-open-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf115;');} .icon-expand-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf116;');} .icon-collapse-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf117;');} .icon-smile{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf118;');} .icon-frown{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf119;');} .icon-meh{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf11a;');} .icon-gamepad{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf11b;');} .icon-keyboard{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf11c;');} .icon-flag-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf11d;');} .icon-flag-checkered{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf11e;');} .icon-terminal{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf120;');} .icon-code{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf121;');} .icon-reply-all{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf122;');} .icon-mail-reply-all{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf122;');} .icon-star-half-empty{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf123;');} .icon-star-half-full{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf123;');} .icon-location-arrow{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf124;');} .icon-crop{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf125;');} .icon-code-fork{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf126;');} .icon-unlink{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf127;');} .icon-question{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf128;');} .icon-info{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf129;');} .icon-exclamation{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf12a;');} .icon-superscript{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf12b;');} .icon-subscript{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf12c;');} .icon-eraser{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf12d;');} .icon-puzzle-piece{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf12e;');} .icon-microphone{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf130;');} .icon-microphone-off{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf131;');} .icon-shield{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf132;');} .icon-calendar-empty{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf133;');} .icon-fire-extinguisher{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf134;');} .icon-rocket{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf135;');} .icon-maxcdn{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf136;');} .icon-chevron-sign-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf137;');} .icon-chevron-sign-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf138;');} .icon-chevron-sign-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf139;');} .icon-chevron-sign-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf13a;');} .icon-html5{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf13b;');} .icon-css3{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf13c;');} .icon-anchor{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf13d;');} .icon-unlock-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf13e;');} .icon-bullseye{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf140;');} .icon-ellipsis-horizontal{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf141;');} .icon-ellipsis-vertical{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf142;');} .icon-rss-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf143;');} .icon-play-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf144;');} .icon-ticket{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf145;');} .icon-minus-sign-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf146;');} .icon-check-minus{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf147;');} .icon-level-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf148;');} .icon-level-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf149;');} .icon-check-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf14a;');} .icon-edit-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf14b;');} .icon-external-link-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf14c;');} .icon-share-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf14d;');} .icon-compass{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf14e;');} .icon-collapse{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf150;');} .icon-collapse-top{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf151;');} .icon-expand{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf152;');} .icon-eur{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf153;');} .icon-euro{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf153;');} .icon-gbp{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf154;');} .icon-usd{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf155;');} .icon-dollar{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf155;');} .icon-inr{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf156;');} .icon-rupee{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf156;');} .icon-jpy{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf157;');} .icon-yen{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf157;');} .icon-cny{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf158;');} .icon-renminbi{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf158;');} .icon-krw{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf159;');} .icon-won{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf159;');} .icon-btc{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15a;');} .icon-bitcoin{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15a;');} .icon-file{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15b;');} .icon-file-text{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15c;');} .icon-sort-by-alphabet{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15d;');} .icon-sort-by-alphabet-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf15e;');} .icon-sort-by-attributes{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf160;');} .icon-sort-by-attributes-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf161;');} .icon-sort-by-order{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf162;');} .icon-sort-by-order-alt{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf163;');} .icon-thumbs-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf164;');} .icon-thumbs-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf165;');} .icon-youtube-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf166;');} .icon-youtube{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf167;');} .icon-xing{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf168;');} .icon-xing-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf169;');} .icon-youtube-play{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16a;');} .icon-dropbox{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16b;');} .icon-stackexchange{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16c;');} .icon-instagram{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16d;');} .icon-flickr{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf16e;');} .icon-adn{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf170;');} .icon-bitbucket{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf171;');} .icon-bitbucket-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf172;');} .icon-tumblr{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf173;');} .icon-tumblr-sign{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf174;');} .icon-long-arrow-down{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf175;');} .icon-long-arrow-up{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf176;');} .icon-long-arrow-left{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf177;');} .icon-long-arrow-right{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf178;');} .icon-apple{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf179;');} .icon-windows{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf17a;');} .icon-android{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf17b;');} .icon-linux{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf17c;');} .icon-dribbble{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf17d;');} .icon-skype{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf17e;');} .icon-foursquare{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf180;');} .icon-trello{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf181;');} .icon-female{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf182;');} .icon-male{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf183;');} .icon-gittip{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf184;');} .icon-sun{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf185;');} .icon-moon{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf186;');} .icon-archive{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf187;');} .icon-bug{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf188;');} .icon-vk{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf189;');} .icon-weibo{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf18a;');} .icon-renren{*zoom:expression( this.runtimeStyle['zoom'] = '1', this.innerHTML = '&#xf18b;');}"}],"posts":[{"title":"测试文章","slug":"测试文章","date":"2023-04-29T07:26:21.000Z","updated":"2023-04-29T07:26:21.209Z","comments":true,"path":"2023/04/29/测试文章/","link":"","permalink":"http://yoursite.com/2023/04/29/测试文章/","excerpt":"","text":"文章标题：测试文章文章作者：disinuo文章链接：http://yoursite.com/2023/04/29/测试文章/","categories":[],"tags":[]},{"title":"kafka机制梳理","slug":"2018-11-26-kafka","date":"2018-11-26T02:23:51.000Z","updated":"2018-11-26T06:23:51.000Z","comments":true,"path":"2018/11/26/2018-11-26-kafka/","link":"","permalink":"http://yoursite.com/2018/11/26/2018-11-26-kafka/","excerpt":"前言最近我们小组在尝试搭建大数据系统，各种没听过的名词搞得我们很头大，于是准备好好弄清楚kafka到底是个什么东西~ 简介简单来讲，kafka维护了一个消息队列，以发布-订阅的模式维护了消息发布者和接收者之间的通讯。下面看下它的主要结构吧~","text":"前言最近我们小组在尝试搭建大数据系统，各种没听过的名词搞得我们很头大，于是准备好好弄清楚kafka到底是个什么东西~ 简介简单来讲，kafka维护了一个消息队列，以发布-订阅的模式维护了消息发布者和接收者之间的通讯。下面看下它的主要结构吧~ 整体物理结构 三个关键的角色就是：生产者、消费者、服务器（实在不知道Broker可以咋翻译，暂且理解成服务器吧） 宏观来看整体流程就是： 生产者往服务器中写消息 消费者从服务器中拿消息 具体如何写如何读，服务器如何组织消息的存储，往下看 Producer生产者发布消息，如上图所示，producer必须要指定消息的topic，topic可以理解成消息的类别，因为这个是消费者的订阅单位。partition和key是可选的这里不赘述了 Broker一个broker可以理解成一个服务器节点，物理上用来存放消息队列。 Topic因为每条消息都属于某个topic，所以逻辑上消息是按topic存储的。而由于一个topic可能非常大，所以会分成很多个partition，那么为了负载均衡，通常一个topic的不同partition会分配到不同的borker上。具体哪个topic的哪个partition分配在哪个broker上要看开发者采用的策略。但这个是物理上的事情啦~我们等下从逻辑上分析它们和consumer之间的对应关系 Partition一个partition是一个队列，每个元素（消息）有一个自己的标号，称为offset。根据offset可以O(1)的查找消息。（仿佛是队列和数组的结合体~）新的消息来了之后会被添加到队尾，因此partition是按照到达时间排序的有序队列 Consumer &amp; Consumer Group消费者从broker获取它订阅的topic的消息。一个Consumer Group里可以有多个Consumer，其实Consumer Group和Consumer之间的关系就像一个team和组员之间的关系一样。一个team要一起完成工作A(分为part1、2)、B(分为part1、2)，但是活太多了要分一下任务呀，于是组员a负责工作A的part1，组员b负责工作B的part1，组员c负责工作A、B的part2（如果两个part2比较轻松的话~）。 类似的，上面例子里的team就是Consumer Group，订阅消息是以group为单位的，于是上面的工作A和B就好比是Consumer Group订阅的两个topic，而两个topic分别都有两个partition。于是一共有4个partition分给3个consumer（对应例子中的组员）。 这样一来关系就很明确了： 一个Consumer Group里的consumer们订阅的topic是一样的 一个consumer可以负责多个partition 一个partition不能对应多个consumer（同一个consumer group内） 这点细说一下，因为有可能有多个consumer group订阅了同一个topic，每个consumer group的处理速度可能不一样，所以每个consumer要自己保存一个状态记录自己负责的partition读到哪了。如果在同一个consumer group内有多个consumer负责同一个partition，那么他们就要共同读写这个状态，这样维护这个状态就比较复杂（比如需要使用锁之类的）。 各部分逻辑关系由于第一张图把kafka集群当成一个黑盒，所以没有画出broker、topic、partition与producer、consumer之间的关系。为了更清楚的理解，下面的例子将他们之间的关系画出来了~ 下例假设kafka集群中有2个broker，1个topic，这个topic有4个partition；两个consumer group，分别有2个和4个consumer，这两个consumer group都只订阅了Topic0。可以看到consumer groupA中，consumer的数量少于这个group订阅了的partition的数量，因此会有一个consumer对应多个partition的情况。而consumer groupB中，二者数量刚好相等，因此每个consumer对应一个partition。假如有一个consumer group的consumer数量少于其订阅的partition，那么就会有consumer闲着（前面说过不能多个consumer对应一个partition），这样的设计不好，很浪费。 Partition副本前面的关系梳理为了简单，忽略了副本的存在。实际上kafka为了保证数据的可靠性，会给每个partition创建多个副本存储在不同的broker上，这样一来如果某个broker突然挂掉，其他broker上与之对应的partition也能继续work~ 下面举个例子，为了简单，例中仅有一个topic，它有2个partition，每个partition有3个副本。阴影的partition是leader，其余的都是follower 每个partition会有一个leader，其余的都是它的follower。 每次producer和consumer对于partition的读写都会被kafka指引到leader上（具体是如何找到leader的我就没有研究啦） 如果有broker挂了，比如上图中的Broker0，那么p0的leader就挂了，kafka会在p0剩下的两个follower中选一个（选举规则我也没研究）重新作为leader 在没有broker挂掉的平时，follower跟leader的关系有点类似consumer和partition的关系，从leader pull数据使得自己的数据与leader保持一致 总结关于kafka我完全是一个初学者，因此文中哪里理解的不对、描述有问题的地方欢迎评论or邮件指出！一起进步呀~~ 参考链接kafka官方介绍Kafka官方文档Kafka官方中文文档Kafka中partition和消费者的对应关系Thorough Introduction To Apache KafkaStackOverflow - Understanding Kafka Topics and Partitions","categories":[],"tags":[{"name":"大数据","slug":"大数据","permalink":"http://yoursite.com/tags/大数据/"},{"name":"kafka","slug":"kafka","permalink":"http://yoursite.com/tags/kafka/"}]},{"title":"qt开发遇到的各种坑","slug":"2018-5-23-QTCreatorProcessEndForcefully","date":"2018-05-23T08:51:42.000Z","updated":"2018-05-23T09:23:51.000Z","comments":true,"path":"2018/05/23/2018-5-23-QTCreatorProcessEndForcefully/","link":"","permalink":"http://yoursite.com/2018/05/23/2018-5-23-QTCreatorProcessEndForcefully/","excerpt":"前言我本科毕设是使用 qt框架 和 QTCreator 作为IDE进行项目开发，过程中遇到了很多很迷的bug或者遇到的问题在这边记录一下。","text":"前言我本科毕设是使用 qt框架 和 QTCreator 作为IDE进行项目开发，过程中遇到了很多很迷的bug或者遇到的问题在这边记录一下。 BUG_1: 程序异常退出的因素程序在编译构建的时候没有报错，但是运行时控制台就会突然输出【程序异常结束-The process was ended forcefully.】，然后程序就挂了。在经过google以及自己的摸索后，总结了几个会导致报这个错误的原因，如下。 直接使用空指针 直接使用没实例化的指针 除以0 数组越界 delete空指针 反正就是记得把代码写的健壮性高一点吧，上面这些问题控制台都不输出具体的bug信息真的让人很蛋疼，一句【程序异常结束】就把我们打发了。。。orzPS：debug模式可能是我不太会用吗反正也没定位到具体bug。。。如果有成功使用debug的小伙伴欢迎评论补充！~~ BUG_2: error: symbol(s) not found for architecture x86_64这个也是特别头疼的一个报错。。。可能存在的问题如下。 环境配置的qt版本与代码使用的qt版本不兼容 slots如果在head里声明了而在cpp里没定义 如何绑定带参数的slot下面这段代码要给一个button数组里的每个button都绑定同一个slot，但是传入的参数不同123456789101112131415media_ImageBtns = new QPushButton*[MEDIA_MAX_NUM];//使用一个QSignalMapper作为媒介QSignalMapper *signalMapper = new QSignalMapper(this);for(int i=0;i&lt;MEDIA_MAX_NUM;i++)&#123; media_ImageBtns[i] = new QPushButton(tr(\"Button\"),this); media_ImageBtns[i]-&gt;setEnabled(false); //下面这行代码的'map()'是qt自带的方法， //大致意思就是将每个button的“点击”信号，绑定给signalMapper的map()槽 connect( media_ImageBtns[i], SIGNAL(clicked()), signalMapper, SLOT(map())); //大意是将每个button与一个参数绑定，并将这些绑定好的组存在mapper里 signalMapper-&gt;setMapping(media_ImageBtns[i], i); &#125; //将mapper与你自定义的带参数的slot绑定， //并且指定将刚刚与每个button对应的参数一一传递给你的自定义槽函数 connect(signalMapper, SIGNAL(mapped(int)), this, SLOT(your_slot(int))); 所以其实这个signalMapper就是一个中介啦~ 帮忙暂存并中转一下数据而已哦记得要引用头文件 #include &lt;QSignalMapper&gt;~ 参考资料Qt鼠标右键创建菜单Qt使用connect函数时向slot传递参数","categories":[],"tags":[{"name":"C++","slug":"C","permalink":"http://yoursite.com/tags/C/"},{"name":"qt","slug":"qt","permalink":"http://yoursite.com/tags/qt/"}]},{"title":"近日杂谈","slug":"2018-4-21-summary","date":"2018-04-21T06:23:51.000Z","updated":"2018-04-21T06:23:51.000Z","comments":true,"path":"2018/04/21/2018-4-21-summary/","link":"","permalink":"http://yoursite.com/2018/04/21/2018-4-21-summary/","excerpt":"考上清华研究生、参加#一年读完柯林斯#、又一次半马228、拍毕业照、开了网易云电台练习口语~","text":"考上清华研究生、参加#一年读完柯林斯#、又一次半马228、拍毕业照、开了网易云电台练习口语~ 考研有了好结果努力总算没有白费~ 2.4 出初试成绩 3.9 清华大学网站公布2018年研究生录取线。 3.13 清华大学软件学院公布复试名单，排名4/15 3.15 参加复试，上午笔试，下午面试。 3.18 体检。 3.21 收到清华大学软件学院email复试通过的通知。（电子邮件） 4.2 清华大学软件学院公布拟录取名单，排名2/12 一年读完柯林斯柯林斯是一本英文词典嘛~这个活动就是每天读10页，用时200天把它读完。知道这个活动是之前考研复习的时候知道了唐静老师，这个课程他是负责人之一，当时就想着考研完我也要报名。于是便在3.9开始了每天读词典的活动~有人说读词典有什么用，确实我也不指望自己词汇量能猛增多少，我只是觉得，我好像从来没这样耐心的读过一本词典，就把它当做一本书看就好了啊~经常会看到各种有趣的用法，哪怕只是些我们很熟悉的单词组成的，比如：come clean about是坦白承认 ​​​​，bridge the gap是消除隔阂，bite the bullet渡过难关 等等。这些点滴的收获足以构成我参加这个课程的理由了~。并且我也想体验一下一件事坚持一年是什么样的感觉。现在已经打卡40天啦~慢慢变成了习惯真的是很幸福了 4.20拍毕业照穿起了学士服，不知不觉就要毕业了呢，大学四年真的是过得飞快啊 再跑半马，遗憾没pb开始跑马到现在断断续续也有两年了～首马是16年的扬马，可能是第一次有一股虎劲儿吧那次一直是我的PB，211今天本来想pb的，但是大概4km的时候就开始岔气，走了一段，后来又时不时的岔气，我就意识到无缘pb了有时候坚持与否真的就是一念之间。第一次岔气后我就想，不然等会等收容车来接我算了，好了一点之后又想，不然在关门之前跑完吧～起码完赛之后到了一个补给站拿了海绵之后仿佛满血复活，又想，不行，还是尽力跑吧！～ 大概13km遇到了230的官兔，准备跟着他们跑了，后来还超过了他们哈哈总之这次由于时不时的岔气我就几乎每个补给站都停下吃吃喝喝😌补给站的香蕉真好吃 最终2:28:40完赛，按照今天跑的状态来看还算不错了，但按照最开始想pb的野心来看远没有达到目标。所以事实证明跑马前不好好训练，pb只能成为幻想🙃 另外，仙马虽然不是很大规模的赛事，但是我对主办方整体的印象是真的非常好！～包括整体的组织很有秩序，取包的时候很顺利，给把【存包车号】印在号码簿上这个小细节点赞～沿途的补给站也超级多～完赛包里有能量棒😁以及今天天气简直太适合跑步！！全程多云！非常舒服！ 在网易云开了个电台叫这个☞dsn的英语经典台词练习欢迎各位订阅~欢迎点赞、提建议、点评我的发音 等等各种现在出了4期，每周三更新~开这个电台是为了练习一下自己的口语，不然学的一直是哑巴口语，然后记录下自己的成长过程（希望可以有成长。。。）内容一般就是某些影视作品里我比较喜欢的片段的台词朗读，或者说叫重新演绎？我一般会模仿演员的口气和语调~现有的4期分别是《真爱至上》、《楚门的世界》、《老友记》和一首诗《When you’re old》为了练口语顺道找到好素材我现在在每天跟读老友记哈哈~有的时候真的能学到好多日常用语，比如可以用”This is a ‘Dear Diary ‘ moment”表示开心激动的心情~ 好好做毕设最近在学图像处理之类的东西，要开始写论文了！毕设好好搞~ passion！前几天一个passion老狗突然问我要不要上周年庆的OG秀！！这把我激动的啊！！！没想到毕业之前还能再上台跳个舞！！而且今年的周年庆宣传片炸的不行！除了上台跳舞之外我也能看现场了！！！超开心！！搬到鼓楼之后就进入养老模式的我，很感谢passion还记得我^ ^~ 最后最近差不多就发生了这些~在确定了要去清华读研了之后，欣喜之外，也是有压力的。平时空余时间要多多学习专业知识啊！希望自己可以顺利毕业然后未来继续努力~~！ PS：弱弱的说一句，以后争取月更博客","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"http://yoursite.com/tags/生活/"},{"name":"考研","slug":"考研","permalink":"http://yoursite.com/tags/考研/"},{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"考研复习资料推荐","slug":"2018-1-7-PQExam_referenceRecommendation","date":"2018-01-07T12:23:51.000Z","updated":"2018-01-07T11:23:51.000Z","comments":true,"path":"2018/01/07/2018-1-7-PQExam_referenceRecommendation/","link":"","permalink":"http://yoursite.com/2018/01/07/2018-1-7-PQExam_referenceRecommendation/","excerpt":"首先声明，复习资料适用程度本就因人而异，本篇是我的使用经验和感受~各位酌情参考。以及，本人是2018届考研党。","text":"首先声明，复习资料适用程度本就因人而异，本篇是我的使用经验和感受~各位酌情参考。以及，本人是2018届考研党。 数学李永乐复习全书+660题+历年真题解析我买的是全套，包括分阶段习题，但觉得那本难度过高，只做了一章。复习全书还是很全面的，推荐。660题就是一本题册啦~可以刷一遍，第二遍再刷自己的错题。 不过我听了张宇的课觉得他讲得很好，但没时间看宇哥的书和题册了，所以你们也可以问问看用过张宇的书的学长姐质量如何～ 然后真题也一定要吃透，可以多刷几遍，我10～16年的大概刷了4遍吧，当然后来只是刷错题 ‌英语真题！可以买黄皮书系列的真题。解析比较详细。作文我买的是王江涛的。英语吃透真题就够了，可以多做几次，摸透出题思路，不需要做模拟题。很多英语考研名师都说模拟题一般质量会比真题差很多，所以除非你时间特别多，不然只做真题就可以啦。首刷近10年的，时间够再刷近20年的。我买了黄皮书系列的阅读150篇，就做了一点，后期就一直在做真题了。 作文讲道理王江涛那本还是挺好的，反正很多人都在用，但我莫名背不进去，所以你们也可以再考察考察。。。 ‌政治肖秀荣精讲精练+肖秀荣1000题+肖四肖八+徐涛背诵笔记+徐涛小黄书这些是我买了的，你们可以参考着看看。买了精讲精练就不需要买大纲解析了，我之前刷知乎经验贴是说，精讲精练比大纲解析容易看进去，所以就买的这个。 1000题就如数学660一样，用来刷题的。如果你复习的早，这个1000题可以多刷几遍。那你就可以第一遍用铅笔写，把错题标记出来，然后擦掉，就可以反复利用。我是时间不够了，第一遍做了全册，第二遍只做了单选错题。 肖四肖八是到最后一两个月的时候才会出版的，模拟题以及预测的作用，基本人手一本的。肖四的分析题，就是大题，是要背的，肖大大预测还是蛮准的。 徐涛背诵笔记，就相当于是重要知识点的整理，还会有一些逻辑上的梳理，我觉得帮助很大，强化阶段用的。 你可能会听说风中劲草，那个也是知识点整理，但是会比这个背诵笔记全很多，但你也懂越到后期知识点就会越浓缩，包含的东西少但也更重点。我后来是没时间看风中劲草了，不过要是在复习的前期阶段这本还是不错的。 小黄书！强推！ 预测分析题的，我今年就是背的它，每道大题都压中了至少一个小问。 总结专业课就各学校各专业各不相同啦，在这就不啰嗦了。 祝愿大家都取得理想成绩 ^ ^~也希望我可以通过初试啊啊啊！~~~","categories":[],"tags":[{"name":"考研","slug":"考研","permalink":"http://yoursite.com/tags/考研/"}]},{"title":"写在考研初试后","slug":"2018-1-7-PQExam_afterFirstTest","date":"2018-01-07T11:23:51.000Z","updated":"2018-01-07T11:23:51.000Z","comments":true,"path":"2018/01/07/2018-1-7-PQExam_afterFirstTest/","link":"","permalink":"http://yoursite.com/2018/01/07/2018-1-7-PQExam_afterFirstTest/","excerpt":"这是一篇干货和感想夹杂的文章。。。","text":"这是一篇干货和感想夹杂的文章。。。 起点在决定要考清华之后，自己也是心里一点底都没有，因为，清华北大，在我心目中，一直是 天呐 望尘莫及的地位。然后二三月份，开始查有关的资讯，初步了解关于考研 关于清华软件工程研究生的各种信息。知道了考试的科目，4月份开始第一轮复习专业课。其实这第一轮复习的还是比较水的，主要是听网课，做做笔记什么的。没有结合做题，所以真正记住的知识点并没有多少。 实习因为暑假要去华为实习，所以我才4月份先开始复习一波的。 说到实习，好多人都不懂我为啥考研暑假还要去实习，要知道暑假可是复习考研的大好时光啊。确实，但是我主要是因为当时不懂这些套路，另外也真的是想本科出去实习一次，才有了这样的安排。 虽然损失了暑期复习的时间，但是！真正坚定我考研的决心的也正是这次实习经历。实习分到了一个不太对口的部门，然后我就在用自己的技能做一些辅助工作的工具，没怎么涉及业务。 所以有点无聊吧，学到的东西也不多，只能说是稍稍学到了一点职场经验。 然后对于一些看起来很高大上的部门，云计算啊机器学习啊之类的，又是想去但又完全没学过，没有相关知识，也就只能止于想想。所以，我觉得，本科还只是学一些专业的基础一点的知识，要通过读研再在某个更专一点的方向多学一学，先把自己提升提升再迈入职场吧。 相比较损失的复习时间，我觉得树立起的坚定目标和因此催生的强大动力更加珍贵。 实习是6-8月，所以真正复习时间是9月-12.22，不到4个月也制定了计划，一共4轮，差不多一个月一轮。总体节奏还算在自己的控制下，只不过中间确实心态崩过好多次，每科都让我崩过。。。 数学复习数学资料买的是李永乐全套，那本知识点还是很全的，不过题册真的是偏难，跟往年真题比起来，做的就很虐。【虽然今年考试好像真的比往年难。手动doge脸】好多次做一上午数学从图书馆走出来感觉整个人都懵懵的。。。9月做完了李永乐复习全书，挺多地方都没理解透的其实。因为概率论有的地方实在不理解，大二学的时候也没太学明白，就去听了张宇的概率论的课，帮助很大。我就想要不干脆微积分也听一听。就两倍速用几天时间把微积分的课听了一遍哈哈哈。查缺补漏吧~ 也确实学到了一些更好的做题思路，比如伽马函数真的是6的不行，从此不再惧怕最后一道大题。宇哥也经常励志一把，是因为他的【保证2点到6点的充足睡眠，就拼这一段时间能怎么样呢，我不是现在还活的好好的】我也开始照做。 也许好多人会抨击这种作息吧，但我觉得对我受用，我11月后半个月和12月上旬差不多是这个作息。因为我平时就睡得少，所以白天精神状态还可以。得补充一句，确实每个人都不一样，要在实践中检验和发展真理啊哈哈哈，不能教条，熬夜后白天困得要死的小伙伴就不建议这样了，还是保证充足高质量睡眠才是王道。 英语复习英语吧，我一直觉得我基础不算好，一轮二轮复习也有点忽略它了，主要背单词来着。然后做真题阅读完型错的非常惨烈，又心态爆炸。好在11月的时候 特别幸运遇到了章晋林老师。小林子讲阅读是真的好，选项定位、出题思路分析、做题技巧总结，人还特别可爱哈哈哈。真的有种茅塞顿开的感觉～然后我的阅读就从原来迷离状态半蒙半猜做题，变成了大部分题目可以精准定位，20道基本可以稳定在错5个以内，就是差不多一篇错一个【对于我来说真的算少了。。。】，要知道我原本每篇错两三个都是常事。 翻译我从来没管过，在知乎看经验贴说唐静老师讲的不错，就去听了听，也是帮助很大，以前都不知道翻译有这么多讲究。 作文主要就是12月背了14篇小作文模板，大作文背了几个套路的句子，掌握了一下三段式的结构。 政治复习政治，10月才开始列入我的复习计划。应该跟大家一样吧，这是一门从零开始的学科。买了肖老精讲精练和1000题。每天上午看一上午。 一开始的马哲就把我虐的死死的。啥？必然和自由是啥？？必然是什么玩意；华佗对症下药跟矛盾有什么关系？？？整个人都不太好orz然后战友说可以去听听腿姐、徐涛的课，尤其马原会很有助于理解的。然后我就开始了入坑这两个老师的征程哈哈哈~腿姐语言通俗易懂，例子很生活很贴切。涛哥很重整体逻辑的把控，一些经典口头禅也是可爱的不行：你看看你看看；这个选项你不选你想干什么。 在这两位老师的课的伴随下，学政治变成了每天很开心的事情，以及腿姐推荐的【将改革进行到底】，后来每天吃饭看，简直就是高级的知识点梳理视频嘛哈哈哈，而且让我对党和习大大的理解也更深刻了一点，看得贼燃～ 专业课复习专业课是复习的最没有章法的了，没有真题【能找到的都是回忆版】，没有系统的教材。于是我主要是听清华的学堂在线的网课，搭配课后练习题，把错题整理出来。【数据结构看严蔚敏的那本书】。以及在github找到了os课对应的一个仓库，里面好多练习题哈哈哈。 在某宝买的所谓清华考研复习资料也没什么含金量，基本都是网上可以找到的资料，而且还有很多答案都错了，导致我后来根本不敢用它了。 冲刺阶段12月进入冲刺阶段了，政治资料乖乖的肖四肖八，时政小册，徐涛小黄书都买了。哦还用了腿姐冲刺宝典。 肖四肖八不用多说了，必买。 徐涛小黄书是真的靠谱，大题我主要是背的小黄书，然后参考肖四大题的出题资料、出题角度、答题思路，用小黄书的知识点答出来。 今年小黄书压中率也非常可观，涛哥说他也是喜忧参半，忧是因为感觉要被出题组盯上了哈哈哈另外说实话时政小册子用处不大，内容太多了，小黄书里有重点的精简版时政，看这个就够了。具体复习过程就说到这吧。 考前准备考前10天左右开始调整作息☞0.00-6.00。但其实考前一周，有点失眠，要1点左右才能睡着，4、5点又醒了。也许是压力大？但我心理上感觉其实还好哎，可能是生理上本能的紧张导致的吧。 12.13考场安排出来，开始 订酒店。官网说的是12.14公布，还好我12.13，凌晨0.10多的时候出于好奇去看了一下，已经公布了！然后去订宾馆发现好多家都满了！我的妈你们都怎么知道是13号公布的！还好我看了一下，然后订了一家。刚爬上床要睡，结果发来短信说房满预定失败了。吓得我赶紧又爬下来换了一家，短信说早上8.30之前会通知有没有订成功，这我就不敢睡了呀，就边复习边等，终于早上7点收到了预定成功的短信～！ 考前一天中午出发去宾馆的，在第五十中学考。下午去看考场时学生还没放学不让进，不过好在学校比较小，只有三个教学楼，就在门口看了下位置图和考场安排就回去了。 考中第一天的两科考的还算可以，而且背的满脑子的政治和作文终于可以暂时放在一边了。而且午休时间真的短，我两天中午都是吃的面包，睡一觉醒来喝个咖啡再看看下午科目找找状态。所以真的真的不要想上午考完的科目了！没时间想。 第二天是炸裂的一天。两门都是时间不太够，考完心态崩崩崩考完数学走回酒店的一路都整个人很郁闷，在想刚刚那道题怎么怎么样是不是就对了，另一道题有没有注意到怎么怎么样，是不是做错了。然后意识到不能这样了！下午还有150分呢！努力的，深呼吸，调整自己，进入备战专业课的状态。 因为有3科，要把每科主要知识点串一遍，我自己的盲点过一遍，以及还要退房，时间很紧张，没有午睡，直接喝了杯咖啡就开始肝了。 专业课考的也是一言难尽，有几个知识点我复习的时候没怎么关注，考到的时候脑袋嗡的一下，短暂的几秒钟闪过了自己要二战的想法，然后极力克制自己别想那些没用的赶紧把会的题目做出来。旁边的人做题比我快，翻卷声也给我很大压力。 最后，每个人一个密封袋，要自己把题册和答题纸封起来交上去。 结束。 对了考试的时候最好戴个非电子表，虽然考场有钟，但是可能挂在后面啊！回头看很不方便！尤其你要是坐在第一排的话。。。不要问我是怎么知道的。。。orz好在第二天的监考老师允许我的电子表带进去了，看时间方便了许多 emmm碎碎念我在第一天考完的时候，意识到，整个考场30几人吧都是考清华，这个考点肯定有几个考场都是报考清华的【没敢去确认】，全国又有这么多城市，每个城市都有这么多考场的人跟我竞争，最后只要，10几个人，我得是南京唯一一个“晋级”的才有希望吧。。。想到这我就很绝望orz，又觉得如果我真的真的过了初试，哪怕只过初试，我也算是非常厉害了吧～！ 感想总体来说，我觉得考研的复习阶段，比高考累、比高考难。其实主要是因为没有大部队，不像高考前，老师、学校带着你复习，模考，还有那么多同学一起，相互激励共同奋斗着。。 而考研，更像是一场孤军奋战，我只有一个初中朋友，时不时的会交流下感想、进度，在心态崩的时候互相鼓励鼓励；一个学姐，会不时的给我分享分享经验什么的；以及有个考研的室友～但因为报考学校不一样，交流也不多。 所以，考研是一个集耐力、心态、学习能力、计划能力于一体的过程。 不管结果如何，坚持下来了的我们，走进了考场，并完整的参加完了所有考试的我们，已经很棒了！希望初试有个好成绩，好好准备复试。 我很满足，我经历了人生中也许是最大型的两场考试——高考、考研； 我很幸运，考研一路遇到了腿姐、涛哥、宇哥、小林子、静静、肖老，这些好老师; 感谢在学习到了知识之余也学到了人生经验。 这趟旅途，不亏！～ 初稿 - 2017.12.26 完善 - 2018.1.7","categories":[],"tags":[{"name":"考研","slug":"考研","permalink":"http://yoursite.com/tags/考研/"},{"name":"随笔","slug":"随笔","permalink":"http://yoursite.com/tags/随笔/"}]},{"title":"主机A给已知IP地址的主机B发送ip报文的过程","slug":"2017-7-31-IP","date":"2017-07-31T12:38:11.000Z","updated":"2017-07-31T12:38:11.000Z","comments":true,"path":"2017/07/31/2017-7-31-IP/","link":"","permalink":"http://yoursite.com/2017/07/31/2017-7-31-IP/","excerpt":"前言最近一直在看网络的书，有的地方看得有点乱，这里总结一下两个主机之间发送数据包的过程。可能内容会有小错误，欢迎在下面留言指出~我之后学的更深入了也可能会来完善这篇~","text":"前言最近一直在看网络的书，有的地方看得有点乱，这里总结一下两个主机之间发送数据包的过程。可能内容会有小错误，欢迎在下面留言指出~我之后学的更深入了也可能会来完善这篇~ 过程如下 1.封装好了有源ip、目标ip、报文内容的ip报文。交由而二层后要知道目的mac地址，所以下面是确定目的mac地址的过程~ 2.主机A先将主机B的ip跟自己的网络掩码相与，判断是否在同一网段 3.a. 如果在同一网段： 1.主机A检查自己的ARP缓存有没有主机B的mac地址，没有的话就发一个ARP请求并把结果添加到ARP缓存里 2.将B的mac地址以【目的mac】添加到mac帧头部。 3.发送~Over 3.b. 如果不在同一网段： 1.主机A检查自己的ARP缓存有没有默认网关的mac地址，没有的话就发一个ARP请求并把结果添加到ARP缓存里。 (不在一个网段的话，就发给默认网关，默认网关再进一步分发~) 2.将默认网关的mac地址以【目的mac】添加到mac帧头部。 3.发送给默认网关 4.默认网关接收到之后，查看【目的ip】，对照自己的路由表判断是否能直接交付 5.a. 如果能直接交付(就是B与默认网关的某个端口处于同一个网段)： 1.默认网关就查arp缓存(没有的话就发arp请求)，然后把B的mac地址以【目的mac】添加到mac帧头部。 2.发送~Over 5.b. 如果不能直接交付(还要再交给别的路由器) 1.默认网关通过路由表判断把此报文从哪个端口转发出去 2.通过arp缓存查询该端口对应的路由器的mac地址(这个地方不是很确定。。)，并把它以【目的mac】添加到mac帧头部。 3.如果一直不是直接交付就循环5b，否则就执行 5a 那步~最终发送到B 结束语抓住7月的尾巴发篇博客哈哈 ^ ^ ~","categories":[],"tags":[{"name":"网络","slug":"网络","permalink":"http://yoursite.com/tags/网络/"}]},{"title":"Android：AsyncTask用法","slug":"2017-06-13-android_asyncTask","date":"2017-06-13T11:59:16.000Z","updated":"2017-06-13T11:59:16.000Z","comments":true,"path":"2017/06/13/2017-06-13-android_asyncTask/","link":"","permalink":"http://yoursite.com/2017/06/13/2017-06-13-android_asyncTask/","excerpt":"基本概念AsyncTask是什么？—异步任务，听起来是用来执行一些比较耗时的操作的。首先要知道Android的两个概念：主线程(又叫UI线程)和后台线程 主线程：是一个Android程序开始运行时默认启动的线程，主要用来显示界面，跟用户交互 后台线程：除了主线程以外的线程，加载数据等 所以，为了让用户体验好一点，为了程序能快速响应用户的操作，稍微耗时点的工作最好都不要放在主线程里啦~那我们要自己创线程吗？并不需要，Android给我们封装了一个类~就是这个 AsyncTask 啦~","text":"基本概念AsyncTask是什么？—异步任务，听起来是用来执行一些比较耗时的操作的。首先要知道Android的两个概念：主线程(又叫UI线程)和后台线程 主线程：是一个Android程序开始运行时默认启动的线程，主要用来显示界面，跟用户交互 后台线程：除了主线程以外的线程，加载数据等 所以，为了让用户体验好一点，为了程序能快速响应用户的操作，稍微耗时点的工作最好都不要放在主线程里啦~那我们要自己创线程吗？并不需要，Android给我们封装了一个类~就是这个 AsyncTask 啦~ AsyncTask4个主要方法因为AsyncTask是抽象类，必须要继承、重写关键方法才能用他们都是回调函数，就是我们负责实现就好，Android负责调用 onPreExecute doInBackground onProgressUpdate onPostExecute 看名字就能猜出来个大概意思了，只有onProgressUpdate不大好理解，现在逐一解释一下 onPreExecute这个是最先执行的方法，是在主线程执行的，一般进行一些初始的配置 doInBackground(Params…)第二个执行的方法，是在后台线程执行的（也是主线程的子线程），用来做耗时操作的主要部分~ onProgressUpdate(Progress…)这个是给用户反馈进度条用的~，我们可以在doInBackground里随时调用AsyncTask的函数publishProgress,publishProgress函数的内部会调用onProgressUpdate~等下举个例子就清楚啦 onPostExecute(Result)在doInBackground执行 结束 之后执行，它的参数Result是doInbackground的返回值 注意：除了doInBackground方法，另外3个都是在主线程执行的~ 例子来啦这个源于stackoverflow上一个大神给的例子~ 是一个模拟下载，显示进度百分数的过程1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465public class AsyncTaskExample extends Fragment &#123; protected TextView _percentField; protected InitTask _initTask; @Override public void onCreate(Bundle savedInstanceState) &#123; super.onCreate(savedInstanceState); _initTask = new InitTask(); //这样就可以启动这个task啦 _initTask.execute(); &#125; @Override public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) &#123; View rootView = inflater.inflate(R.layout.fragment_main, container, false); _percentField = (TextView)rootView.findViewById(R.id.percent_field); return rootView; &#125; /** 解释一下这里的3个参数，这是我们在继承AsyncTask时指定的三个泛型参数， 分别是上面提到的三个回调方法所用的参数 1. Params 在执行AsyncTask时需要传入的参数，即doInBackground的参数 2. Progress 后台任务执行时，在界面上显示当前的进度的类型，即onProgressUpdate的参数 3. Result 当任务执行完毕后，返回结果的类型，即onPostExecute的参数和doInBackground的返回值类型 */ protected class InitTask extends AsyncTask&lt;Void, Integer, String&gt; &#123; @Override protected String doInBackground(Void... params) &#123; int i = 0; while (i &lt;= 50) &#123; try &#123; Thread.sleep(50); publishProgress(i); i++; &#125; catch (Exception e) &#123; Log.i(\"makemachine\", e.getMessage()); &#125; &#125; return \"COMPLETE!\"; &#125; @Override protected void onPreExecute() &#123; Log.i(\"makemachine\", \"onPreExecute()\"); super.onPreExecute(); &#125; @Override protected void onProgressUpdate(Integer... values) &#123; super.onProgressUpdate(values); Log.i(\"makemachine\", \"onProgressUpdate(): \" + String.valueOf(values[0])); _percentField.setText((values[0] * 2) + \"%\"); _percentField.setTextSize(values[0]); &#125; @Override protected void onPostExecute(String result) &#123; super.onPostExecute(result); Log.i(\"makemachine\", \"onPostExecute(): \" + result); _percentField.setText(result); _percentField.setTextColor(0xFF69adea); &#125; &#125;&#125; 总结以上就是AysncTask的基本用法啦~ 参考Udacity课程StackOverflow 郭霖:Android AsyncTask完全解析，带你从源码的角度彻底理解Android开发文档Android开发者：你真的会用AsyncTask吗","categories":[],"tags":[{"name":"android","slug":"android","permalink":"http://yoursite.com/tags/android/"}]},{"title":"java：Array(数组)和ArrayList的区别","slug":"2017-05-31-array_arrayList","date":"2017-05-31T06:54:21.000Z","updated":"2017-05-31T06:54:21.000Z","comments":true,"path":"2017/05/31/2017-05-31-array_arrayList/","link":"","permalink":"http://yoursite.com/2017/05/31/2017-05-31-array_arrayList/","excerpt":"前言在java中，ArrayList其实是内部封装了一个数组来放数据的。那我就想他们两个究竟有哪些区别呢这篇博客主要以8 Difference Between Array And ArrayList In Java With Example为基准~，有的地方加了自己的理解","text":"前言在java中，ArrayList其实是内部封装了一个数组来放数据的。那我就想他们两个究竟有哪些区别呢这篇博客主要以8 Difference Between Array And ArrayList In Java With Example为基准~，有的地方加了自己的理解 区别是否可改变size 数组不能改变size ArrayList的size是动态的 原理：不是说ArrayList里也是一个数组嘛，那它怎么实现的动态size呢~看下源码（省略部分细节） 1234567891011121314151617181920212223242526//下面的【elementData】就是那个放数据的数组public boolean add(E e) &#123; //这个方法的作用是 【size不够的话就扩容】 ensureExplicitCapacity(size + 1); elementData[size++] = e; return true;&#125;private void ensureExplicitCapacity(int minCapacity) &#123; //需要的最小容量比当前的实际容量大--&gt;去扩容！ if (minCapacity - elementData.length &gt; 0) grow(minCapacity);&#125;private void grow(int minCapacity) &#123; int oldCapacity = elementData.length; //扩容到原来的1.5倍 int newCapacity = oldCapacity + (oldCapacity &gt;&gt; 1); //扩容完还是不够，那干脆你要多少我就扩到多少 if (newCapacity - minCapacity &lt; 0) newCapacity = minCapacity; //处理溢出的情况 if (newCapacity - MAX_ARRAY_SIZE &gt; 0) newCapacity = hugeCapacity(minCapacity); //复制elementData elementData = Arrays.copyOf(elementData, newCapacity);&#125; 所以其实每次调用ArrayList的add方法的时候它都默默的做着这些工作 性能 自动扩容：ArrayList的自动扩容会降低性能。因为扩容时是使用了临时变量实现复制的 它俩的add()、get()的复杂度一样，（数组的add指的就是通过序号赋值啦） 元素类型 数组的元素类型可以是对象，也可以是基本类型 ArrayList的元素类型不能是基本类型比如你 不能 这样初始化一个ArrayList1List&lt;int&gt; list=new ArrayList&lt;int&gt;();//会报错的！ 那你可能会问，我可以这样写呀12List&lt;Integer&gt; list=new ArrayList&lt;Integer&gt;();list.add(3); 看起来你是加的基本类型int，但其实JVM会把它解析成1list.add(new Integer(3)); 迭代访问 ArrayList可以创建迭代器Iterator，并且这个迭代器是Fail Fast的（这个翻译过来感觉怪怪的）。什么是Fail Fast呢，就是：创建了某个ArrayList的迭代器，在这个迭代器迭代的过程中，如果这个ArrayList的长度被修改了(包括add、remove，使用的不是迭代器的方法)，会立刻(Fast)抛出异常(Fail)。（update一个元素不会抛异常，亲测）一个简单例子~ 12345678910111213public List&lt;Integer&gt; filterMinus(List&lt;Integer&gt; list)&#123; Iterator&lt;Integer&gt; itr=list.iterator(); int i=0; while (itr.hasNext())&#123; int x=itr.next(); System.out.println(x); if(x&lt;0)&#123; list.remove(i); // itr.remove(); 把上面那行注掉用这行的，就不会抛异常 &#125; i++; &#125;&#125; 好像有点跑偏了，对 Fail Fast 感兴趣的话可以戳这里 类型安全 一个数组里的元素都是同一个类型的。因为创建数组的时候要声明类型嘛~ 一个ArrayList的元素可以是不同类型 因为ArrayList在声明的时候可以不规定类型，其实可以理解为声明了一个ArrayList&lt;Object&gt;的list，这样看来的话也可以Object[] array声明一个数组~所以其实没什么区别啦 获取长度 数组：length属性 ArrayList：size()方法 本来我之前一直记混他俩获取长度的方式。现在终于明白为什么了。 数组的长度不可改变，所以是一个public final的成员变量，反正大家都不可以改，直接public就好 ArrayList的长度是动态变化的，类内部可读可写，类外部仅可读，所以要把它封装成private的，外界通过get方法得到，也就是size()方法 自己的理解，不对的话欢迎指出！~^ ^ 增加元素 数组：直接通过序号赋值。 eg：array[0]=3.1; ArrayList：通过add方法。eg：list.add(0,3.1); 多维原文作者说数组支持多维，ArrayList不可以。我不赞成这一点，不过这里还是写一下。比如下面这代码妥妥跑成功了123456789101112131415List&lt;List&gt; list=new ArrayList&lt;List&gt;();List row1=new ArrayList();row1.add(3);row1.add(\"hello\");row1.add(-8.8);row1.add('a');list.add(row1);List row2=new ArrayList();row2.add(88);row2.add(666);row2.add(\"world\");list.add(row2);System.out.println(list);// 输出// [[3, hello, -8.8, a], [88, 666, world]] 总结 所以其实，我理解的ArrayList就是对Array的一个封装，提供了很多我们常用的方法（添加、删除一个元素等），减少了我们的使用负担（不必须初始化时决定大小、类型，自动扩容） 参考8 Difference Between Array And ArrayList In Java With ExampleFail Fast Vs Fail Safe Iterator In Java : Java Developer Interview QuestionsDifference between Array vs ArrayList in Java","categories":[],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"},{"name":"数据结构","slug":"数据结构","permalink":"http://yoursite.com/tags/数据结构/"}]},{"title":"Android：ArrayAdapter工作原理【含源码分析】","slug":"2017-05-27-android-adapter","date":"2017-05-25T08:51:42.000Z","updated":"2017-05-25T02:35:37.000Z","comments":true,"path":"2017/05/25/2017-05-27-android-adapter/","link":"","permalink":"http://yoursite.com/2017/05/25/2017-05-27-android-adapter/","excerpt":"前言Adapter是个什么呢？~它就相当于是MVC架构里的controller，负责数据和视图直接的联系。而叫做Adapter也是因为应用了设计模式【适配器模式】的思想。它提供一个接口，使用者只管把数据丢给它，它负责将数据展示到指定的视图里接下来就看看它的基本应用和原理~~~ 基本应用举个要展示一个数组的例子~","text":"前言Adapter是个什么呢？~它就相当于是MVC架构里的controller，负责数据和视图直接的联系。而叫做Adapter也是因为应用了设计模式【适配器模式】的思想。它提供一个接口，使用者只管把数据丢给它，它负责将数据展示到指定的视图里接下来就看看它的基本应用和原理~~~ 基本应用举个要展示一个数组的例子~ Activity创建Adapter并set给view1234567891011121314String[] data = &#123; \"Mon 6/23 - Sunny - 31/17\", \"Tue 6/24 - Foggy - 21/8\", \"Wed 6/25 - Cloudy - 22/17\",&#125;;List&lt;String&gt; weekForecast = new ArrayList&lt;String&gt;(Arrays.asList(data));ArrayAdapter adapter = new ArrayAdapter&lt;String&gt;( getActivity(), // 上下文 R.layout.list_item_forecast, // layout的ID R.id.list_item_forecast_textview, // 想把单项数据放在里面的view的ID weekForecast);//数据 //展示数据的界面ListView listView = (ListView) rootView.findViewById(R.id.listview_forecast);listView.setAdapter(adapter); 看看xml们长什么样 单项数据的layout，文件名是 list_item_forecast 123456&lt;TextView xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\" android:layout_height=\"wrap_content\" android:minHeight=\"?android:attr/listPreferredItemHeight\" android:gravity=\"center_vertical\" android:id=\"@+id/list_item_forecast_textview\" /&gt; ListView的layout 12345&lt;ListView android:id=\"@+id/listview_forecast\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" /&gt; 运行结果 原理 ArrayAdapter有一个getView()方法，在setAdapter之后调用这个方法可以获得逐项数据对应的view。（这个方法是隐式调用的） 要明确两个概念： 一个屏幕能放下的item数量 item总量（就是一共有多少条数据） 一般item总量远大于一个屏幕能放下的数量~getView()源码12345678910111213141516171819202122232425public @NonNull View getView(int position, @Nullable View convertView, @NonNull ViewGroup parent) &#123; return createViewFromResource(mInflater, position, convertView, parent, mResource);&#125;private @NonNull View createViewFromResource(@NonNull LayoutInflater inflater, int position, @Nullable View convertView, @NonNull ViewGroup parent, int resource) &#123; final View view; final TextView text;// 敲黑板啦！！--------下面是重点~~// 这个convertView呢，就相当于是屏幕上的item// 这里进行if判断，null代表这个convertView还没有被创建 if (convertView == null) &#123; //所以新创建一个view view = inflater.inflate(resource, parent, false); &#125; else &#123; // 不是null表示这个convertView被创建过啦， // 所以接下来要做的就是更新这个view里面的数据 view = convertView; &#125; //这个position是数据数组的序号，就是这个view要展示第position个数据~ final T item = getItem(position); text = (TextView) view;// text.setText(item.toString()); return view;&#125; 原理解析–实例可能上面说的不大明白，这里再举个例子说明一下。 假如有100条数据，但是设备的一个屏幕只能显示下7条。 那一开始getView会被调用7次，生成7个view。而这7次调用的if(converView==null)都是等于true的 当用户滚动屏幕，导致最上面的item滑出屏幕，第8个item进入屏幕时，getView会被调用一次。而这次if判断等于false，因为7个view都已经存在了，所以这次getView的工作是把第8条数据的值赋值给第一个view并返回 总结其实本来想找一下源码哪里调用了getView的。。但是失败了。。。看来看源码的功力还要修炼很久啊~~ 参考Android官方文档Using-an-ArrayAdapter-with-ListViewUdacity课程StackOverFlow–when-getview-in-arrayadapter-is-called","categories":[],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"},{"name":"android","slug":"android","permalink":"http://yoursite.com/tags/android/"}]},{"title":"spring的controller接口参数类型List<MyClass>报错","slug":"2017-05-25-spring_controller_interface_List","date":"2017-05-25T02:35:37.000Z","updated":"2017-05-25T02:35:37.000Z","comments":true,"path":"2017/05/25/2017-05-25-spring_controller_interface_List/","link":"","permalink":"http://yoursite.com/2017/05/25/2017-05-25-spring_controller_interface_List/","excerpt":"前言在做一个j2ee项目，原本设计成前端发送HTTP请求时提交的数据是几个基本类型和一个数组，这个数组类型是一个自定义的类，长下面这样123456public class GuestInputVO &#123; private String userRealName; private String idCard; private int vipId=-1; //省略了每个成员变量的Get、Set方法&#125; 报错场景复原","text":"前言在做一个j2ee项目，原本设计成前端发送HTTP请求时提交的数据是几个基本类型和一个数组，这个数组类型是一个自定义的类，长下面这样123456public class GuestInputVO &#123; private String userRealName; private String idCard; private int vipId=-1; //省略了每个成员变量的Get、Set方法&#125; 报错场景复原 Controller的接口12345@ResponseBody@RequestMapping(value = \"/liveIn\",method = RequestMethod.POST,produces = \"text/html;charset=UTF-8\")public String liveIn(int bookBillId,int roomId,List&lt;GuestInputVO&gt; guests) 前端请求数据格式前端的http请求我用的是JQuery，发送的数据格式如下123456789101112131415//这里是假数据~var guests=[&#123; userRealName:\"Andy\", idCard:\"111222200033338888\", vipId:\"\" &#125;,&#123; userRealName:\"Miley\", idCard:\"111222198810096666\", vipId:\"1000008\"&#125;];var data=&#123; roomId: $('#roomId').val(), bookBillId: $('#bookBillId').val(), guests: guests &#125;; 报错信息然后！后端就炸了。把JQuery请求回调函数的返回Error放在html里可以看到下面的错误提示 抢救一：封装到bean里Google了好多，终于有一个办法让我看到了一点曙光 创建一个类，让List作为它的成员变量说白了就是再封装一层，于是我有创建了一个类LiveInVO,结构如下123456public class LiveInVO &#123; private int bookBillId; private int roomId; private List&lt;GuestInputVO&gt; guests; //还是省略了每个成员变量的Get、Set方法~&#125; 更新Controller接口12//省略@注释啦public String liveIn(LiveInVO liveInVO) 效果前端那边是不用改的~这次我重启项目，发现！报错内容换了！！！哈哈哈不知道你们会不会懂这种奇怪的兴奋点~因为起码说明刚刚那个bug解决了呀~于是来看看这次是什么报错为啥会这么stupid的去访问 guests[0][idCard]？？？应该访问guests[0].idCard才对呀！！想了半天 大概是spring不认识我封装在LiveInVO里面的数组类型GuestVO吧，把它当成了数组？毕竟我这里是嵌套了两层自定义类（个人猜测，欢迎讨论~~ ^ ^） 抢救二那现在List问题解决了，但是两层嵌套的自定义类不可行，那我就把第二层换成Map吧~这样前端代码还是不用改 自定义类型LiveInVO更新1234567public class LiveInVO &#123; private int bookBillId; private int roomId; // 注意这里改成了Map~~~ private List&lt;Map&lt;String,Object&gt;&gt; guests; //还是省略了每个成员变量的Get、Set方法~&#125; 相应的修改然后可以在后端的某个地方把map转换成可读性更高的自定义类型GuestInputVO~觉得放在Controller或service里都不够好，为了低耦合高内聚，我是把转换方法做成了一个GuestInputVO新的构造器。代码如下12345678910public GuestInputVO(Map&lt;String,Object&gt; map)&#123; this.userRealName=(String)map.get(\"userRealName\"); this.idCard=(String)map.get(\"idCard\"); try&#123; this.vipId=Integer.parseInt((String)map.get(\"vipId\")); &#125;catch (Exception e)&#123; this.vipId=-1; &#125;&#125;// 加完这个构造器 如果没有显示的写一个无参构造器要记得加一个！不然spring没法构造bean啦~~~ 总结搞定啦~或者有小伙伴有其他解决办法欢迎讨论~~~邮件或下面评论都可以哦^ ^","categories":[],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"},{"name":"j2ee","slug":"j2ee","permalink":"http://yoursite.com/tags/j2ee/"},{"name":"spring","slug":"spring","permalink":"http://yoursite.com/tags/spring/"}]},{"title":"DOM Parser","slug":"2017-04-14-DOM-parser","date":"2017-04-13T14:35:37.000Z","updated":"2017-04-13T14:35:37.000Z","comments":true,"path":"2017/04/13/2017-04-14-DOM-parser/","link":"","permalink":"http://yoursite.com/2017/04/13/2017-04-14-DOM-parser/","excerpt":"DOMDocument Object Model DOM Parser特点将 XML 整个作为类似树结构的方式读入内存中以便操作及解析","text":"DOMDocument Object Model DOM Parser特点将 XML 整个作为类似树结构的方式读入内存中以便操作及解析 优点 实现 W3C 标准，有多种编程语言支持这种解析方式，并且这种方法本身操作上简单快捷，十分易于初学者掌握。 其处理方式是将 XML 整个作为类似树结构的方式读入内存中以便操作及解析，因此支持应用程序对 XML 数据的内容和结构进行修改 缺点 但是同时由于其需要在处理开始时将整个 XML 文件读入到内存中去进行分析，因此其在解析大数据量的 XML 文件时会遇到类似于内存泄露以及程序崩溃的风险，请对这点多加注意。 适用范围 小型 XML 文件解析 需要修改XML文档的内容/结构/顺序 需要多次遍历文档【用DOM就不需要每次都重新扫描文档】 需要将几个xml文档合并 需要操作文档的内容 处理流程 （一）创建DOM parser 创建工厂实例 设置工厂的参数 通过工厂创建Builder实例 （二）Parser读取xml（三）异常处理在这个过程中可能会产生如下几种异常 javax.xml.parsers.ParserConfigurationException: java.lang.IllegalArgumentException: java.io.IOException: xml文件打不开 org.xml.sax.SAXException:xml有错误 （四）生成DOM树（五）调用方可以对DOM树对象操作(增删改查)（六）最后，调用方把xml输出代码示例123456789101112// 1。创建parserDocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();DocumentBuilder builder = factory.newDocumentBuilder();// 2+3+4.读取xml，处理error，生成DOM树File f = new File(\"dom.xml\");Document dom=builder.parse(f);// 5 对DOM树操作NodeList contacts = dom.getElementsByTagName(\"Contact\");for(int i = 0; i &lt; contacts.getLength(); i++) &#123; Element contact = (Element) contacts.item(i); System.out.println(contact.getNodeValue());&#125; 一切皆Node4种NodeDocument(root)、Element、Attribute、Text 举例 是组合模式的应用 提供接口1. public String getNodeName() - public String getNodeValue()throws DOMException - public void setNodeValue(String nodeValue)throws DOMException - public short getNodeType() - public Node getParentNode() - public NodeList getChildNodes() - public Node getFirstChild() - public Node getLastChild() - public Node getPreviousSibling() - public Node getNextSibling() - public NamedNodeMap getAttributes() - public Document getOwnerDocument() 参考xm341v13_dom.pdfibm:java处理三种xml主流技术介绍","categories":[],"tags":[{"name":"SOA","slug":"SOA","permalink":"http://yoursite.com/tags/SOA/"},{"name":"DOM","slug":"DOM","permalink":"http://yoursite.com/tags/DOM/"}]},{"title":"记第一次淋雨的马拉松","slug":"2017-03-19-marathon_wuxi","date":"2017-03-19T07:52:37.000Z","updated":"2017-03-19T07:52:37.000Z","comments":true,"path":"2017/03/19/2017-03-19-marathon_wuxi/","link":"","permalink":"http://yoursite.com/2017/03/19/2017-03-19-marathon_wuxi/","excerpt":"算下来这是第4次参加马拉松了~都是半马。这次成绩02:19:41~【感觉成绩一直没有第一次跑好的也就只有我了吧。。。】","text":"算下来这是第4次参加马拉松了~都是半马。这次成绩02:19:41~【感觉成绩一直没有第一次跑好的也就只有我了吧。。。】这次是第一次参加无锡马拉松~昨天上午跟跑团的学长姐一起坐了一个多小时的绿皮火车来到无锡，先吃了顿大餐之后去领装备。讲道理我真的没见过这么多人领物的，听说这次马拉松外地报名的人有2万。而且还要刷身份证进去~还会识别人脸和身份证是不是一致的。。~超严格 参赛包里给了一个 我们叫丑娃娃的。。。小娃娃。。大概是考虑到会下雨吧~这次组委会搞了防水的参赛包，但是我就想问一下为啥！要做这么大。。。orz不过除了大以外都挺好的~因为要穿跑团的队服就没有穿官方给的小粉T恤啦~这种无袖的t恤我大概还要在瘦个两三圈才敢穿~。。。 今早5：30起的床【我们住的地方离起点超近的都要起这么早。。。真的不敢想象住得远的小伙伴们要几点起】好啦直接说重点今天一开始是多云嘛~还挺开心的~跑着也不热。然后我开始阶段配速一直控制在6分15左右~出乎意料的稳定哈哈哈这次跑的不累，在10km喝了第一次水~之后天就越来越阴。。。感觉大事不好。我跑到14km的位置时开始下雨，雨越来越大，后来把眼镜拿在了手上。其实雨大到是小事，主要是风也很大，于是就很冷orz。。。而且跑一跑雨和汗就混着要流进眼睛，还好戴了参赛包里给的手套~可以擦一擦~然后。。。大概15、16km左右我的蓝牙耳机没电了。。。除了不能听歌以外，更重要的是听不到自己的配速和跑了多少公里了，就没办法及时调整什么的了嘛。不过那一段好像1km就有一个牌子，后来19-21km一直没看到牌子。。。我还以为一直在跑19。。。然后最后200m的时候才知道要到终点了~讲道理我觉得自己的体力可以早一点冲刺的~哎还是怪自己没把耳机充好电，下次一定要长记性。话说最后100m是江南大学田径场上的100m也是很神奇哈哈哈按照学长姐的说法我跑了这么多次半马该跑全马了，但是这配速还是有点虚orz起码半马要进2小时10分吧！进了我就去报全马~！对了锡马完赛包里的吃的好评！菠萝包和黑米面包都好好吃~~~还有那个迷之造型的香蕉哈哈哈也是很厉害 对了~奖牌！","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"http://yoursite.com/tags/生活/"}]},{"title":"hibernate：Get vs Load -- 源码分析","slug":"2017-03-08-hibernate_get_load","date":"2017-03-07T15:35:37.000Z","updated":"2017-03-06T16:00:00.000Z","comments":true,"path":"2017/03/07/2017-03-08-hibernate_get_load/","link":"","permalink":"http://yoursite.com/2017/03/07/2017-03-08-hibernate_get_load/","excerpt":"前言 本文贴的源码都是删减版。。。~一些异常的判断、处理，都被省略掉了只贴了主要的部分~ Hibernate版本 5.1.0","text":"前言 本文贴的源码都是删减版。。。~一些异常的判断、处理，都被省略掉了只贴了主要的部分~ Hibernate版本 5.1.0 源码比较SessionImpl类123456789101112131415// 848。被dao直接调用的方法// ------load-------public &lt;T&gt; T load(Class&lt;T&gt; entityClass, Serializable id) throws HibernateException &#123; return this.byId(entityClass).getReference(id);&#125;public Object load(String entityName, Serializable id) throws HibernateException &#123; return this.byId(entityName).getReference(id);&#125;// ------get-------public &lt;T&gt; T get(Class&lt;T&gt; entityClass, Serializable id) throws HibernateException &#123; return this.byId(entityClass).load(id);&#125;public Object get(String entityName, Serializable id) throws HibernateException &#123; return this.byId(entityName).load(id);&#125; load调用了getReference；get调用了load【感觉这方法名有点迷。。。然后这两个方法做一些判断后，分别调用了doReference和doLoad1234567891011121314// 2398。load调用doGetReferenceprotected T doGetReference(Serializable id) &#123; //实体id,实体名,LockOptions,session LoadEvent event=new LoadEvent(id, this.entityPersister.getEntityName(), false, SessionImpl.this); SessionImpl.this.fireLoad(event, LoadEventListener.LOAD);//触发事件的方式 return event.getResult();&#125;------------// 2446。get调用doLoadprotected final T doLoad(Serializable id) &#123; LoadEvent event = new LoadEvent(id, this.entityPersister.getEntityName(), false, SessionImpl.this); SessionImpl.this.fireLoad(event, LoadEventListener.GET); return event.getResult();&#125; 调用同一个方法，只是LoadType不同。 先看这个相同的方法 12345678910// 986。private void fireLoad(LoadEvent event, LoadType loadType) &#123; // 注意这里是获得【事件】类型为LOAD的监听器。事件类型和加载类型是不一样的概念！ // 本文解析的get()方法和load()方法的事件类型都是LOAD，但加载类型不同 Iterator var3 = this.listeners(EventType.LOAD).iterator(); while(var3.hasNext()) &#123; LoadEventListener listener = (LoadEventListener)var3.next(); listener.onLoad(event, loadType); &#125;&#125; 比较LoadType的不同之处123456789101112// Get 允许为null,不允许创建代理。// LOAD 不允许为null,允许创建代理LoadEventListener.LoadType GET = (new LoadEventListener.LoadType(\"GET\")). setAllowNulls(true). setAllowProxyCreation(false). setCheckDeleted(true). setNakedEntityReturned(false);LoadEventListener.LoadType LOAD = (new LoadEventListener.LoadType(\"LOAD\")). setAllowNulls(false). setAllowProxyCreation(true). setCheckDeleted(true). setNakedEntityReturned(false); DefaultLoadEventListener类get和load都调用这个onLoad，并且二者的LoadEvent一模一样1234567891011121314151617// 63。public void onLoad(LoadEvent event, LoadType loadType) throws HibernateException &#123; EntityPersister persister = this.getPersister(event); this.doOnLoad(persister, event, loadType); &#125;// 86。两者的persister,event都相同。只有loadType不同private void doOnLoad(EntityPersister persister, LoadEvent event, LoadType loadType) &#123;// entityKey相同 EntityKey e = event.getSession().generateEntityKey(event.getEntityId(), persister); if(loadType.isNakedEntityReturned()) &#123;//-----情况1 两者都不是这种情况 event.setResult(this.load(event, persister, e, loadType)); &#125; else if(event.getLockMode() == LockMode.NONE) &#123;//-----情况2 event.setResult(this.proxyOrLoad(event, persister, e, loadType)); &#125; else &#123;//------情况3 event.setResult(this.lockAndLoad(event, persister, e, loadType, event.getSession())); &#125;&#125; 因为LoadEvent的构造函数把LockMode设置成了DEFAULT_LOCK_MODE, 而其类的内部又定义了 DEFAULT_LOCK_MODE = LockMode.NONE; 所以get和load都属于情况2 分流get和loadproxyOrLoad方法123456789101112131415161718192021222324252627282930313233343536// 152。private Object proxyOrLoad(LoadEvent event, EntityPersister persister, EntityKey keyToLoad, LoadType options) &#123; if(!persister.hasProxy()) &#123; // hasProxy() Determine whether this entity supports dynamic proxies. // 不支持代理的话，就老实的去调用load return this.load(event, persister, keyToLoad, options);//等下下面会提到这个方法 &#125; else &#123; // 支持代理 PersistenceContext persistenceContext = event.getSession().getPersistenceContext(); Object proxy = persistenceContext.getProxy(keyToLoad); // 这句代码有点长。 // 大概意思就是，通过上下文获得一个代理 // 这个代理非空的话，则返回一个NarrowProxy // 这个代理为空的话-----如果允许创建代理--LOAD---就调用创建代理方法 // ------------------不允许创建--GET---------再调用上面的load--&gt;doLoad return proxy != null? this.returnNarrowedProxy(event, persister, keyToLoad, options, persistenceContext, proxy) :( options.isAllowProxyCreation()? this.createProxyIfNecessary(event, persister, keyToLoad, options, persistenceContext) :this.load(event, persister, keyToLoad, options) ); &#125;&#125;// 187。private Object createProxyIfNecessary(LoadEvent event, EntityPersister persister, EntityKey keyToLoad, LoadType options, PersistenceContext persistenceContext) &#123; Object existing = persistenceContext.getEntity(keyToLoad); if(existing != null) &#123;//上下文中有这个实体，则返回 return existing; &#125; else &#123;//没有这个实体，则创建代理并返回。就是是假的实体！！！ Object proxy = persister.createProxy(event.getEntityId(), event.getSession()); persistenceContext.getBatchFetchQueue().addBatchLoadableEntityKey(keyToLoad); persistenceContext.addProxy(keyToLoad, proxy); return proxy; &#125;&#125; 实实在在的加载数据1234567891011121314151617181920212223242526// 132。private Object load(LoadEvent event, EntityPersister persister, EntityKey keyToLoad, LoadType options) &#123; Object entity = this.doLoad(event, persister, keyToLoad, options); return entity;&#125;// 239。session缓存--&gt;二级缓存--&gt;数据库private Object doLoad(LoadEvent event, EntityPersister persister, EntityKey keyToLoad, LoadType options) &#123; Object entity = this.loadFromSessionCache(event, keyToLoad, options); if(entity == REMOVED_ENTITY_MARKER) &#123; LOG.debug(\"Load request found matching entity in context, but it is scheduled for removal; returning null\"); return null; &#125; else if(entity == INCONSISTENT_RTN_CLASS_MARKER) &#123; LOG.debug(\"Load request found matching entity in context, but the matched entity was of an inconsistent return type; returning null\"); return null; &#125; else if(entity != null) &#123; return entity; &#125; else &#123; entity = this.loadFromSecondLevelCache(event, persister, keyToLoad); if(entity != null) &#123; // 省略。这里源代码在写日志~ &#125; else &#123; entity = this.loadFromDatasource(event, persister); &#125; return entity; &#125;&#125; 另外，当访问load得到的对象的属性时，会访问数据库。——–所谓的延迟加载 使用比较 load拿到的是假对象为什么还要用它？举个例子~就比如一个预订房间系统，用户每提交一个订单Order就应该包含一个房间Room如果每次都像下面这样的话 12Room room=session.get(Room.class,roomId);order.setRoom(room); 就每次都要访问数据库，开销太大。因为这里拿到room之后我们也不需要得到它的属性值，只是set给order，其实只需要一个id就够了所以可以用load来加载实体~如果订单数量大的话差距会很明显的！~ 听起来好像不错那我们为什么还要用get？(下面假设实体支持代理)因为load不管三七二十一都会返回一个对象。由于返回对象的时候不访问数据库，所以load返回的对象不能保证真的在数据库里。一旦我们访问对象的属性—访问数据库的时候，发现这个对象并不存在，就会抛异常，后知后觉。。。而get，当需要加载的对象不存在时，会返回null，我们可以立即知道这个对象是否真的存在 所以 当确定对象存在的时候再用load要点总结 绝大部分情况，get返回实体，load返回代理 当session缓存中有代理时，get会返回代理 当session缓存中没有代理、但有实体时，load返回实体 实体不支持代理时，get和load相当于是一样的 参考资料 hibernate的get和loadHibernate Session get() vs load() difference with examplesHibernate深入浅出（八）持久层操作——延迟加载（Lazy Loading）从源码上分析hibernate的load和get之间的区别Understanding Caching in Hibernate Hibernate - Difference between session’s get() and load()hibernate的get和load区别","categories":[],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"},{"name":"j2ee","slug":"j2ee","permalink":"http://yoursite.com/tags/j2ee/"},{"name":"hibernate","slug":"hibernate","permalink":"http://yoursite.com/tags/hibernate/"}]},{"title":"javascript之继承","slug":"2017-01-28-javascript_extend","date":"2017-01-27T23:57:03.000Z","updated":"2017-01-27T16:00:00.000Z","comments":true,"path":"2017/01/28/2017-01-28-javascript_extend/","link":"","permalink":"http://yoursite.com/2017/01/28/2017-01-28-javascript_extend/","excerpt":"前言说明一下，本文提到的‘类’，不是java、C里那种‘类’~javascript里是没有类的概念的，只是为了方便表达~将一个包含构造器、原型的变量叫做‘类’。javascript里的继承，跟java、C等比起来，看起来好像很随意。。。因为javascript里的‘类’的构成，包含两部分嘛——–构造器和原型，所以继承也包括两部分~原型继承和构造器继承，都得手动自己来~所以其实也可以单独继承构造器或者原型。","text":"前言说明一下，本文提到的‘类’，不是java、C里那种‘类’~javascript里是没有类的概念的，只是为了方便表达~将一个包含构造器、原型的变量叫做‘类’。javascript里的继承，跟java、C等比起来，看起来好像很随意。。。因为javascript里的‘类’的构成，包含两部分嘛——–构造器和原型，所以继承也包括两部分~原型继承和构造器继承，都得手动自己来~所以其实也可以单独继承构造器或者原型。 继承原理javascript的继承是基于原型链哒~原型链两个相邻的原型，靠近顶端的是另一个的‘父类’或‘超类’。比如有原型链如下 A -&gt; B.prototype -&gt; Object.prototype -&gt;null B是A的父类~ 举例假设有一个书的‘类’，下面是它的构造器和原型（构造器和原型不知道是啥的话可以看这里javascript 原型与构造器之‘原型’，javascript 原型与构造器之构造器）123456789var Book=function (name) &#123; this.name=name;&#125;;Book.prototype=&#123; constructor:Book, getName:function () &#123; return this.name; &#125;&#125;; 然后呢~有一个小说的’类’要继承书。然后看下面继承的两个步骤~ 继承Part1–构造器继承1234var Fiction = function (name,author) &#123; Book.call(this,name); //调用Book的构造器 this.author=author; //在构造器里给Fiction添加了一个“作者”属性&#125;; 先解释一下call函数。call是javascript里Function类型变量自带的函数，参数个数不定。第一个参数是会作为该函数执行时的this。关于this可参考(javascript之this的绑定)[https://disinuo.me/2016/12/24/2016-12-24-javascript_this]接下来的参数就都是调用call的函数本身的参数啦~所以这里Book.call(this,name)是把Fiction的this传给Book，把name传给Book的构造器。 为什么要这么费劲的把Fiction的this传给Book呢？直接Book(name);不行吗？ 不行哒~因为Book的构造器里是this.name=name，如果不传入Fiction的this，这句代码的this就是Book的this，就不会按照我们预想的给Fiction类创建name属性。所以要用call函数或者apply函数调用父类构造器~ 所以可以看到~只要在构造器里调用另一个’类’的构造器，就算是在构造器上继承了~这个子类也就拥有了父类在构造器上创建的方法、属性。比如接下来我们创建一个实例~1234var blind_fiction=new Fiction('Harry Porter','J.K.');console.log(blind_fiction.name); //Harry Porterconsole.log(blind_fiction.author); //J.K.console.log(blind_fiction instanceof Book); //true instanceof是用来判断一个变量是否是一个“类”的实例哒~判断的原理是查找这个变量的原型链，只要在原型链里找到了这个“类”，就会返回true。所以可见，虽然我们只是手动的进行了构造器继承，但js解释器会在子类的原型链里添加父类的原型~原型链就这么串起来啦~但这样还没有完全继承，这时候还不能通过子类的实例访问父类原型里的属性、方法，所以我们来看下一个part~ 继承Part2–原型继承继续上面的例子~12345Fiction.prototype=Object.create(Book.prototype);//继承Book原型Fiction.prototype.constructor=Fiction;//显示定义Fiction的构造器Fiction.prototype.getAuthor=function () &#123;//给Fiction原型添加getAuthor方法 return this.author;&#125; Object.create方法的参数是一个原型~明明一个类创建完，它的原型里会自动包含一个constructor属性，指向自己的构造器，那第二行为什么还要显示定义一下构造器呢？因为第一行重新给Fiction的原型赋值了嘛~原来的原型就被覆盖了，这个新的原型就不包含constructor属性了，所以这里如果输出Fiction的构造器会输出Book的构造器（console.log(Book.prototype.constructor);）。因为访问Fiction没有的属性，会继续沿着原型链向上找~于是就找到了Book的构造器~那现在验证一下原型链的继承吧~12console.log(blind_fiction.getName()); //Harry Porterconsole.log(blind_fiction.getAuthor()); //J.K. class,extends语法糖示例ECMAScript6 为了让熟悉java、C的开发人员用js用的更顺手，引入了一套新的关键字~class,extends,constructor,super。下面举个例子~12345678910111213141516171819202122232425class Animal&#123; constructor(name)&#123; this.name=name; &#125; getName()&#123; return this.name; &#125;&#125;class Dog extends Animal&#123; constructor(name,age) &#123; super(name); this.age=age; &#125; getAge()&#123; return this.age; &#125;&#125;var animal=new Animal('Baby');console.log(animal.getName()); //Babyconsole.log(animal.name); //Babyvar dog=new Dog('dogge',8);console.log(dog.name); //doggeconsole.log(dog.getAge()); //8console.log(dog instanceof Animal); //true 解释 class里面，constructor就是对应的构造器啦~ class里除constructor外的所有方法都是创建在原型里的。 关于class关键字的使用：声明和赋值。上面例子里形如class XXX{}的就是声明。下面这种形如var XXX=class{}的是赋值。 1234567891011121314151617var Animal =class &#123; constructor(name)&#123; this.name=name; &#125; getName()&#123; return this.name; &#125;&#125;var Dog =class extends Animal&#123; constructor(name,age) &#123; super(name); this.age=age; &#125; getAge()&#123; return this.age; &#125;&#125; 这里的声明，跟js普通的变量声明有一点不同，变量声明有变量提升现象~(参考 ben cherry的JavaScript Scoping and Hoisting)而class是没有的，所以如果父类的声明在子类之后是会报错的！~~ 本文涉及的源码可以戳这里^ ^（还包含javascript系列的其他部分的源码哦）大年初一写博客的我绝对是真爱~哈哈哈 参考：MDN 继承与原型链文档MDN instanceof文档","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"javascript 原型与构造器之‘构造器’","slug":"2017-01-26-javascript_constructor","date":"2017-01-26T15:18:03.000Z","updated":"2017-01-26T15:18:03.000Z","comments":true,"path":"2017/01/26/2017-01-26-javascript_constructor/","link":"","permalink":"http://yoursite.com/2017/01/26/2017-01-26-javascript_constructor/","excerpt":"构造器其实构造器就是方法，只是当你用new调用它的时候它就是构造器了（new的作用参见javascript关键字new）。12345678910111213var Person=function (name,age)&#123;//这就是个Person的构造器 this.name=name; this.age=age; this.hobbies=['Drawing','Music'];&#125;;Person.prototype=&#123;//这是Person的原型 constructor:Person, sex:'Male', friends:['Lihua','Oliver'], getName:function () &#123; return this.name; &#125;&#125;; 原型不大清楚的可以参考这篇 javascript 原型与构造器之‘原型’ ^ ^~","text":"构造器其实构造器就是方法，只是当你用new调用它的时候它就是构造器了（new的作用参见javascript关键字new）。12345678910111213var Person=function (name,age)&#123;//这就是个Person的构造器 this.name=name; this.age=age; this.hobbies=['Drawing','Music'];&#125;;Person.prototype=&#123;//这是Person的原型 constructor:Person, sex:'Male', friends:['Lihua','Oliver'], getName:function () &#123; return this.name; &#125;&#125;; 原型不大清楚的可以参考这篇 javascript 原型与构造器之‘原型’ ^ ^~ 创建对象本身的属性上面的构造器里形如this.name=name的代码，都是在给 对象自身 添加属性，于是通过该构造器创建的 实例本身 也就拥有了相应的属性。与原型的属性不同，原型的属性是实例共享的，而构造器创建的属性，是每个实例独自拥有的。 代码示例下面的代码基于上面Person的构造器和原型1234567891011121314151617var person1=new Person('Lily',18);var person2=new Person('Amy',24);person1.sex='Female';console.log(person1.sex);//Femaleconsole.log(person2.sex);//Maleperson1.friends.push('Selena');console.log(person1.friends);//Lihua,Oliver,Selenaconsole.log(person2.friends);//Lihua,Oliver,Selenaperson1.friends=['Lihua'];console.log(person1.friends);//Lihuaconsole.log(person2.friends);//Lihua,Oliver,Selenaperson1.hobbies.push('Movie');console.log(person1.hobbies);//Drawing,Music,Movieconsole.log(person2.hobbies);//Drawing,Music 比较两个push的不同~(除这4行输出外不理解的话可以看下我的上一篇博客~)javascript 原型与构造器之‘原型’person1.friends的push，对两个实例都产生了影响；person1.hobbies的push仅对person1产生了影响。因为friends是原型的属性，实例共享；而hobbies是实例的属性，每个实例都有自己独立的。 避免实例间属性干扰所以~要解决，像代码中‘改变person1的friends时，无意中也把person2的friends改了’这种情况，可以把该属性从原型中转移到构造器里~就好啦~ 原型 vs 构造器下面这些结论都是我看书啊听课啊学到的+自己总结的~不是那么绝对~欢迎讨论~~ 实例独立的属性都放在构造器里：相当于java里面类的成员变量。为了避免上述‘friends’的类似情况。但是又会有疑问，如果不是数组类型呢，比如String类型的name，上一篇不是说赋值的时候解释器会自动在实例上创建属性吗。确实，从实现的角度看确实不会产生实例间的干扰了。但是自动创建属性的话，实例和原型就都拥有了该属性，而原型的该属性就会永远被屏蔽，占着空间却没卵用的数据，会对性能造成影响的。 ‘静态属性’放在原型里：‘静态属性’是指基于同一个原型的实例们都一样的属性。这种属性如果在构造器里，每个实例各自有一个，反而白占了很多空间 方法放在原型里：这个跟上一条是一样的道理，就像java里面，类的方法一样，每个对象都是一样的呀~也就没有每个实例都独自持有一份的必要啦。 本文涉及的源码可以戳这里^ ^（还包含javascript系列的其他部分的源码哦） 参考MDN文档","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"javascript 原型与构造器之‘原型’","slug":"2017-01-26-javascript_prototype","date":"2017-01-26T12:18:03.000Z","updated":"2017-01-26T12:18:03.000Z","comments":true,"path":"2017/01/26/2017-01-26-javascript_prototype/","link":"","permalink":"http://yoursite.com/2017/01/26/2017-01-26-javascript_prototype/","excerpt":"js独特的原型不同于C、Java等语言基于类，javascript是基于原型的。原型本质也是对象。每个对象都有原型（javascript中最基本的原型是Object.prototype）。每个实例（当然，一定是个对象）都有一个原型，而这个原型作为一个对象，也有原型，从而形成了原型链。原型链的顶端是null（Object.prototype的原型是null）。","text":"js独特的原型不同于C、Java等语言基于类，javascript是基于原型的。原型本质也是对象。每个对象都有原型（javascript中最基本的原型是Object.prototype）。每个实例（当然，一定是个对象）都有一个原型，而这个原型作为一个对象，也有原型，从而形成了原型链。原型链的顶端是null（Object.prototype的原型是null）。 原型示例下面创建一个“类”Animal，以及Animal的原型。（这里“类”打了引号，因为它不是类，但又不知道怎么叫它了。。。）12345678var Animal=function()&#123;&#125;Animal.prototype=&#123; name:'Dogge', sleep:function()&#123; return \"sleeping~\"; &#125;&#125; 可见我们在Animal的原型上创建了一个属性name，一个方法sleep。 原型链的形成接下来创建一个基于上面这个原型的实例12var dog=new Animal();console.log(dog.name);//Dogge 此时对象dog的原型链是 dog -&gt; Animal.prototype -&gt; Object.prototype -&gt; null。这里说明一下，通常情况下原型链的顶端两个都是 Object.prototype -&gt; null，除非像下面这样这样创建1var a=Object.create(null); //此时原型链是 a -&gt; null Object.create方法是用来创建对象的，参数是该对象基于的原型。比如可以这样12345var a = &#123;count: 1&#125;;// a ---&gt; Object.prototype ---&gt; nullvar b = Object.create(a);// b ---&gt; a ---&gt; Object.prototype ---&gt; null 实例与原型的关系原型是唯一，并且实例间共享的。可以理解为，通过实例可以访问到原型的属性（这里的属性包含方法，下同），是因为实例持有原型的属性的引用。所以如果一个实例修改了原型的属性，基于该原型的其它实例的该属性也会被修改。1234567891011var Person=function () &#123;&#125;;Person.prototype=&#123; sex:'Male', friends:['Lihua','Oliver'],&#125;;var person1=new Person();var person2=new Person();person1.friends.push('Selena');console.log(person1.friends);//Lihua,Oliver,Selenaconsole.log(person2.friends);//Lihua,Oliver,Selena 这里，本来是想给person1增加朋友Selena，结果person2的朋友也变了。这就很尴尬了。将在下一篇javascript 原型与构造器之构造器的部分说怎么办~在此之前，你可能也发现了123person1.sex=&apos;Female&apos;;console.log(person1.sex);//Femaleconsole.log(person2.sex);//Male 改person1的性别，person2的没有变啊，这是怎么回事。这就涉及到了javascript神奇的属性访问与创建的原则。 属性的访问与创建机制 创建跟java不一样，在java里，如果给对象一个不存在的属性赋值（注意！是 赋值），是会报错的。而在javascript里这一点就显得很智能。。。解释器会帮你自动创建一个属性并赋值~ 访问那访问属性的时候呢，是先在对象本身上找，找不到就再到它的原型上去找，找不到再到原型的原型上去找，以此类推，直到找到该属性或到达原型链顶端为止（到顶端也没找到就返回undefined）。 所以上面的代码person1.sex=&#39;Female&#39;;，由于person1对象本身没有属性sex，sex属性是它的原型的，所以解释器就自动帮person1创建了sex属性，并赋值为Female。所以可以看到，这句代码并没有修改原型的sex属性，因而访问person2.sex就自然还是Male啦~感兴趣的话可以加一句console.log(person1);，在浏览器控制台将对象展开，可以看到这样的结构1234Person---sex: 'Female'---__proto__: #这个就是原型属性------sex: 'Male' 所以当打印person1.sex的时候打印的是Female，是因为上面提到的访问机制，先找person1本身，找到了sex属性，于是就返回结果停止查找了（这个现象叫属性屏蔽）。那现在再回头想一下，为什么person1.friends.push(&#39;Selena&#39;)的时候操作的就是原型的属性了呢，为什么解释器没有自动给person1创建一个friends属性呢。因为，前面我强调了是赋值。push不叫赋值。这里我是这样理解的（有不同见解欢迎提出~）：对Array才能push，所以解释器一定要认得friends属性是一个Array。而javascript自动创建属性需要你的初始化赋值，否则它创建的属性就是undefined。所以person1.friends.push(&#39;Selena&#39;)时，是先在对象本身上找friends了的，发现是undefined，这就跟没有是一样的，于是才继续找原型的。而且我还试了一下，把原型的friends属性删掉，重新执行person1.friends.push(&#39;Selena&#39;)，会报错1Cannot read property 'push' of undefined 就是因为friends是undefined所以报错了嘛~而如果接着上面的代码再加几行123person1.friends=['Lihua'];console.log(person1.friends);//Lihuaconsole.log(person2.friends);//Lihua,Oliver,Selena 看~果然 赋值就会自动创建属性啦~ 有点长了，构造器以及原型和构造器比较的部分放在下一篇吧 ^ ^~本文涉及的源码可以戳这里^ ^（还包含javascript系列的其他部分的源码哦） 参考MDN文档","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"javascript迷之闭包","slug":"2017-01-23-javascript_closure","date":"2017-01-23T12:42:03.000Z","updated":"2017-01-23T12:42:03.000Z","comments":true,"path":"2017/01/23/2017-01-23-javascript_closure/","link":"","permalink":"http://yoursite.com/2017/01/23/2017-01-23-javascript_closure/","excerpt":"更新日志2017-01-24 改了下‘封装私有变量’的代码；’闭包的概念’部分的文字表述；添加常见应用–‘模仿块级作用域’ 闭包的概念闭包，简单来说就是指那些能够访问另一函数作用域内变量的函数。比如最基础的12345678var person=function()&#123; var name='Shelly'; return function()&#123; console.log(name); &#125;&#125;var func=person();func(); //Shelly","text":"更新日志2017-01-24 改了下‘封装私有变量’的代码；’闭包的概念’部分的文字表述；添加常见应用–‘模仿块级作用域’ 闭包的概念闭包，简单来说就是指那些能够访问另一函数作用域内变量的函数。比如最基础的12345678var person=function()&#123; var name='Shelly'; return function()&#123; console.log(name); &#125;&#125;var func=person();func(); //Shelly 作为一个码惯了java的人，是不大能理解这里为什么函数person都执行完了，还能成功打印出’Shelly’的。事实上，函数person返回的匿名函数，在这里就形成了一个闭包。可以理解为，这个闭包的作用域链含有 包含这个闭包的函数的作用域，于是这个闭包就拥有包含它的函数的局部变量的引用。比如这个例子里就是person的name的备份。就是说，在函数执行结束后，若返回的是一个闭包，此函数的作用域和变量就不会销毁，依旧可以通过它返回的闭包，来访问此函数的局部变量。 常见应用 For循环123456789101112131415161718192021222324252627282930313233343536function createFunction() &#123; var result=[]; for(var i=0;i&lt;10;i++)&#123; result[i]=function () &#123; return i; &#125; &#125; return result;&#125;var funcs=createFunction();for(var i=0;i&lt;funcs.length;i++)&#123; console.log(funcs[i]());&#125;// 预想是输出0到9，结果却输出了10个10。。。// 这是为什么呢。。。// 可以这样理解// 注意上述代码的4至6行的匿名函数 function () &#123;return i;&#125;// 虽然循环了10次产生了10个这样的匿名函数，但是它们形成的是1个闭包// 这1个闭包里只有1个i，所以result的每一项的函数返回的都是同一个东西~// 这也就解释了为什么是10个相同的数字// 那为什么这个数字是10呢// 因为在for循环了10次之后，i最终被赋值成10而结束循环// 所以当上述代码12行处调用函数输出i的时候，输出的就是最终的i的值啦~// 我也是花了好长时间才明白的。。。不理解的话多找找资料~本文结尾的参考链接都是不错的资料~说不定哪句话就点醒你了呢^ ^//// 另外，可以将上述代码4至6行改成下面的样子以达到预想目标result[i]=function (x) &#123; return function()&#123; return x; &#125;&#125;(i);// 这样改可以实现，是因为，// 把原来的function()&#123;return i;&#125;外面// 包了一个`立即执行`函数（就是在函数体后直接追加小括号，里面放要传的参数，该函数就会被立即执行）// 由于函数传参是值拷贝传递的，而且是立即执行，所以i的每个值都复制传给了x// 所以当后面分别调用func[i]输出的就是0到9啦~ 工厂来看一个例子~一个生产检查变量类型函数的工厂 1234567891011function isType(type)&#123; //这个就是工厂啦~ return function(obj)&#123; return Object.prototype.toString.call(obj)==='[object '+type+']'; &#125;&#125;var isString=isType('String');//检查是否是字符串的函数var isNumber=isType('Number');//检查是否是Number的函数console.log(isNumber(233)); //trueconsole.log(isNumber('hhh')); //falseconsole.log(isString('hhh')); //true// 上述代码中，工厂的返回值就形成了一个闭包，所以isString、isNumber可以访问isType的局部变量type 封装私有变量可以用闭包来弥补一下javascript里没有private的遗憾~~ 123456789101112131415161718var Person=function()&#123; var name='Lily'; var age=20; this.getName=function()&#123; return name; &#125;; this.addAge=function () &#123; age++; &#125;; this.getAge=function () &#123; return age; &#125;&#125;var func=new Person();console.log(func.name); //undefinedconsole.log(func.getName());//Lilyfunc.addAge();console.log(func.getAge()); //21 模仿块级作用域因为javascript没有块级作用域，就是像for循环啊、if else语句等这种，代码块里用到的变量在外面也可以使用。这会带来一定程度的变量名污染，和一些奇怪的bug不过好在可以使用闭包模仿出块级作用域~看下面的代码 12345678for(var p=0;p&lt;5;p++)&#123;&#125;// 循环体外也可以读写变量p(function()&#123; for(var m=0;m&lt;5;m++)&#123; &#125;&#125;)();//将变量m封印在for里~console.log(p);//5console.log(m);//Error! m is not defined 总结闭包是一个神奇又强大的东西~现在理解的还是不够深刻继续学习~~~欢迎指出错误~欢迎讨论~想看源码可以戳这里^ ^（还包含javascript系列的其他部分的源码哦） 参考： stackoverflow的大大~ MDN文档《Javascript高级程序设计》第2版–Nicholas C. Zakas 第7章《Javascript设计模式与开发实践》–曾探 第3章","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"javascript厉害的Array","slug":"2017-01-19-javascript_array","date":"2017-01-19T03:14:03.000Z","updated":"2017-01-19T03:14:03.000Z","comments":true,"path":"2017/01/19/2017-01-19-javascript_array/","link":"","permalink":"http://yoursite.com/2017/01/19/2017-01-19-javascript_array/","excerpt":"摘要虽然javascript数据类型少，但是功能还是挺多的~比如Array类型！又可以当栈又可以当队列^o^而且Array还有一个特点是：一个Array里面的每一项都可以是不同的类型~也算是一个有利有弊的特性吧~ 能当栈又能当队列为了实现这一点，javascript的Array有4个方法分别是pop,push,shift,unshift。","text":"摘要虽然javascript数据类型少，但是功能还是挺多的~比如Array类型！又可以当栈又可以当队列^o^而且Array还有一个特点是：一个Array里面的每一项都可以是不同的类型~也算是一个有利有弊的特性吧~ 能当栈又能当队列为了实现这一点，javascript的Array有4个方法分别是pop,push,shift,unshift。作用分别是对Array尾部弹出一项、尾部添加N项、头部弹出一项、头部添加N项。（N&gt;=1）返回值分别是弹出项、Array的最新长度、弹出项、Array的最新长度。于是！基于这4个操作~pop和push组合，或shift和unshift，就可以模拟出 栈 的操作pop和unshift组合，或shift和push, 就可以模拟出 队列 的操作下面看看例子吧~12345678910111213141516171819202122232425262728var array=['aaa','bbb','ccc','ddd'];console.log('original array: '+array);var x=array.push('ccc');console.log(x); //5console.log(array); //aaa,bbb,ccc,ddd,cccvar y=array.push('eee','fff');console.log(y); //7console.log(array); //aaa,bbb,ccc,ddd,ccc,eee,fffvar z=array.pop();console.log(z); //fffconsole.log(array); //aaa,bbb,ccc,ddd,ccc,eeevar m=array.shift();console.log(m); //aaaconsole.log(array); //bbb,ccc,ddd,ccc,eeevar n=array.unshift('ggg');console.log(n); //6console.log(array); //ggg,bbb,ccc,ddd,ccc,eeevar p=array.unshift('hhh','iii');console.log(p); //8console.log(array); //hhh,iii,ggg,bbb,ccc,ddd,ccc,eee// 这最后一种情况要注意一下~// 我原本以为会是 iii,hhh,...的，// 因为想的是按照插入的顺序，先在头部插入hhh，再在头部插入iii嘛// 结果hhh在iii的前面了。// 再经思考，// 觉得这大概跟'javascript的函数所有参数其实是一个数组'有关，//（就是在实现上，函数的参数会合并起来成为一个数组，就是`arguments`,在函数内部可以通过arguments[i]依次访问传入的参数~~ 虽然严格来讲它不是数组，是类数组，但这里就不多说啦）// 于是这里hhh,iii被看成一个数组，直接插入到原数组头部 想看源码可以戳这里^ ^（还包含javascript系列的其他部分的源码哦~~）~ 参考：《Javascript高级程序设计》第2版–Nicholas C. Zakas 第5章","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"警惕javascript的内存泄漏","slug":"2017-01-18-javascript_memory_rename","date":"2017-01-18T13:38:03.000Z","updated":"2017-01-18T13:38:03.000Z","comments":true,"path":"2017/01/18/2017-01-18-javascript_memory_rename/","link":"","permalink":"http://yoursite.com/2017/01/18/2017-01-18-javascript_memory_rename/","excerpt":"javascript的BOM和DOM对象是基于C++的COM的，它的垃圾收集机制是引用计数策略，循环引用会造成内存泄漏。 引用计数策略思想跟踪变量被引用的次数，次数为0的会被回收 举例","text":"javascript的BOM和DOM对象是基于C++的COM的，它的垃圾收集机制是引用计数策略，循环引用会造成内存泄漏。 引用计数策略思想跟踪变量被引用的次数，次数为0的会被回收 举例 123456function func()&#123; var ele=document.getElementById('id'); var obj=new Object(); ele.obj=obj; obj.ele=ele;&#125; DOM元素与一个javascript原生对象建立了循环引用。即使func执行完，两个对象都被两一个对象引用着，被引用数永远不会为0，于是两个对象也永远不会被自动回收。就出现了内存泄漏 应对策略暂时知道的办法就是。。。在结束使用对象的时候，手动断开两对象的连接：12345ele.obj=null;obj.ele=null;// 是的这样就可以了！// 这样基于引用计数策略的垃圾回收器在下次检查的时候// 就会发现他们的引用数变成了0，就把它们回收了~~ 不过现在javascript的主流垃圾回收算法是“标记清除”啦，大概思想是给当前不使用的值加上标记，然后再回收。所以除了在IE中访问非原生的javascript对象（比如DOM、BOM）这种情况，其他的都不必担心循环引用造成内存泄漏。 参考：《Javascript高级程序设计》第2版–Nicholas C. Zakas 第4章","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"},{"name":"内存泄漏","slug":"内存泄漏","permalink":"http://yoursite.com/tags/内存泄漏/"}]},{"title":"javascript关键字new","slug":"2017-01-10-javascript_new","date":"2017-01-10T07:38:03.000Z","updated":"2017-01-10T07:38:03.000Z","comments":true,"path":"2017/01/10/2017-01-10-javascript_new/","link":"","permalink":"http://yoursite.com/2017/01/10/2017-01-10-javascript_new/","excerpt":"关键字new,相当于让解释器帮你加入两行代码12this=Object.create(ClassName.prototype);return this; 举个例子","text":"关键字new,相当于让解释器帮你加入两行代码12this=Object.create(ClassName.prototype);return this; 举个例子123456789101112131415161718192021var Animal=function(name)&#123; this.name=name;&#125;Animal.prototype=&#123; sleep:function()&#123; console.log(\"sleeping~\"); &#125;&#125;var dog=new Animal('dogge');console.log(dog.name); //doggeconsole.log(dog.sleep()); //sleeping// 用关键字new，解释器会将Animal自动添加上述的两行代码// 变成下面的样子var Animal=function (name) &#123; this=Object.create(Animal.prototype); this.name=name; return this;&#125;// 如果不用`new`呢var cat=Animal('Kitty');console.log(cat); //undefined。因为Animal方法没有返回值","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"或许我们都是盲人---读《失明症漫记》的感想","slug":"2016-12-25-blind_disease","date":"2016-12-25T05:38:03.000Z","updated":"2016-12-25T05:38:03.000Z","comments":true,"path":"2016/12/25/2016-12-25-blind_disease/","link":"","permalink":"http://yoursite.com/2016/12/25/2016-12-25-blind_disease/","excerpt":"我们都是盲人，看得见的盲人，能看却又看不见的盲人。","text":"我们都是盲人，看得见的盲人，能看却又看不见的盲人。 这是一本，每个角色都没有名字的书，一本脑洞很大、细节却又很真实让人很信服的书，一本讽刺现实的书。 而且不得不说，这是一本压抑的书。 看的过程中真的有过窒息的感觉，不能再继续看下去了要干点别的事调剂一下，但等缓过来点的时候又迫不及待的拿起来继续看。 书一上来就详细描写了一个男子开着车突然失明的过程。接着，一个送他回家，随后动了歹念偷他车的‘好心人’也失明了，接下来可想而知——越来越多的人失明。不过作者萨拉马戈着力塑造了本书的几个主要人物：眼科医生，戴眼罩的老人、戴墨镜的姑娘、斜眼的小男孩，这三个人都去这位医生那里看过眼疾，另外还有一个酒店女服务员，还有前面提到的第一个失明者和偷车的人。然而还有一个特别的人—–医生的妻子，她没有失明，也是‘失明症’席卷全球的时候唯一一个没有失明的人。 当我内心正吐槽着这情节的荒谬—-失明可以传染—-的时候，接着，政府为了不让民众恐慌，也似乎是当时情况下他们能想到的唯一办法–把患了‘白色眼疾’的人关到一起，隔离起来。【对，白色眼疾，这些失明的人眼前不是通常盲人的一片漆黑，而是‘仿佛涌进牛奶的白’，明亮而刺眼的白。】然后我就知道，恩，要发生点什么了。对了，医生的妻子会出现在盲人群体里是因为来抓医生的时候她谎称自己也失明了，我当时还被这坚贞的爱情感动了一会~ 他们被安排到了一个闲置的精神病院里，由士兵在大门处看管。 起初人比较少，气氛还相对和谐。但抱怨是少不了的，一是好好的生活突然被‘失明’打断，丧失了大半的生活能力，还不管三七二十一就被抓来在这区区十几平米的宿舍里跟陌生人一起生活；二来是士兵根本不把他们当人看，自然这是政府授意的—‘虫子死了，毒汁就没了’。。。每天广播都会播报“每天3次送饭，所有盘子盒子餐具一类的剩余物品应焚烧；焚烧产生的一切不良后果由住宿者承担；如果发生火灾，不管是意外还是人为，消防人员皆不来救；内部出现任何疾病、殴斗，外界均不介入；若有人死亡，不管什么死因，均由住宿者在围栏旁掩埋尸体，不举行任何仪式。”最后还加上一句“政府和全民族都希望你们履行自己的义务”。 第一次看到这段广播的时候我毛骨悚然，多么冷酷无情，我以为当真的有人受伤需要诸如止血药物的时候，他们会心软下来派人送药。 事实证明我的想法是多么的天真可笑。 一个腿部受伤，已经严重感染的盲人，同伴去要过药品无果决心自己去试一试。本来当萨拉马戈写到他趁别人都在睡觉的时候，终于不能忍受疼痛爬起来，爬出去，我以为他是要去自我了断的。但接下来萨拉马戈用了很长的文字描写了盲人的内心，想象着自己被送到医院，肯定会有收留瞎子的医院，被医治后即使再把他送回来也无所谓。这样的乐观心态势必预示着悲伤的结局。我做好了士兵态度恶劣的拒绝他的心理准备。 他历经了常人难以想象的艰辛如何背朝前用双手支撑身体下了那么多级台阶，如何趴在地上匍匐着朝门爬去。 然而。 枪响了。一连几发。 盲人到了门口站起身—-突然的出现吓了站岗的士兵一跳。 刚还梦想着自己痊愈的人，倒在了血泊中，或许他永远也不知道自己是怎么死的。。。 随后有越来越多的人住进来，原本就狭小的空间变得拥挤不堪。 其实每个人刚进来的时候都幻想着自己有一天会好，可是时间逐渐耗尽了他们的耐心。。。 因为看不见，有的人仿佛享受着这种‘做事不用负责任’的快感。起初大家都是摸索着找到厕所解决生理问题的，但因为日积月累厕所已然不堪重负，加上有人或是忍不住或是懒，就在走廊里甚至是宿舍里解决了。 一个坏的开始往往会紧接着人们的争相效仿。 很快走廊里遍地都是。。。不可描述的排泄物。。。臭气熏天，甚至可以说是毒气。 在这样的环境下更不用说洗澡了。于是每个人都达到了自己有生以来的邋遢巅峰。 每个人都活得不像人了。 医生的妻子只能尽自己所能的帮助大家—–只有丈夫知道她看得见。想想也知道她告诉大家自己看得见的后果—-变成奴隶。 但这一切跟接下来要发生的事比起来，简直算是幸福的日常生活。 一个仗着有一把枪的宿舍要当老大。他们抄起家伙围住所有食物声称给钱才能吃东西。 我当时也是不懂在那样的情况下要钱还有什么用，或许只是想宣示自己的权威吧。 虽然很不情愿，但也别无他法。 本来就如此悲催了竟然还要被抢劫。 强盗们显然没有满足于此，接着要求每个宿舍轮流派来所有女人‘服淫役’。 我当时心中一万个草泥马呼啸而过，然而可怕的是，几乎紧接着，我竟觉得‘这好像很正常’。 在这里这么久了难免会有生理需求，如果换做我是那强盗中的一员，手握如此至高无上的权威，我可能也会动这个心思吧。 所以令人毛骨悚然的不是卑鄙的人如何卑鄙，而是想到如果是我，我也会这么做。 强盗们的饥渴转化成了如禽兽般的粗鲁。甚至有一个女人回到宿舍没多久就死了。 终于有一天，所有人，所有人都失明了（除了医生的妻子，具体为什么就不要深究啦~） 他们于是逃离了精神病院。 小说的几个主要人物结伴而行，医生的妻子随后告诉了他们自己看得见的事实。 大家出乎意料的平静。 或许经历了这一切已经对一切事情麻木；或许早已发现只是不敢确定；或许觉得’那又怎样的，我可能永远也不会康复’。 但妻子无疑担起了照顾大家的重任。首要任务就是寻找食物。好不容易找到了一个大超市，摸索到了食物。而返回同伴居住地的过程亦是艰辛而漫长。 当食物吃完，妻子再次找到那个超市，虽已做好食物被人发现而抢空的心理准备，见到的场景却还是令她狂呕不止。 一个半掩着门的小房间里，全是死尸。 看样子是有人绊倒了，一个接一个的绊倒，外面求食心切的人于是把他们从外面锁起来。 人心可怕。 最终所有人，所有还活着的人，一个接一个的复明了。 而萨拉马戈借医生妻子之口说出了这样意味深远的话 “我想我们现在是盲人；能看得见的盲人；能看但又看不见的盲人” 写到这里突然发现好像是在概述小说了，可是真的是太过震撼，特别想把印象深刻的情节描述一遍。 小说里几处设定我觉得也颇具深意。 ‘白色’眼疾在人们的既定思维里，白色，代表着白天，代表着光明。而萨拉马戈却反其道而行之，盲人眼前是无尽的白色，“从此盲人的世界里再无黑暗”。而事实上他们所处的这个世界，或者说他们所创造的这个世界，充斥着自私、凌辱等无尽的黑暗力量。真是莫大的讽刺。而相对应的，最后盲人们在复明之前，却是先经历了黑暗，第一个复明的盲人经历黑暗的时候还以为自己‘转化成了另一种失明’，但随后到来的，是重见光明。 妓女也有感情小说中‘戴墨镜的姑娘’其实是一个妓女。人们都对妓女有偏见。固然这是一个不光彩的职业，没错，但人们往往觉得‘妓女没有情感’，‘妓女都是不孝的’。可从他们逃离了精神病院的那一刻起，戴墨镜的女人就惦记着找自己的父母，即便理智的思考一下都知道找到的可能微乎其微，但她不想放弃哪怕一丝希望。后来在医生妻子的带领下回到家里，剪下了一头长发留给父母做信号。后来复明也是第一时间回家里给父母留字条。奇迹这种事，谁说的准呢。 每天滴眼药戴墨镜的姑娘患有结膜炎。萨拉马戈多次描写过她为自己滴眼药水的情景。或许是习惯，又或许是这无尽的绝望中仍抱有一丝希望，尽管这一切看起来很可笑。而后半部分，又多次从医生妻子的角度诉说，“她的眼病已经治好了，可是她不知道”。。。 悲伤超越了爱情宿舍里还有一对夫妻，很少说话。因为他们当下的悲伤超越了爱情。是啊，每个人都丧失了最基本的生活能力，为了活下去身心俱疲，甚至已经不能称为‘人’了，又有什么爱情可言呢。 灾难催生奇妙的情感也不是都这么悲观。戴墨镜的姑娘和戴眼罩的老人之间，产生了一种很奇妙的情感。我认为与其说是爱情，更多的像是身处绝境的人之间的惺惺相惜，是一种坚不可摧的亲情。于是他们许下守护彼此一生的誓言，纵使老人的年龄足以做姑娘的父亲。就算后来恢复了视力，姑娘真挚地说，“我看到了你满脸皱纹，谢顶，头发花白，但你就是我想一起生活的人” 最后还想提一下这本小说很有特点的标点用法~全篇对话都没有冒号、引号，没有换行。还是译者范维信教授在不同人物说的话之间加了分号以区分。叙事与对话混杂在一起，或许萨拉马戈这样是为了尽量以一个旁观者的角度讲述这个故事吧，不加入任何情感。 虽然已经‘剧透了很多小说的情节’，但震撼人心的部分远远不止这些，如果你有足够的勇气，就拿起这本书吧。 仔细品味，这盲人的世界，又何尝不是现今世界的一个缩影。","categories":[],"tags":[{"name":"书评","slug":"书评","permalink":"http://yoursite.com/tags/书评/"}]},{"title":"javascript之this的绑定","slug":"2016-12-24-javascript_this","date":"2016-12-24T11:38:03.000Z","updated":"2016-12-24T11:38:03.000Z","comments":true,"path":"2016/12/24/2016-12-24-javascript_this/","link":"","permalink":"http://yoursite.com/2016/12/24/2016-12-24-javascript_this/","excerpt":"前言今天在udacity上听课~觉得老师对javascript里面的this讲得很清楚，总结一下~","text":"前言今天在udacity上听课~觉得老师对javascript里面的this讲得很清楚，总结一下~ 基本原则 看点的左边是什么，this就绑定什么。（回调函数、new有例外,见原则3 &amp; 5） 没有点的话，this就绑定默认值——全局 回调函数大多数是全局，若用一个function包起来则满足原则一 functionName.call可以绑定任意变量 new r.method(g,b);的this，是一个新生成的对象[总结的可能不大清楚，下面看看例子吧~]举例12345678910111213141516var func=function(x,y)&#123; console.log(this,x,y);&#125;var r=&#123;id:'r'&#125;,g=&#123;id:'g'&#125;,b=&#123;id:'b'&#125;;r.method=func;// -------下面是调用啦-----------------func(g,b); // &lt;global&gt;,g,br.method(g,b); // r,g,bfunc.call(r,g,b); // r,g,bsetTimeout(func,10); // &lt;global&gt;,undefined,undefinedsetTimeout(r.method,10); // &lt;global&gt;,undefined,undefinedsetTimeout(r.method(g,b),10); // &lt;global&gt;,g,bsetTimeout(function()&#123;r.method()&#125;,10);// r,undefined,undefinedsetTimeout(function()&#123;r.method(g,b)&#125;,10);// r,g,bconsole.log(this);//&lt;global&gt;new r.method(g,b);//&lt;object&gt;,g,b 解释首先说一下上面提到的全局&lt;global&gt;，是一个默认存在的Window对象~我在浏览器控制台看到它大概长这样：Window {speechSynthesis: SpeechSynthesis, caches: CacheStorage, localStorage: Storage, sessionStorage: Storage, webkitStorageInfo: DeprecatedStorageInfo…} 前5行就不解释了~~下面的就按照行号来说啦 7 没有点，满足原则2。this绑定全局。8 点左边是r，满足原则1。this绑定r9 运用原则4：function.call(&lt;这是一个可选参数&gt;,paramaters...) 而这个可选参数就是此函数this绑定的对象。 ‘那如果这里我写func.call(g,b)是不是它的this又是全局了呢’你可能会问 并不是。因为它是从前往后对应参数的，意思就是你传了两个参数的话，也是第一个参数作为那个可选参数，第二个参数才作为该函数接口的参数，所以如果func.call(g,b)的话，输出就是g,b,undefined了~10 setTimeout是回调函数，符合原则3的前半句。this绑定全局11 依旧满足原则3前半句。此处虽然有 点 ，但回调函数特殊。下面有解释12 跟11同理，列出来是想表示回调函数也可以正常传参13 满足原则3后半句，因为点之前是r，所以this绑定r。下面有解释14 跟13同理15 即使不在方法里，this也不是undefined哦~依旧是默认的全局~16 这个有点迷。老师说带new的话，this绑定的是一个新生成的对象，而且每这样new一个，就会新生成一个对象。//这种情况没太理解，那个新生成的对象意义到底是什么。希望了解的大神告知~谢谢！~~ 关于11、13的原理解释setTimeout是js库里面自带的方法，它的结构也无非就是下面这样123456setTimeout(func,time)&#123; wait_for_a_while(time) //这方法是我yy的啊不要当真，就是这么个意思 ----some codes----- func(); //一定会在某个地方调用传进来的方法 ----some codes------&#125; 于是，11那种r.method的，r.method仅仅是作为一个方法传给了setTimeout，相当于r.method只是这个方法的名字，而不会被解读成r的method方法就是说,在setTimeout里，它根本不知道r的存在可以类比成下面这种情况：（java语言）有一个方法的接口是public void test(int x)有一个对象obj，有int类型的属性id，而test(obj.id)这样的调用并不会把obj暴露给方法test，对于它来说x只是一个整数而已。//啰嗦了这么多。。。发现自己表达能力不太够。。。哪里没理解或者有不同见解的欢迎提出！~ 而，13那种用function包起来的~setTimeout在执行的时候就会去执行这个匿名函数的函数体~~这个函数体里有一句r.method(),于是setTimeout就会执行r.method啊~于是就满足原则1啦~ 哦对了~圣诞快乐！！！~~~~","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"给github pages设置ssl(包含改了域名的情况)","slug":"2016-12-21-github_pages_setup_ssl","date":"2016-12-21T09:02:43.000Z","updated":"2016-12-21T09:02:43.000Z","comments":true,"path":"2016/12/21/2016-12-21-github_pages_setup_ssl/","link":"","permalink":"http://yoursite.com/2016/12/21/2016-12-21-github_pages_setup_ssl/","excerpt":"前言最近才知道http和https的区别，然后看到好多文章说http相比较于https怎么怎么没有前景。本来也是觉得我一个博客的网站就http吧也无所谓。但是有的浏览器会警告，看着就很心塞啊，于是找了找教程尝试了一下~如果是用github pages搭建的博客，有两种可能：有没有设置自己的域名~","text":"前言最近才知道http和https的区别，然后看到好多文章说http相比较于https怎么怎么没有前景。本来也是觉得我一个博客的网站就http吧也无所谓。但是有的浏览器会警告，看着就很心塞啊，于是找了找教程尝试了一下~如果是用github pages搭建的博客，有两种可能：有没有设置自己的域名~ 情况1.没有重新设置域名就是你的url是yourname.github.io这种的，这个就比较简单啦~github直接就可以配置(不过这个我没试~)在github上进入你名为yourname.github.io的仓库-&gt;settings然后找到图片中的Enforce HTTPS，勾选上就ok了（因为我设置了自己的域名所以它不让我选） 情况2.设置了自己的域名比如我设置成了disinuo.me 注册CloudflareCloudflare是什么？它是一家免费CDN网站加速服务公司，还提供实时安全保护服务和网络优化等。【恩这是google到的，我现在还不太懂CDN是什么。。想了解Cloudflare的话可以去他官网主页看看~^ ^】 填写域名比如我是disinuo.me,点begin scan就开始扫描你的网站啦扫描结果如下，然后点continue 选择计划默认是Business Website。我选的是上面那个免费的~^ ^ 修改NameServer会列出了两个nameserver，提示你去域名商那里修改我是在万网购买的域名~于是去阿里云的域名控制台修改点管理会出现下图之后修改成cloudflare提供的nameserver就好啦~ 设置为flexible ssl其实这个默认就是设置成flexible的，就是说这一步可以不用管~不过还是在这里贴一下去哪设置好了，就在主页点图示的flexible就可以修改啦 耐心的等待然后就好啦~就是等啦！他官网上面说最多24小时可以生效。我以为它就是客气客气。。。没想到我真的等了24小时。。。所以如果好久也没生效别急哈~再等等1之后就可以通过`https://yoursite`访问啦 总结 其实Cloudflare的引导做的很好的，每一步都说的很清楚~也许你都不需要跟着本教程一步一步的走，不过还是希望多少帮助到了你一点~^ ^ 现在访问http://yoursite还不能自动跳转到https的，待我再研究研究再来更新~ 参考链接：Set Up SSL on Github Pages With Custom Domains for Free cloudflare.com是什么？新手入门中文注册使用教程","categories":[],"tags":[{"name":"ssl","slug":"ssl","permalink":"http://yoursite.com/tags/ssl/"},{"name":"github","slug":"github","permalink":"http://yoursite.com/tags/github/"}]},{"title":"preparedStatement 报错 Parameter index out of range (1 > number of parameters, which is 0)","slug":"2016-12-18-preparedStatement_Parameter_index_out_of_range","date":"2016-12-18T15:26:43.000Z","updated":"2016-12-18T15:26:43.000Z","comments":true,"path":"2016/12/18/2016-12-18-preparedStatement_Parameter_index_out_of_range/","link":"","permalink":"http://yoursite.com/2016/12/18/2016-12-18-preparedStatement_Parameter_index_out_of_range/","excerpt":"前言还是在写j2ee作业。。。（写这作业真的是遇到了好多坑啊。。。orz），servlet跟数据库交互，进行sql查询嘛。本来都好好的也测试过的，然后sql语句换了一个复杂一点的就开始报如题的错。。。我想这是没读到我的问号喽？可是问号明明就在那里orz","text":"前言还是在写j2ee作业。。。（写这作业真的是遇到了好多坑啊。。。orz），servlet跟数据库交互，进行sql查询嘛。本来都好好的也测试过的，然后sql语句换了一个复杂一点的就开始报如题的错。。。我想这是没读到我的问号喽？可是问号明明就在那里orz 部分代码123456789101112String sql=\"SELECT exam.id as examID,\"+\"exam.name as examName,\"+\"exam.date as examDate,\"+\"selectC.cid as courseID,\"+\"course.name as courseName \"+\"FROM selectC,exam,course \"+\"WHERE selectC.cid = exam.cid \"+\"AND course.id=selectC.cid \"+\"AND selectC.sid = ?\";pstmt=cnn.prepareStatement(sql);pstmt.setString(1, param);ResultSet rs=pstmt.executeQuery(); 看起来没毛病吧!我后来都想是不是问号打成中文字符的问号了，改了一下还是不行然后。。。求助google，也没人遇到类似问题， 报同样错的网友们大多是,把问号用单引号包起来了 像这样String sql=&quot;SELECT * FROM user WHERE id = &#39;?&#39;&quot;** # 如果你是这样就把单引号去掉吧~再跑一下看看是不是不报这个错了^ ^然后我也不知道哪来的灵感。。把sql变成了下面这样1String sql=\"SELECT exam.id as examID,exam.name as examName,exam.date as examDate,selectC.cid as courseID,course.name as courseName FROM selectC,exam,course WHERE selectC.cid = exam.cid AND course.id=selectC.cid AND selectC.sid = ?\"; 是的没错就是把追加形式的变成了一个字符串而已然后！！ 然后！！！就好了。。。orz我只是觉得码代码的时候这样写一串看着太累就拆开了呀。。。好委屈。。。 找原因然后我想找一找为什么这么改就好了。。这两个有什么区别呢。。。没找到而且我今天又试了试（写这里的时候是出现bug的第二天），把sql语句又改成原来追加的形式。。它又不报错了。。。 总结所以不好意思浪费了看本篇文章的你这么多时间。。不过还是希望你如果遇到了同样的报错，可以通过文中红色字提到的 把包裹问号的单引号去掉成功修复~ ^ ^","categories":[],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"},{"name":"j2ee","slug":"j2ee","permalink":"http://yoursite.com/tags/j2ee/"},{"name":"sql","slug":"sql","permalink":"http://yoursite.com/tags/sql/"},{"name":"jdbc","slug":"jdbc","permalink":"http://yoursite.com/tags/jdbc/"}]},{"title":"mac mysql5.7 安装完无法登录使用","slug":"2016-12-15-mysql5.7_login_fail","date":"2016-12-15T12:16:43.000Z","updated":"2016-12-15T12:16:43.000Z","comments":true,"path":"2016/12/15/2016-12-15-mysql5.7_login_fail/","link":"","permalink":"http://yoursite.com/2016/12/15/2016-12-15-mysql5.7_login_fail/","excerpt":"前言mysql 5.7 安装完有默认初始密码了，而且不是root… 背景准备写j2ee作业，老师让安装mysql5.7,我下载的是dmg文件。可是安装完之后，我打开终端输入mysql1$ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: NO)","text":"前言mysql 5.7 安装完有默认初始密码了，而且不是root… 背景准备写j2ee作业，老师让安装mysql5.7,我下载的是dmg文件。可是安装完之后，我打开终端输入mysql1$ERROR 1045 (28000): Access denied for user 'root'@'localhost' (using password: NO) 然后我又输入mysql -u root -p，之后把安装的时候弹窗提示的初始密码输进去 [对就是超奇怪的一串字符]。。还是不行 解决办法还是在stackoverflow上找到了解决办法！贴过来~123456789101112# 先打开一个终端窗口，然后执行下面指令# 执行下面stop这条指令我会报错,但手欠把那个终端关了忘记什么错了。。# 反正查了一下这指令是关闭mysql服务器的，# 我就直接手动去【系统偏好设置】那里关的$sudo /usr/local/mysql/support-files/mysql.server stop $sudo /usr/local/mysql/bin/mysqld_safe --skip-grant-tables# 这时不要关这个窗口，新打开一个终端窗口$sudo /usr/local/mysql/bin/mysql -u rootmysql&gt;use mysqlupdate user set authentication_string=password('yourNewPassword') where user='root';# yourNewPassword换成你要设置的密码 然后就大功告成啦！~ 感谢stackoverflow的大大这里是stackoverflow的原回答但是我刚注册声誉值不够不能点赞。。。orz如果这也刚好解决了你的问题而且你声誉值够高的话~去点个赞吧！~~~^o^ PS：这两天注册了好几个技术类问答平台。。都好多权限限制。。。作为新手玩家的我感受到了世界深深的恶意。。。我要争取总去刷一刷！","categories":[],"tags":[{"name":"mysql","slug":"mysql","permalink":"http://yoursite.com/tags/mysql/"}]},{"title":"git分支管理(二)---合并","slug":"2016-12-14-git_branch_merge","date":"2016-12-14T12:35:43.000Z","updated":"2016-12-14T12:35:43.000Z","comments":true,"path":"2016/12/14/2016-12-14-git_branch_merge/","link":"","permalink":"http://yoursite.com/2016/12/14/2016-12-14-git_branch_merge/","excerpt":"前言本来没想到分支能写这么长的。。于是就拆成两篇了~想看另一篇的可以戳这里 git分支管理(一)—创建、提交、切换^ ^","text":"前言本来没想到分支能写这么长的。。于是就拆成两篇了~想看另一篇的可以戳这里 git分支管理(一)—创建、提交、切换^ ^ 指针机制git 的每个commit都是一个节点，每条分支都有一个head指针指向该分支最新的节点。比如下图有紫色分支和绿色分支，每个圆圈是一个commit节点，红色外框的圆圈是该分支的head指针指向的节点。 紫色是master分支，绿色是dev分支 两种合并方式 Fast Forward --ff这是一种当其中一个分支没有新节点时的默认的合并方式（以下简称FF）(就是你不必加--ff这个参数，如果可以用这种方式合并git自然会用这种方式的)1234git merge dev# 当前在master分支下，执行此命令会默认进行fast forward 合并# 将dev合并到master# 合并之后提交线变成一条线，两个分支的head是同一个节点 Not Fast Forward --no-ff 1234git merge --no-ff dev# 新建一个节点！# 合并之后依旧可以从提交线中清晰地看出不同分支的commit历史# dev分支的head没有变哦 执行完这个指令会进入vim，让你输入新节点要commit的信息 作为一个刚会用vim没多久的小白。。贴一下vim基本用法好了~~ 输入i之后允许输入；输入结束后按Esc；:wq保存并退出vim 两者比较 最主要的差别其实就是提交线图不同：FF是一条线，noFF是多条线。 NoFF的优点很强势~ 比如项目开发过程中，一般都是用master放比较稳定的代码，而在另外创建一个分支上写代码，测试好了再合并到master上。可能会有不同的功能点用不同的分支啊，或者不同的开发者用不同的分支之类的。如果是NoFF合并，就可以用git可视化工具清晰地看到各个分支的详细情况，便于追踪。 比如下图是我上学期的一个大作业。我们团队四个人的提交线的部分(一个master和每人一个分支)~ 而如果是FF合并就惨了。。都在一条线上。。很难找的~ 不过要是很小型的项目的话用FF会省事一点喽，就不用每次合并都搞一个新节点出来~ 自己视情况权衡利弊吧 ^ ^ 总结写这篇博客之前查了好多资料，好多人说FF合并，分支删掉之后会丢失分支信息，我当时还以为是节点会丢失~然而亲测并没有。所以猜测那些人指的应该是会丢失分支的独立性吧（就是都混在一起看不出谁是谁啦&gt; &lt;）~我还试了一下，两个分支如果相对于分离点都有新节点(就像本文的第一张图)，但是改动的代码没有冲突，git会不会默认使用FF合并。亲测不会。而且我还试着加--ff参数强制FF合并，也还是执行了NoFF合并~就这些吧~等哪天研究一下git提交冲突的再来发文~~ PS：为了测试各种情况，快看我今天github上activity程度哈哈哈~创我历史新高~~~ 参考：Benjamin Sandofsky的Understanding the Git Workflow阮一峰的《git分支管理》廖大大的《创建与合并分支》【文中前3张图都来自Understanding the Git Workflow~】","categories":[],"tags":[{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"}]},{"title":"git分支管理(一)---创建、提交、切换","slug":"2016-12-14-git_branch","date":"2016-12-14T08:03:43.000Z","updated":"2016-12-14T08:03:43.000Z","comments":true,"path":"2016/12/14/2016-12-14-git_branch/","link":"","permalink":"http://yoursite.com/2016/12/14/2016-12-14-git_branch/","excerpt":"前言因为怕代码被我玩坏。。。一直没用过branch。。。今天查了一波~把觉得比较有用的知识整理下~","text":"前言因为怕代码被我玩坏。。。一直没用过branch。。。今天查了一波~把觉得比较有用的知识整理下~ 创建分支1234git branch dev #创建一个名叫dev的分支，dev不用加引号git checkout dev #切换到dev分支#上述两步可以合并为一步git checkout -b dev #创建并切换到dev分支 查看分支1234git branch #可以查看所有分支#会看到如下输出，*代表当前处于那个分支下* devmaster 在分支上提交过程与普通的提交一样比如对README.md进行了修改，想在dev分支上提交首先要保证切换到分支下 git checkout dev12git add README.mdgit commit -m \"branch test\" 切换分支执行完4 就完成了在dev分支上的提交啦现在我们可以git checkout master切换回主分支看看~然后就会发现README.me是修改前的样子~~~【再切换回dev分支README.me又变成修改后了。我不会承认我来回切换了好多次哈哈哈。。。还是觉得很神奇的】 5.1.一个小思考结合网友们的讨论，以及n多次的试验，我发现如果对某个文件改动，但是不add就切换分支，工作区的改动都是在的（工作区说白了就是本地你看到的代码），即便是add了但不commit就切换分支也依旧如此。而且如果你改动了某个文件，在分支A下git add，但是在分支B下git commit的，最终这个修改是会记录在分支B下的。这也算是一定程度上验证了我在git修改撤销那篇文章里画的图^ ^ 那为什么在分支间的切换，本地的工作区代码会有不同呢？下面说下我的理解：add+commit相当于是把改动从工作区【转移】到本地版本库的过程,就是说commit之后工作区就clear了。 对于工作区clear了的情况，工作区代码会显示成版本库最后一次commit的样子； 对于工作区不是clear的（就是有改动没有commit），工作区代码会将这些没commit的代码显示出来~所以上面我玩的不亦乐乎的分支切换[捂脸]就是因为改动都commit了~工作区clear了~两个分支就会分别显示各自最后一次commit的代码啦!^ ^ push新分支接下来！如果想push这个新的分支以至于在github可以看到，就要执行这个带参数的push1234git push --set-upstream origin dev # 直接git push会报错的# fatal: The current branch test has no upstream branch.# To push the current branch and test the remote as upstream 分支合并我发现好像大部分情况还是本地保留分支的，只是在分支上进行开发，然后合并到主分支上。所以分支的合并显得尤为重要~而且分支的合并还是有不同方式的【感觉再写有点长了，想看分支的合并我们下一篇见吧~^ ^】 参考：Benjamin Sandofsky的Understanding the Git Workflow阮一峰的《git分支管理》廖大大的《创建与合并分支》","categories":[],"tags":[{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"}]},{"title":"mac Dock图标错误、消失","slug":"2016-12-14-mac_Dock_icon_wrong","date":"2016-12-13T23:15:43.000Z","updated":"2016-12-13T23:15:43.000Z","comments":true,"path":"2016/12/14/2016-12-14-mac_Dock_icon_wrong/","link":"","permalink":"http://yoursite.com/2016/12/14/2016-12-14-mac_Dock_icon_wrong/","excerpt":"","text":"突然发现自己Dock里面出现了两个ppt，鼠标分别移过去发现是firefox的图标变成ppt的图标了。。。这么醉的事情我还是第一次遇到。。。然后赶紧去应用程序那边看，firefox的图标还是正常的。。。于是我就把它从Dock中删除再重新加入，无济于事后来在Mac讨论区看到网友说是使用CleanMyMac的锅。。。然后找到了解决办法！ 打开终端执行这两条命令就好12rm ~/Library/Application\\ Support/Dock/*.db;killall Dock 上述命令是重置dock的~适用于图标消失【有的网友遇到的问题】和博主这种图标错误的情况~ps：我还怕出事情事先备份了一下里面的db文件，，亲测好用~可放心食用^ ^","categories":[],"tags":[{"name":"mac","slug":"mac","permalink":"http://yoursite.com/tags/mac/"},{"name":"CleanMyMac","slug":"CleanMyMac","permalink":"http://yoursite.com/tags/CleanMyMac/"}]},{"title":"qq号取消对第三方网站的授权","slug":"2016-12-13-qq_cancel_authority","date":"2016-12-13T07:10:42.000Z","updated":"2016-12-13T07:10:42.000Z","comments":true,"path":"2016/12/13/2016-12-13-qq_cancel_authority/","link":"","permalink":"http://yoursite.com/2016/12/13/2016-12-13-qq_cancel_authority/","excerpt":"这是一个取消qq账号对其他网站，app的授权的链接！ https://connect.qq.com/manage.html#/appauth/user但是直接在qq或者微信里是打不开的会报错","text":"这是一个取消qq账号对其他网站，app的授权的链接！ https://connect.qq.com/manage.html#/appauth/user但是直接在qq或者微信里是打不开的会报错所以要换个浏览器～亲测 chrome，safari 可以，火狐不可以 ，其他的都没试了不清楚。然后要重新登录一下 登陆成功界面就如下图【我授过的网站有7页orz不要问我为什么。。好多网站自己都没听过】然后下图取消授权就可以了取消完界面是不会自动刷新的。。所以你可以搞完一页再一起刷新成功后会有下图的提示～感觉这是个还在开发中的平台一样。。希望qq维护人员能走点心。。。","categories":[],"tags":[{"name":"qq","slug":"qq","permalink":"http://yoursite.com/tags/qq/"}]},{"title":"git 修改撤销","slug":"2016-12-12-git_note","date":"2016-12-12T15:38:42.000Z","updated":"2016-12-12T15:38:42.000Z","comments":true,"path":"2016/12/12/2016-12-12-git_note/","link":"","permalink":"http://yoursite.com/2016/12/12/2016-12-12-git_note/","excerpt":"用github这么久一些基本的东西还是搞不清，今天终于google了一波研究了一下 首先要搞懂4个概念：工作区、暂存区、本地版本库、远程版本库为了表意清晰一点，就只画正向的关系啦~关系图如下【其实说白点，工作区，就是本地ide或者记事本里正码着的代码】","text":"用github这么久一些基本的东西还是搞不清，今天终于google了一波研究了一下 首先要搞懂4个概念：工作区、暂存区、本地版本库、远程版本库为了表意清晰一点，就只画正向的关系啦~关系图如下【其实说白点，工作区，就是本地ide或者记事本里正码着的代码】 想丢弃工作区里修改的文件（在执行add之前)直接git checkout -- &lt;file&gt;执行完这步操作，工作区的指定文件就会被版本库里的最新版本覆盖~可以执行git checkout .丢弃工作区的所有文件（注意checkout和 . 之间有个空格）不过这个操作威力很大哦~要谨慎 想丢弃暂存区的文件这里的丢弃其实有点歧义啦，一种是撤销对该文件的add，但工作区仍然保留；一种是既撤销add，工作区也丢弃 先说第一种：执行git reset HEAD &lt;file&gt; 即可此时可以用git status检查一下状态，会发现有文件名为红色的提示，说该文件not staged（就是没添加到暂存区）12345Changes not staged for commit: (use \"git add &lt;file&gt;...\" to update what will be committed) (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory) modified: cat/cat.html 可以看到终端还会暖心的提醒你有两种操作，第二种checkout就是前面2.提到的，也是这一点的第二种情况——既撤销add，工作区也丢弃~就是先执行git reset HEAD &lt;file&gt;，再执行git checkout -- &lt;file&gt;，就可以把已经添加到暂存区的文件，彻底的从工作区也丢弃了。 如果commit了文件A和文件B，但是发现A不应该commit。。。这种，，我目前还不知道有什么好方法，，能撤销A的同时还保留B的修改。。。只能手动copy一份B的代码，然后版本回退$ git reset --hard HEAD^ ，再把刚备份的B粘贴过来，再只commit一下B。。。所以为了避免这种尴尬的情况，记得写一点就commit一下！养成好习惯~~~ 参考文章：（本文版本回退只是提了一嘴~更详细的信息可以戳下面~ ^ ^）廖大大的《撤销修改》廖大大的《版本回退》git官网文档","categories":[],"tags":[{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"},{"name":"版本库","slug":"版本库","permalink":"http://yoursite.com/tags/版本库/"}]},{"title":"JavaScript 变量声明","slug":"2016-12-11-javascript_declaration","date":"2016-12-11T14:38:42.000Z","updated":"2016-12-11T14:38:42.000Z","comments":true,"path":"2016/12/11/2016-12-11-javascript_declaration/","link":"","permalink":"http://yoursite.com/2016/12/11/2016-12-11-javascript_declaration/","excerpt":"更新日志 日期 描述 2017-01-24 发现名字不太合适。。。改个名字。。。 2017-01-28 原来那个现象叫“变量提升”！~~ 发现这一块很迷啊。。首先来看下问题~123456789var foo = 1;function bar() &#123; alert(foo); if (!foo) &#123; var foo = 10; &#125; alert(foo);&#125;bar(); 你猜两个输出分别是什么呢~答案是undefined和10哦！答错了的话就跟我一探究竟吧！^ ^","text":"更新日志 日期 描述 2017-01-24 发现名字不太合适。。。改个名字。。。 2017-01-28 原来那个现象叫“变量提升”！~~ 发现这一块很迷啊。。首先来看下问题~123456789var foo = 1;function bar() &#123; alert(foo); if (!foo) &#123; var foo = 10; &#125; alert(foo);&#125;bar(); 你猜两个输出分别是什么呢~答案是undefined和10哦！答错了的话就跟我一探究竟吧！^ ^其实主要是搞明白第一个为什么是undefined，这个搞明白了后面那个执行完if语句自然就是10了。 JavaScript的声明函数声明&amp;变量声明形如 function foo() {}和var foo的分别是函数声明和变量声明。而JavaScript解释器会把这些声明，统一移到该代码所在作用域的顶部—这个现象叫变量提升(参考 ben cherry的JavaScript Scoping and Hoisting)比如如下代码1234function foo() &#123; bar(); var x = 1;&#125; 会被解释成下面的样子12345function foo() &#123; var x; bar(); x = 1;&#125; 所以本文开头提到的代码会被解释成12345678910var foo = 1;function bar() &#123; var foo;//注意看这里 alert(foo);//A if (!foo) &#123; foo = 10;//注意看这里 &#125; alert(foo);//B&#125;bar(); 所以alertA处的foo仅仅被声明，还没有被赋值，就是undefined；之后if条件为真，将foo赋值为10，所以alertB处输出10~ 那么同理 想一想下面这段代码输出什么呢~123456789var a = 1;function b() &#123; a = 10; alert(a);//A return; function a() &#123;&#125;&#125;b();alert(a);//B 答案是A:10，B:1哦~解释一下：跟上面变量声明一样的道理啦，这里的函数声明function a() {}会被解释器提到a=10;的前面去，于是a=10;赋值的其实不是函数b外面的变量a，而是函数b内部的函数a(是不是有点晕。。其实不搞这些重名就没这么多事了。。但是多了解下原理总是好事~^ ^)所以也不要以为return后面的就是死代码哦~这就是一个反例","categories":[],"tags":[{"name":"javascript","slug":"javascript","permalink":"http://yoursite.com/tags/javascript/"}]},{"title":"mac基本指令无法识别。。。","slug":"2016-11-26-instructionDisappear","date":"2016-11-26T06:54:42.000Z","updated":"2016-11-26T06:54:42.000Z","comments":true,"path":"2016/11/26/2016-11-26-instructionDisappear/","link":"","permalink":"http://yoursite.com/2016/11/26/2016-11-26-instructionDisappear/","excerpt":"故事是这样的本来在配环境的，结果不仅环境没配好，吃个饭之后再打开终端发现基本指令都不！能！用！了。。。比如sudo、ls、vi。。。按下回车的结果都是1-bash:sudo:command not found","text":"故事是这样的本来在配环境的，结果不仅环境没配好，吃个饭之后再打开终端发现基本指令都不！能！用！了。。。比如sudo、ls、vi。。。按下回车的结果都是1-bash:sudo:command not found 然后我就慌慌张张的谷歌了一波 还好有相同遭遇的小伙伴分享经验~~ 解决方法在终端输入1export PATH=\"/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\" 执行完之后那些指令就暂时可用啦~不过还要赶紧改一下.bash_profile 在终端输入1open -e ~/.bash_profile 在文本编辑器里打开该文件，加上这一行1export PATH=\"/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin\" 然后保存~就好啦~~ ^ ^","categories":[],"tags":[{"name":"mac","slug":"mac","permalink":"http://yoursite.com/tags/mac/"}]},{"title":"强行删除","slug":"2016-09-28-forceDelete","date":"2016-09-28T07:54:20.000Z","updated":"2016-09-28T07:54:20.000Z","comments":true,"path":"2016/09/28/2016-09-28-forceDelete/","link":"","permalink":"http://yoursite.com/2016/09/28/2016-09-28-forceDelete/","excerpt":"可解决文件名对应路径过长无法删除的情况 背景这不是昨天电脑重装了系统嘛，顺便格式化了所有盘（觉得太乱想重新搞一遍），然后跟hexo git有关的东西也要重新弄了。具体细节就不说了，反正是想把一个路径搞错的克隆的仓库删掉，但里面node_modules文件夹里，有路径很长的文件，删除的时候会跳出这样的警告","text":"可解决文件名对应路径过长无法删除的情况 背景这不是昨天电脑重装了系统嘛，顺便格式化了所有盘（觉得太乱想重新搞一遍），然后跟hexo git有关的东西也要重新弄了。具体细节就不说了，反正是想把一个路径搞错的克隆的仓库删掉，但里面node_modules文件夹里，有路径很长的文件，删除的时候会跳出这样的警告 在网上也找了好久，有一个说可以写一个bat文件执行删除指令的看起来还挺厉害的。。然而。。。敌人太强大（这里提示文件已删除但其实没有删掉） 解决方法！首先，随便找个地方新建一个空文件夹，名字随便。（最好路径、名字都简单点，方便接下来的操作） 然后在开始菜单输入cmd打开命令行。 输入指令1robocopy &lt;空文件夹路径&gt; &lt;要删掉的文件夹路径&gt; /purge #注意两个路径之间有一个空格，第二个路径与 /purge之间有一个空格 比如我执行的指令就是1robocopy D:\\help_delete D:\\github\\blog /purge 接下来会看到类似下面的输出然后这样这就是成功啦~去文件夹里看看吧~是不是已经删掉啦 说说原理~这个robocopy命令呢，有一个参数格式，robocopy 源 目标 [option]源和目标指的都是文件或文件夹的路径 当这个option是/purge的时候，这条命令代表删去 目标中，不存在于源的 文件/目录 所以当我们把源设置成空文件夹时，这条命令的执行就会删掉目标里的所有文件/目录~~~ 有没有很强势哈哈哈~~ 感兴趣的话可以了解更多robocopy指令的不同功能 ^ ^","categories":[],"tags":[{"name":"windows","slug":"windows","permalink":"http://yoursite.com/tags/windows/"}]},{"title":"markdown文件写的博客怎么加图片","slug":"2016-09-25-addImg","date":"2016-09-25T17:31:10.000Z","updated":"2016-09-25T17:31:10.000Z","comments":true,"path":"2016/09/26/2016-09-25-addImg/","link":"","permalink":"http://yoursite.com/2016/09/26/2016-09-25-addImg/","excerpt":"终于会加图片了~~~！","text":"终于会加图片了~~~！再次请教了陈云龙学长 初级版图片放哪里在与md文件的同一个目录下，新建与md文件同名的文件夹，然后把图片放进去 代码怎么写md文件里只需要在想加图片的地方这样写（比如我的图片名字是dog.jpg）1![](dog.jpg) #[]里面是alt text 写不写都行 不需要指定路径~因为执行hexo g指令的时候，这张图片会与对应的这篇博客生成的html文件放在同一目录下（在public文件夹里 感兴趣的话可以自己去看一下~） 还要改个配置打开根目录下的config.yml文件（注意不是themes文件夹里面的那个！别搞错了~~）找到里面的1post_asset_folder: false #个人文件夹是否启用 把false改成true~ 改进版上面是我一开始学会的方法，不过有个问题，就是在博客主页的界面看不到图片所以针对第一步第二步有点小改动。 图片放哪里在你的博客的文件夹里有一个叫 source的文件夹，在source里新建一个用来放图片的文件夹，名字随意。比如我的叫image然后把图片放进去。也可以再在image里给每篇博客建一个文件夹方便管理，当然这个随意啦~我是这样放我的图片的~ 代码怎么写md文件里只需要在想加图片的地方这样写（比如我的图片名字是toefl.png）123![](/image/2016-09-25-TOEFL/toefl.png)#[]里面是alt text 写不写都行#要注意image前面的“/”一定要写，表示根目录~ 解释初级版方法在主页看不到图片，是因为生成的public文件夹里，与主页html文件 同路径下是没有各篇博客的图片的。而改进版的方法通过指定image文件夹，就使得各个html文件都可以访问到那些图片啦~ Done~^ ^","categories":[],"tags":[{"name":"web","slug":"web","permalink":"http://yoursite.com/tags/web/"}]},{"title":"第一次考TOEFL~","slug":"2016-09-25-TOEFL","date":"2016-09-25T15:14:20.000Z","updated":"2016-09-25T15:14:20.000Z","comments":true,"path":"2016/09/25/2016-09-25-TOEFL/","link":"","permalink":"http://yoursite.com/2016/09/25/2016-09-25-TOEFL/","excerpt":"背景今天上午，去考托福啦~总体来说还是比预想的好一点的，因为实际上真正准备的时间是。。从开学到昨天。。就是。。不到一个月。。所以很虚导致预想很低总结下自己的感想好了^ ^","text":"背景今天上午，去考托福啦~总体来说还是比预想的好一点的，因为实际上真正准备的时间是。。从开学到昨天。。就是。。不到一个月。。所以很虚导致预想很低总结下自己的感想好了^ ^首先。整场考下来，真的没想象那么累，中间休息也不饿，也不太有之前以为的【身体被掏空】的感觉。。。不过面对电脑太久倒确实有点头晕晕的 加试的是听力，而且按大家出去休息的时间来看应该大部分同学都是加试的听力。 阅读阅读淡定的做 时间还是够的~【嗯必须要羞耻的承认 我一开始刷题的时候一个小时只能做两篇orz。。。后来在网上找了点做题技巧之类的，再加上刷了好多题逐渐找到了感觉~有一次做完3篇剩了8分钟！(此处应该有掌声！)虽然那是个偶然哈哈~不过基本都可以在规定时间内做完了】 之前自己模考的时候偶尔会用ctrl+f找单词定位。。。还在想考试的时候不会也可以用吧~~然后，哦，果然不可以用。。。 还有不造你们有没有注意过阅读部分前面的说明里有提到过 可能会有带下划线的单词，点击可以看到它的意思就是下面这句都是骗纸。我做这么多篇怎么从来没遇到过。。。亏我第一次看到这句话的时候还感慨TOEFL还挺人性化 听力加试了一个section的听力，就是一篇conversation两篇lecture，一共大概30分钟 考完两个section的听力之后觉得再听下去可能要蒙掉，于是接下来的几个continue我都没有点，等它自己时间到跳过去的 哈哈~多少也算是争取出来一点休息的时间 听力我一直不太擅长的，不过还是有点经验可以分享下~ 比如lecture类的，一般学生提问后 教授的回答，以及教授提问后 同学的回答，都是容易出题的地方。还有听力材料快结束的地方也容易出题，好多同学 当然包括我 听到最后容易走神，然后针对那部分出的那道题就跪了。。。还有一些，比如教授说话的时候，Because 然后顿一下 ，后面这一段一般也容易出题的~【这样看来好像还挺人性化的哈哈，仿佛在提示我们一样】 个人觉得conversation类的相对容易一点，因为一般对话内容比较贴近生活不容易走神，只要整篇跟着听下来再记一些细节一般应该没什么问题~ 口语都是泪的part。。。觉得前两篇最难。。。 最开始准备TOEFL的时候还以为后面几道口语比较难，毕竟又考察听力、阅读能力的。但后来才发现。。这种其实认真看认真听都还好，起码你知道要说什么。。。但是前面两道自由发挥的，要是是没见过的题目，再紧张一点，15秒根本不够好嘛orz。。。这一次前两题就血崩 哦不过自己比较满意的一点就是 说的时候没有羞涩，真的这点很重要的，一定至少要用平时讲话的音量说，不然听起来会很怂，而且可能效果也会不太好。不要觉得自己讲的不好，就不好意思说怕别人笑话，别人都在想自己的题目呢那有空听你~ 另外后面几道也都是套路啦 比如第3题，就是学校新搞了一个什么政策，先45秒看一段有关这个政策内容的材料，然后听一段两个学生讨论它，支持不支持的我都遇到过。 在看阅读材料的时候要注意【点】。它的大概结构就是先总体说下政策是什么，然后说几点这个决定的优点，一般两到三个。因为后面的听力里面 学生的观点基本是针对这几点给出自己的看法。所以阅读材料相当于先给我们透露了后面听力的主要内容啦~ 第5题，两个学生聊天，一个遇到了个trouble，然后他俩会聊出两个solution，然后让你总结trouble、solutions、和你建议哪个solution。每个solution都有优缺点的，一定要听全面。然后20秒准备的时候就要想好自己支持哪个，再简单说点原因~ 第6题，我一开始练的时候，最摸不清套路，因为是一篇不一定关于什么的讲座，所以完全不知道会问什么，听的时候就没有侧重点。 但后来我发现。。。教授从某个地方开始，会特别明显的说到first，second，third【好像一般都是三点~】，这就是答题的点~~~记下每一点的主旨句（一般就是第一句），以及尽量多的细节~（一般每一点都会有一个例子，，，但我经常手速不够记不完orz） 写作第一篇，看文章的时候除了每一段的主旨句，细节也要记点的，这样有助于后面听力的理解。而且我觉得时间是足够的~ 然后听的时候注意记细节！细节！因为主旨也不用记了 一般教授都是反对文章的，每一段都跟文章主旨相反就好~写作的时候文章会再度出现哒~~ 第二篇嘛就没啥经验了，我也就只练了一次。写之前先大概写下提纲吧，起码文章结构要清晰，一二三点展开来说 杂七杂八每个part都考完之后 界面会有一个对话框，问你report还是cancel（好像是这两个单词？。。。）反正大概就是问你要不要这次的成绩，听说有同学没仔细看 选了cancel的。。。好了你3个多小时的奋战就算白玩了 手动微笑。 所以记得要选report！！~ 考前会签一个保密协议 考前还要照个像，然后才电脑随机分配考位（照相这个没听人提过不知道是不是不同考场不一样哈~） 没啦~","categories":[],"tags":[{"name":"生活","slug":"生活","permalink":"http://yoursite.com/tags/生活/"}]},{"title":"噔噔噔有自己的博客啦！^o^","slug":"2016-09-16-myfirst","date":"2016-09-15T20:15:42.000Z","updated":"2016-09-15T20:15:42.000Z","comments":true,"path":"2016/09/16/2016-09-16-myfirst/","link":"","permalink":"http://yoursite.com/2016/09/16/2016-09-16-myfirst/","excerpt":"真可怕弄到这么晚。。。照着陈云龙学长的博客教程~用hexo+github总算是搭建出了博客的整体框架整体还算顺利~","text":"真可怕弄到这么晚。。。照着陈云龙学长的博客教程~用hexo+github总算是搭建出了博客的整体框架整体还算顺利~不过其中有一个问题耗费了好长时间。知道真相的我也是。。。orz：在git bash里面输入1hexo d #部署 一直没反应。。也不报错。。。后来还是靠度娘，发现原来是博客本地文件夹下的 _config.yml文件里面，修改deploy属性的时候，要注意每个冒号后面都要有一个空格","categories":[],"tags":[{"name":"web","slug":"web","permalink":"http://yoursite.com/tags/web/"}]}]}